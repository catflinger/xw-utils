{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./node_modules/moment/locale sync ^\\.\\/.*$","./src/app/ui/app-general/diary/diary.component.html","./src/app/ui/app-general/home/home.component.html","./src/app/ui/app-general/login/login.component.html","./src/app/ui/app-general/readme/readme.component.html","./src/app/ui/app-general/settings/settings.component.html","./src/app/ui/app/app.component.html","./src/app/ui/components/alert/alert.component.html","./src/app/ui/components/clue-editor/clue-editor.component.html","./src/app/ui/components/clue-list-item/clue-list-item.component.html","./src/app/ui/components/clue-list/clue-list.component.html","./src/app/ui/components/clue-text-chunk/clue-text-chunk.component.html","./src/app/ui/components/clue-text-control/clue-text-control.component.html","./src/app/ui/components/clue-text/clue-text.component.html","./src/app/ui/components/clues-preview/clues-preview.component.html","./src/app/ui/components/color-control/color-control.component.html","./src/app/ui/components/confirm-modal/confirm-modal.component.html","./src/app/ui/components/content-preview/content-preview.component.html","./src/app/ui/components/diary-alias-control/diary-alias-control.component.html","./src/app/ui/components/diary-settings-editor/diary-settings-editor.component.html","./src/app/ui/components/download-button/download-button.component.html","./src/app/ui/components/grid-properties-editor/grid-properties-editor.component.html","./src/app/ui/components/grid/grid.component.html","./src/app/ui/components/login-control/login-control.component.html","./src/app/ui/components/parse-error-hint/parse-error-hint.component.html","./src/app/ui/components/parse-result/parse-result.component.html","./src/app/ui/components/text-style/text-style.component.html","./src/app/ui/components/tip/tip.component.html","./src/app/ui/components/validation-message/validation-message.component.html","./src/app/ui/puzzle-editing/archive/archive.component.html","./src/app/ui/puzzle-editing/clues-editor/clues-editor.component.html","./src/app/ui/puzzle-editing/clues-start/clues-start.component.html","./src/app/ui/puzzle-editing/create-puzzle/create-puzzle.component.html","./src/app/ui/puzzle-editing/grid-editor/grid-editor.component.html","./src/app/ui/puzzle-editing/grid-start/grid-start.component.html","./src/app/ui/puzzle-editing/indy/indy.component.html","./src/app/ui/puzzle-editing/link-error/link-error.component.html","./src/app/ui/puzzle-editing/nav-error/nav-error.component.html","./src/app/ui/puzzle-editing/open-puzzle/open-puzzle.component.html","./src/app/ui/puzzle-editing/special-login/special-login.component.html","./src/app/ui/puzzle-editing/special-pdf/special-pdf.component.html","./src/app/ui/puzzle-editing/special-text/special-text.component.html","./src/app/ui/puzzle-editing/special/special.component.html","./src/app/ui/puzzle-editing/validate-puzzle/validate-puzzle.component.html","./src/app/ui/puzzle-publishing/publish-complete/publish-complete.component.html","./src/app/ui/puzzle-publishing/publish-grid/publish-grid.component.html","./src/app/ui/puzzle-publishing/publish-login/publish-login.component.html","./src/app/ui/puzzle-publishing/publish-options/publish-options.component.html","./src/app/ui/puzzle-publishing/publish-preamble/publish-preamble.component.html","./src/app/ui/puzzle-publishing/publish/publish.component.html","./src/app/ui/puzzle-solving/blogger/blogger.component.html","./src/app/ui/puzzle-solving/solver/solver.component.html","./node_modules/tslib/tslib.es6.js","./src/app/app-routing.module.ts","./src/app/app.module.ts","./src/app/model/archive-index.ts","./src/app/model/archive-item.ts","./src/app/model/archive.ts","./src/app/model/clue-text-chunk.ts","./src/app/model/clue.ts","./src/app/model/diary-entry.ts","./src/app/model/diary.ts","./src/app/model/grid-cell.ts","./src/app/model/grid-entry.ts","./src/app/model/grid-properties.ts","./src/app/model/grid-size.ts","./src/app/model/grid.ts","./src/app/model/interfaces.ts","./src/app/model/publish-options.ts","./src/app/model/puzzle-annotation.ts","./src/app/model/puzzle-info.ts","./src/app/model/puzzle.ts","./src/app/model/text-style.ts","./src/app/services/app-settings.service.ts","./src/app/services/archive-source.service.ts","./src/app/services/auth.service.ts","./src/app/services/common.ts","./src/app/services/content-generator/content-generator-list-layout.ts","./src/app/services/content-generator/content-generator-table-layout.ts","./src/app/services/diary.service.ts","./src/app/services/http-puzzle-source.service.ts","./src/app/services/local-storage.service.ts","./src/app/services/modifiers/add-clues.ts","./src/app/services/modifiers/add-grid.ts","./src/app/services/modifiers/add-placeholders.ts","./src/app/services/modifiers/clear-shading.ts","./src/app/services/modifiers/clear.ts","./src/app/services/modifiers/link-clues-to-grid.ts","./src/app/services/modifiers/make-cell-editable.ts","./src/app/services/modifiers/parse-text.ts","./src/app/services/modifiers/renumber-grid.ts","./src/app/services/modifiers/select-cells-for-edit.ts","./src/app/services/modifiers/select-clue-by-cell.ts","./src/app/services/modifiers/select-clue.ts","./src/app/services/modifiers/select-next-clue.ts","./src/app/services/modifiers/updare-grid-properties.ts","./src/app/services/modifiers/update-cell.ts","./src/app/services/modifiers/update-clue.ts","./src/app/services/modifiers/update-info.ts","./src/app/services/modifiers/update-preamble.ts","./src/app/services/modifiers/update-publish-option-text-style.ts","./src/app/services/modifiers/update-publish-options.ts","./src/app/services/parsing/text/line.ts","./src/app/services/parsing/text/parse-data.ts","./src/app/services/parsing/text/text-parsing-context.ts","./src/app/services/parsing/text/text-parsing-service.ts","./src/app/services/parsing/text/tokeniser/tokeniser.service.ts","./src/app/services/parsing/text/tokeniser/tokens.ts","./src/app/services/publication.service.ts","./src/app/services/puzzle-management.service.ts","./src/app/ui/app-general/diary/diary.component.css","./src/app/ui/app-general/diary/diary.component.ts","./src/app/ui/app-general/home/home.component.css","./src/app/ui/app-general/home/home.component.ts","./src/app/ui/app-general/login/login.component.css","./src/app/ui/app-general/login/login.component.ts","./src/app/ui/app-general/readme/readme.component.css","./src/app/ui/app-general/readme/readme.component.ts","./src/app/ui/app-general/settings/settings.component.css","./src/app/ui/app-general/settings/settings.component.ts","./src/app/ui/app/app.component.css","./src/app/ui/app/app.component.ts","./src/app/ui/common.ts","./src/app/ui/components/alert/alert.component.css","./src/app/ui/components/alert/alert.component.ts","./src/app/ui/components/clue-editor/clue-editor.component.css","./src/app/ui/components/clue-editor/clue-editor.component.ts","./src/app/ui/components/clue-list-item/clue-list-item.component.css","./src/app/ui/components/clue-list-item/clue-list-item.component.ts","./src/app/ui/components/clue-list/clue-list.component.css","./src/app/ui/components/clue-list/clue-list.component.ts","./src/app/ui/components/clue-text-chunk/clue-text-chunk.component.css","./src/app/ui/components/clue-text-chunk/clue-text-chunk.component.ts","./src/app/ui/components/clue-text-control/clue-text-control.component.css","./src/app/ui/components/clue-text-control/clue-text-control.component.ts","./src/app/ui/components/clue-text/clue-text.component.css","./src/app/ui/components/clue-text/clue-text.component.ts","./src/app/ui/components/clues-preview/clues-preview.component.css","./src/app/ui/components/clues-preview/clues-preview.component.ts","./src/app/ui/components/color-control/color-control.component.css","./src/app/ui/components/color-control/color-control.component.ts","./src/app/ui/components/color-control/colors.ts","./src/app/ui/components/confirm-modal/confirm-modal.component.css","./src/app/ui/components/confirm-modal/confirm-modal.component.ts","./src/app/ui/components/content-preview/content-preview.component.css","./src/app/ui/components/content-preview/content-preview.component.ts","./src/app/ui/components/diary-alias-control/diary-alias-control.component.css","./src/app/ui/components/diary-alias-control/diary-alias-control.component.ts","./src/app/ui/components/diary-settings-editor/diary-settings-editor.component.css","./src/app/ui/components/diary-settings-editor/diary-settings-editor.component.ts","./src/app/ui/components/download-button/download-button.component.css","./src/app/ui/components/download-button/download-button.component.ts","./src/app/ui/components/grid-properties-editor/grid-properties-editor.component.css","./src/app/ui/components/grid-properties-editor/grid-properties-editor.component.ts","./src/app/ui/components/grid/grid.component.css","./src/app/ui/components/grid/grid.component.ts","./src/app/ui/components/login-control/login-control.component.css","./src/app/ui/components/login-control/login-control.component.ts","./src/app/ui/components/parse-error-hint/parse-error-hint.component.css","./src/app/ui/components/parse-error-hint/parse-error-hint.component.ts","./src/app/ui/components/parse-result/parse-result.component.css","./src/app/ui/components/parse-result/parse-result.component.ts","./src/app/ui/components/text-style/text-style.component.css","./src/app/ui/components/text-style/text-style.component.ts","./src/app/ui/components/tip/tip-instance.ts","./src/app/ui/components/tip/tip.component.css","./src/app/ui/components/tip/tip.component.ts","./src/app/ui/components/validation-message/validation-message.component.css","./src/app/ui/components/validation-message/validation-message.component.ts","./src/app/ui/navigation/nav.service.ts","./src/app/ui/navigation/tracks/app-track-data.ts","./src/app/ui/navigation/tracks/create-track.ts","./src/app/ui/navigation/tracks/publish-grid-track.ts","./src/app/ui/navigation/tracks/publish-post-track.ts","./src/app/ui/navigation/tracks/solve-track.ts","./src/app/ui/navigation/ui-process.service.ts","./src/app/ui/pipes/html-as-is.pipe.ts","./src/app/ui/pipes/provider.pipe.ts","./src/app/ui/pipes/wordpress-id.pipe.ts","./src/app/ui/puzzle-editing/archive/archive.component.css","./src/app/ui/puzzle-editing/archive/archive.component.ts","./src/app/ui/puzzle-editing/clues-editor/clues-editor.component.css","./src/app/ui/puzzle-editing/clues-editor/clues-editor.component.ts","./src/app/ui/puzzle-editing/clues-start/clues-start.component.css","./src/app/ui/puzzle-editing/clues-start/clues-start.component.ts","./src/app/ui/puzzle-editing/create-puzzle/create-puzzle.component.css","./src/app/ui/puzzle-editing/create-puzzle/create-puzzle.component.ts","./src/app/ui/puzzle-editing/grid-editor/grid-editor.component.css","./src/app/ui/puzzle-editing/grid-editor/grid-editor.component.ts","./src/app/ui/puzzle-editing/grid-start/grid-start.component.css","./src/app/ui/puzzle-editing/grid-start/grid-start.component.ts","./src/app/ui/puzzle-editing/indy/indy.component.css","./src/app/ui/puzzle-editing/indy/indy.component.ts","./src/app/ui/puzzle-editing/link-error/link-error.component.css","./src/app/ui/puzzle-editing/link-error/link-error.component.ts","./src/app/ui/puzzle-editing/nav-error/nav-error.component.css","./src/app/ui/puzzle-editing/nav-error/nav-error.component.ts","./src/app/ui/puzzle-editing/open-puzzle/open-puzzle.component.css","./src/app/ui/puzzle-editing/open-puzzle/open-puzzle.component.ts","./src/app/ui/puzzle-editing/special-login/special-login.component.css","./src/app/ui/puzzle-editing/special-login/special-login.component.ts","./src/app/ui/puzzle-editing/special-pdf/special-pdf.component.css","./src/app/ui/puzzle-editing/special-pdf/special-pdf.component.ts","./src/app/ui/puzzle-editing/special-text/special-text.component.css","./src/app/ui/puzzle-editing/special-text/special-text.component.ts","./src/app/ui/puzzle-editing/special/special.component.css","./src/app/ui/puzzle-editing/special/special.component.ts","./src/app/ui/puzzle-editing/validate-puzzle/validate-puzzle.component.css","./src/app/ui/puzzle-editing/validate-puzzle/validate-puzzle.component.ts","./src/app/ui/puzzle-publishing/publish-complete/publish-complete.component.css","./src/app/ui/puzzle-publishing/publish-complete/publish-complete.component.ts","./src/app/ui/puzzle-publishing/publish-grid/publish-grid.component.css","./src/app/ui/puzzle-publishing/publish-grid/publish-grid.component.ts","./src/app/ui/puzzle-publishing/publish-login/publish-login.component.css","./src/app/ui/puzzle-publishing/publish-login/publish-login.component.ts","./src/app/ui/puzzle-publishing/publish-options/publish-options.component.css","./src/app/ui/puzzle-publishing/publish-options/publish-options.component.ts","./src/app/ui/puzzle-publishing/publish-preamble/publish-preamble.component.css","./src/app/ui/puzzle-publishing/publish-preamble/publish-preamble.component.ts","./src/app/ui/puzzle-publishing/publish/publish.component.css","./src/app/ui/puzzle-publishing/publish/publish.component.ts","./src/app/ui/puzzle-solving/blogger/blogger.component.css","./src/app/ui/puzzle-solving/blogger/blogger.component.ts","./src/app/ui/puzzle-solving/solver/solver.component.css","./src/app/ui/puzzle-solving/solver/solver.component.ts","./src/app/ui/services/app.service.ts","./src/app/ui/services/grid-editors/grid-cell-editor-empty-fluid.ts","./src/app/ui/services/grid-editors/grid-cell-editor-fluid.ts","./src/app/ui/services/grid-editors/grid-cell-editor.ts","./src/app/ui/services/grid-editors/grid-editor.service.ts","./src/app/ui/services/grid-editors/grid-editor.ts","./src/app/ui/services/grid-editors/grid-entry-editor-fluid.ts","./src/app/ui/services/grid-editors/grid-entry-editor.ts","./src/app/ui/services/grid-painter.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-SG\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-SG.js\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","export default \"<div class=\\\"row mt-3\\\">\\n    <div class=\\\"col\\\">\\n        <h4>Google diary entries</h4>\\n        <table class=\\\"table mt-3\\\"  *ngIf=\\\"entries\\\">\\n            <thead>\\n                <tr>\\n                    <th>Date</th>\\n                    <th>Blogger</th>\\n                    <th>Puzzle</th>\\n                </tr>\\n            </thead>\\n\\n            <tbody>\\n                <tr *ngFor=\\\"let entry of entries\\\">\\n                    <td>{{entry.solveDate | date : \\\"fullDate\\\"}}</td>\\n                    <td>{{entry.solver}}</td>\\n                    <td>{{entry.provider}}</td>\\n                </tr>\\n            </tbody>\\n        </table>\\n    </div>\\n</div>\\n\\n<div class=\\\"row mt-5\\\" *ngIf=\\\"entries\\\">\\n    <div class=\\\"col\\\">\\n        <app-diary-settings-editor></app-diary-settings-editor>\\n    </div>\\n</div>\\n\\n<div class=\\\"row mt-5\\\">\\n    <div class=\\\"col\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary mr-3\\\" (click)=\\\"onRefresh()\\\">Refresh</button>\\n    </div>\\n</div>\"","export default \"<div *ngIf=\\\"appStatus\\\" class=\\\"row mt-5\\\">\\n    <div class=\\\"col\\\">\\n        <p>\\n            Welcome to the fifteensquared crossword utilities.\\n            This application allows you to solve crosswords online and helps you create a blog for\\n            <a href=\\\"http://fifteensquared.net/\\\" target=\\\"fifteensquared\\\">fifteensquared</a>.\\n            To get started <span *ngIf=\\\"!credentials.authenticated\\\">first <a routerLink=\\\"/login\\\">login</a>.  You can then</span> download\\n            the most recent puzzle from the Latest menu above. Puzzles for other dates can be found from the Archive menu.\\n        </p>\\n    </div>\\n</div>\\n\\n<ng-container *ngIf=\\\"appStatus && puzzleList\\\">\\n    <div class=\\\"row mt-3\\\">\\n        <div class=\\\"col\\\">\\n            <h4>Saved puzzles</h4>\\n            <table class=\\\"table mt-3\\\">\\n                <thead>\\n                    <tr>\\n                        <th>Setter</th>\\n                        <th>Title</th>\\n                        <th>Date</th>\\n                        <th></th>\\n                        <th colspan=\\\"2\\\">Actions</th>\\n                    </tr>\\n                </thead>\\n\\n                <tbody>\\n                    <tr *ngFor=\\\"let info of puzzleList\\\">\\n                        <td>{{info.setter}}</td>\\n                        <td>{{info.title}}</td>\\n                        <td>{{info.puzzleDate | date : \\\"fullDate\\\"}}</td>\\n                        <td>{{info.wordpressId | wordpressId}}</td>\\n                        <td><button type=\\\"button\\\" class=\\\"btn btn-primary mr-3\\\" (click)=\\\"onOpenSaved(info.id)\\\">Open</button></td>\\n                        <td><button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onDelete(info.id)\\\">Delete</button>\\n                    </tr>\\n\\n                </tbody>\\n            </table>\\n\\n            <app-tip *ngIf=\\\"puzzleList && puzzleList.length === 0\\\" key=\\\"general\\\">You have no saved puzzles. Open a puzzle from the <em>Puzzle</em> menu to get started.</app-tip>\\n\\n        </div>\\n    </div>\\n</ng-container>\\n\\n<ng-container *ngIf=\\\"appStatus && gridList &&  gridList.length > 0\\\">\\n    <div class=\\\"row mt-3\\\">\\n        <div class=\\\"col\\\">\\n            <h4>Saved grids</h4>\\n            <table class=\\\"table mt-3\\\">\\n                <thead>\\n                    <tr>\\n                        <th>Title</th>\\n                        <th>Date</th>\\n                        <th></th>\\n                        <th colspan=\\\"2\\\">Actions</th>\\n                    </tr>\\n                </thead>\\n\\n                <tbody>\\n                    <tr *ngFor=\\\"let info of gridList\\\">\\n                        <td>{{info.title}}</td>\\n                        <td>{{info.puzzleDate | date : \\\"fullDate\\\"}}</td>\\n                        <td>{{info.wordpressId | wordpressId}}</td>\\n                        <td><button type=\\\"button\\\" class=\\\"btn btn-primary mr-3\\\" (click)=\\\"onOpenSavedGrid(info.id)\\\">Open</button></td>\\n                        <td><button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onDelete(info.id)\\\">Delete</button>\\n                    </tr>\\n\\n                </tbody>\\n            </table>\\n        </div>\\n    </div>\\n</ng-container>\\n\\n\\n\\n<!-- <button class=\\\"btn btn-primary\\\" (click)=\\\"test()\\\">TEST</button> result = {{result}} -->\"","export default \"<h3>Login</h3>\\n<p>Enter your fifteensquared username and password <span *ngIf=\\\"settings.sandbox\\\">(Using Sandbox)</span></p>\\n\\n<app-login-control *ngIf=\\\"appStatus\\\" (close)=\\\"onLoginClose()\\\"></app-login-control>\"","export default \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n        <h3>Readme</h3>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n        <h5>Browser compatibility</h5>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row justify-content-center\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n        <p> So far I have run the application successfully with <strong>Chrome</strong>,\\r\\n            <strong>Firefox</strong>,\\r\\n            <strong>Opera</strong>, <strong>Edge</strong> and <strong>Safari (iOS)</strong> browsers. I have also used the application successfully on a\\r\\n            mobile phone running Android with Chrome.\\r\\n        </p>\\r\\n        <p>\\r\\n            The application will function on <strong>Internet Explorer 11</strong> on Windows but has display issues where\\r\\n            the text and images overlap on some screen sizes.\\r\\n        </p>\\r\\n\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n        <h5>Known issues</h5>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row justify-content-center\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n        <pre>\\r\\nthe clue editor misinterprets letter counts like (6, 2 words) as _ _ _ _ _ _ / _ _\\r\\n\\r\\nIn the solver pressing ESC should cancel any highlighting\\r\\n\\r\\nWhen failing to download a puzzle distinguish between \\\"not found\\\" and general errors.  For example: when trying\\r\\nto open future puzzles in the Independent they may not be there yet.  This is not an error, so show a more appropriate \\r\\nerror message.\\r\\n\\r\\nSometimes the app does not correctly distinguish between a password mismatch and a network error, both show same message.\\r\\n\\r\\nGoogle diary shows wrong error message. If the user is not loggin in \\\"Failed to get diary\\\" is shown instead of \\\"Please log-in and try again\\\".\\r\\n\\r\\n        </pre>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n        <h5>Ideas for improvements</h5>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row justify-content-center\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n        <pre>\\r\\n\\r\\nIn the Solver screen make the clue editor moveable so that it does not obscure the grid.\\r\\n\\r\\nAdd a \\\"remember me\\\" cookie\\r\\n\\r\\nAdd a help tip somewhere to say that puzzles are automatically saved.  Also mention that saved puzzles are lost\\r\\nif you delete your browser history.\\r\\n\\r\\nAdd a backup feature so users can save/restore from a backup (if they want to delete their history)\\r\\n\\r\\nSort out return, tab, esc etc in editor so that it is easy to add solution and comments without using the mouse\\r\\n\\r\\nAdd a carte blanch tool\\r\\n\\r\\nAdd \\\"insert image from URL\\\" to clue and preamble editors\\r\\n\\r\\nInvestigate using REST API instead of XML-RPC - investigate adding OpenAuth to fifteensquared\\r\\n\\r\\nCreate favicon for the app - get Jessica to do this?\\r\\n\\r\\nLog usage statistics somewhere\\r\\n\\r\\nAdd a feedback facility somewhere. This could be permanent or just for the remainder of the development.\\r\\nPerhaps just a link to an email address?  Perhaps a page in the app where users can see the feedback\\r\\nfrom other users too.\\r\\n\\r\\nSend client-side errors to drurys.org for analysis (opt-in)\\r\\n        </pre>\\r\\n    </div>\\r\\n</div>\"","export default \"<h3 class=\\\"mt-3\\\">Settings</h3>\\n\\n<form [formGroup]=\\\"form\\\" class=\\\"form\\\">\\n\\n    <h5 class=\\\"mt-5\\\">Footer</h5>\\n\\n    <div class=\\\"form-group\\\">\\n        <p>To be displayed at the bottom of your posts</p>\\n        <quill-editor formControlName=\\\"footer\\\" format=\\\"object\\\"></quill-editor>\\n    </div>\\n    \\n    <h5 class=\\\"mt-5\\\">Solving and blogging options</h5>\\n\\n    <div formGroupName=\\\"general\\\">\\n        <div class=\\\"form-check\\\" *ngFor=\\\"let key of generalKeys\\\">\\n            <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" [formControlName]=\\\"key\\\">\\n            <label class=\\\"form-check-label\\\">{{settings.general[key].caption}}</label>\\n        </div>\\n    </div>\\n\\n    <h5 class=\\\"mt-5\\\">Help tips</h5>\\n\\n    <div formGroupName=\\\"tips\\\">\\n        <div class=\\\"form-check\\\" *ngFor=\\\"let key of tipKeys\\\">\\n            <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" [formControlName]=\\\"key\\\">\\n            <label class=\\\"form-check-label\\\">{{settings.tips[key].caption}}</label>\\n        </div>\\n    </div>\\n\\n    <h5 class=\\\"mt-5\\\">Publication options</h5>\\n    <ngb-alert type=\\\"warning\\\" *ngIf=\\\"form.value.sandbox\\\" [dismissible]=\\\"false\\\">\\n        <p>WARNING: posts will be published to the sandbox only.</p>\\n        <p>Your post will <i>not</i> appear on fifteensquared.net.</p>\\n    </ngb-alert>\\n    <div class=\\\"form-check\\\">\\n        <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" formControlName=\\\"sandbox\\\">\\n        <label class=\\\"form-check-label\\\">post to sandbox (for testing)</label>\\n    </div>\\n\\n    <div class=\\\"formGroup mt-5\\\">\\n        <button class=\\\"btn btn-primary mr-3\\\" type=\\\"button\\\" (click)=\\\"onSave()\\\">Save</button>\\n        <button class=\\\"btn btn-primary mr-3\\\" type=\\\"button\\\" (click)=\\\"onCancel()\\\">Cancel</button>\\n        <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"onReset()\\\">Reset all</button>\\n    </div>\\n\\n</form>\"","export default \"<div *ngIf=\\\"appStatus\\\" class=\\\"container\\\" style=\\\"padding-left: 0; padding-right: 0;\\\">\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col\\\">\\r\\n\\r\\n            <nav class=\\\"navbar navbar-expand-md navbar-dark bg-primary\\\">\\r\\n\\r\\n                <ul class=\\\"navbar-nav mr-auto\\\">\\r\\n                    <li class=\\\"nav-item\\\">\\r\\n                        <a class=\\\"nav-link\\\" (click)=\\\"onHome()\\\">Home</a>\\r\\n                    </li>\\r\\n                </ul>\\r\\n                <button class=\\\"navbar-toggler hidden-sm-up\\\" type=\\\"button\\\"\\r\\n                    (click)=\\\"isNavbarCollapsed = !isNavbarCollapsed\\\" data-target=\\\"#navbarsDefault\\\"\\r\\n                    aria-controls=\\\"navbarsDefault\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n                    <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n                </button>\\r\\n\\r\\n                <div [ngbCollapse]=\\\"isNavbarCollapsed\\\" class=\\\"collapse navbar-collapse\\\" id=\\\"navbarsDefault\\\">\\r\\n                    <ul class=\\\"navbar-nav mr-auto\\\">\\r\\n\\r\\n                        <li class=\\\"nav-item dropdown\\\" ngbDropdown>\\r\\n                            <button class=\\\"btn btn-link nav-link dropdown-toggle\\\" id=\\\"id01\\\" ngbDropdownToggle>Puzzles</button>\\r\\n                            <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"id01\\\" ngbDropdownMenu>\\r\\n                                <button class=\\\"dropdown-item btn btn-link\\\" (click)=\\\"onArchive('azed')\\\">Azed</button>\\r\\n                                <button class=\\\"dropdown-item btn btn-link\\\" (click)=\\\"onArchive('ft')\\\">FT</button>\\r\\n                                <button class=\\\"dropdown-item btn btn-link\\\" (click)=\\\"onArchive('independent')\\\">Independent</button>\\r\\n                                <button class=\\\"dropdown-item btn btn-link\\\" (click)=\\\"onArchive('cryptic')\\\">Guardian</button>\\r\\n                                <button class=\\\"dropdown-item btn btn-link\\\" (click)=\\\"onArchive('prize')\\\">Guardian Prize</button>\\r\\n                                <button class=\\\"dropdown-item btn btn-link\\\" (click)=\\\"onArchive('quiptic')\\\">Guardian Quiptic</button>\\r\\n                                <button class=\\\"dropdown-item btn btn-link\\\" (click)=\\\"onArchive('everyman')\\\">Everyman</button>\\r\\n                                <button class=\\\"dropdown-item btn btn-link\\\" (click)=\\\"onArchive('special')\\\">Special</button>\\r\\n                            </div>\\r\\n                        </li>\\r\\n\\r\\n                        <li class=\\\"nav-item dropdown\\\" ngbDropdown>\\r\\n                            <button class=\\\"btn btn-link nav-link dropdown-toggle\\\" id=\\\"id02\\\" ngbDropdownToggle>Tools</button>\\r\\n                            <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"id02\\\" ngbDropdownMenu>\\r\\n                                <button class=\\\"dropdown-item btn btn-link\\\" (click)=\\\"onGrid()\\\">Grid editor</button>\\r\\n                                <button class=\\\"dropdown-item btn btn-link\\\" (click)=\\\"onGoTo('diary')\\\">Diary</button>\\r\\n                            </div>\\r\\n                        </li>\\r\\n\\r\\n                        <li class=\\\"nav-item\\\">\\r\\n                            <button type=\\\"button\\\" class=\\\"nav-link btn btn-link\\\" (click)=\\\"onGoTo('settings')\\\">Settings</button>\\r\\n                        </li>\\r\\n\\r\\n                        <li class=\\\"nav-item\\\">\\r\\n                            <button type=\\\"button\\\" class=\\\"nav-link btn btn-link\\\" (click)=\\\"onGoTo('readme')\\\">Readme</button>\\r\\n                        </li>\\r\\n\\r\\n                        <li class=\\\"nav-item\\\" *ngIf=\\\"!credentials.authenticated\\\">\\r\\n                            <button type=\\\"button\\\" class=\\\"nav-link btn btn-link\\\" (click)=\\\"onGoTo('login')\\\">Login</button>\\r\\n                        </li>\\r\\n\\r\\n                        <li class=\\\"nav-item\\\" *ngIf=\\\"credentials.authenticated\\\">\\r\\n                            <button type=\\\"button\\\" class=\\\"nav-link btn btn-link\\\" (click)=\\\"onLogout()\\\">Logout</button>\\r\\n                        </li>\\r\\n                    </ul>\\r\\n                </div>\\r\\n            </nav>\\r\\n\\r\\n            <app-alert></app-alert>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <router-outlet ></router-outlet>\\r\\n</div>\"","export default \"<p *ngIf=\\\"appStatus.late\\\">\\n    <ngb-alert type=\\\"info\\\">Working...</ngb-alert>\\n</p>\\n<p *ngFor=\\\"let alert of appStatus.alerts\\\">\\n    <ngb-alert [type]=\\\"alert.type\\\" (close)=\\\"onClose()\\\">{{ alert.message }}</ngb-alert>\\n</p>\\n\\n\"","export default \"<div *ngIf=\\\"clue && appSettings\\\">\\r\\n    <form [formGroup]=\\\"form\\\">\\r\\n\\r\\n        <div class=\\\"container\\\">\\r\\n\\r\\n            <div class=\\\"row align-items-center\\\">\\r\\n                <div class=\\\"col\\\"><span class=\\\"\\\">{{clue.caption}}</span></div>\\r\\n                <div class=\\\"coltext-right\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-link\\\"\\r\\n                        *ngIf=\\\"appSettings.general.showCommentEditor.enabled && hasDefinition()\\\"\\r\\n                        (click)=\\\"onClearDefinition()\\\">clear\\r\\n                        definition</button></div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                    <h4>\\r\\n                        <app-clue-text-control formControlName=\\\"chunks\\\" (change)=\\\"onChange()\\\"\\r\\n                            [ngClass]=\\\"{ 'hidden': !appSettings.general.showCommentEditor.enabled }\\\">\\r\\n                        </app-clue-text-control>\\r\\n                        <span\\r\\n                            [ngClass]=\\\"{ 'hidden': appSettings.general.showCommentEditor.enabled }\\\">{{clue.text}}</span>\\r\\n                    </h4>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                    <app-tip key=\\\"definitionWarning\\\" (instance)=\\\"onTipInstance($event)\\\" maxActivations=\\\"1\\\">\\r\\n                        You have not highlighted the definition yet.\\r\\n                        To highlight the definition clue select part of the clue text using your mouse or other pointing\\r\\n                        device.\\r\\n                    </app-tip>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"modal-body\\\">\\r\\n            <h4 class=\\\"spacey\\\">\\r\\n                <span *ngFor=\\\"let chunk of latestAnswer\\\" [ngClass]=\\\"chunk.klass\\\">{{chunk.letter}}</span>\\r\\n            </h4>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"modal-body\\\">\\r\\n                <app-tip group=\\\"none\\\" [suppressable]=\\\"false\\\" *ngIf=\\\"showAnnotation\\\">{{clue.annotation}}</app-tip>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"float-left\\\"><label for=\\\"answer\\\">Answer</label></div>\\r\\n                <div class=\\\"float-right\\\" *ngIf=\\\"clue.solution && appSettings.general.showCheat.enabled\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-link\\\" (click)=\\\"onCheat()\\\">cheat</button>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-link\\\" (click)=\\\"onAnnotation()\\\" *ngIf=\\\"clue.annotation\\\">annotation</button>\\r\\n                </div>\\r\\n\\r\\n                <input id=\\\"answer\\\" name=\\\"answer\\\" class=\\\"form-control\\\" ngbAutofocus formControlName=\\\"answer\\\" (input)=\\\"onChange()\\\">\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group mb-0\\\">\\r\\n                <div class=\\\"clearfix\\\">\\r\\n                    <label class=\\\"inline-block float-left\\\" [ngClass]=\\\"{ 'hidden': !appSettings.general.showCommentEditor.enabled }\\\" for=\\\"comment\\\">Comment</label>\\r\\n\\r\\n                    <button type=button class=\\\"btn btn-link m-0 p-0 float-right\\\" (click)=\\\"onToggleComment()\\\">\\r\\n                        <span *ngIf=\\\"!appSettings.general.showCommentEditor.enabled\\\">show comment</span>\\r\\n                        <span *ngIf=\\\"appSettings.general.showCommentEditor.enabled\\\">hide comment</span>\\r\\n                    </button>\\r\\n                </div>\\r\\n                \\r\\n                <div [ngClass]=\\\"{ 'hidden': !appSettings.general.showCommentEditor.enabled }\\\">\\r\\n                    <quill-editor id=\\\"comment\\\" formControlName=\\\"comment\\\" format=\\\"object\\\" (onContentChanged)=\\\"onChange()\\\"></quill-editor>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <div class=\\\"text-warning\\\" *ngIf=\\\"showTextWarning\\\">\\r\\n                <span> {{warnings[0]}}</span>\\r\\n            </div>\\r\\n\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"onSave()\\\">Save</button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"onCancel()\\\">Cancel</button>\\r\\n\\r\\n\\r\\n        </div>\\r\\n    </form>\\r\\n</div>\"","export default \"<td class=\\\"caption\\\">{{clue.caption}}</td>\\n<td [ngClass]=\\\"klasses\\\">{{clue.text}}</td>\\n\"","export default \"<div *ngIf=\\\"clues.length\\\">\\n\\n    <h3>{{direction}}</h3>\\n\\n    <table>\\n        <tbody>\\n            <tr *ngFor=\\\"let clue of clues\\\" (click)=\\\"onClueClick(clue)\\\">\\n                <app-clue-list-item [clue]=\\\"clue\\\"></app-clue-list-item>\\n            </tr>\\n        </tbody>\\n    </table>\\n</div>\"","export default \"<span #span *ngIf=\\\"chunk\\\" [ngClass]=\\\"cssClass()\\\" (mouseup)=\\\"onMouseUp()\\\">{{chunk.text}}</span>\\n\\n\"","export default \"<div>\\n    <app-clue-text-chunk *ngFor=\\\"let chunk of chunks\\\" [chunk]=\\\"chunk\\\" (chunkMouseUp)=\\\"onChunkMouseUp()\\\"></app-clue-text-chunk>\\n</div>\\n\"","export default \"<ng-container *ngIf=\\\"clue\\\">\\n    <span *ngFor=\\\"let chunk of clue.chunks\\\" [ngStyle]=\\\"makeChunkStyle(chunk)\\\">{{chunk.text}}</span>\\n</ng-container>\\n\"","export default \"<div *ngIf=\\\"includeGrid\\\">\\n    <app-grid [options]=\\\"{ readonly: true, showShading: true }\\\"></app-grid>\\n</div>\\n\\n<table *ngIf=\\\"clues && publishOptions.layout === 'table'\\\">\\n    <ng-container *ngFor=\\\"let clue of clues\\\">\\n        <tr>\\n            <td [ngClass]=\\\"tdClass\\\">\\n                <span class=\\\"text-nowrap\\\" [ngStyle]=\\\"makeClueStyle()\\\">{{clue.caption}} </span>\\n            </td>\\n            <td [ngClass]=\\\"tdClass\\\">\\n                <span class=\\\"text-nowrap\\\" [ngStyle]=\\\"makeAnswerStyle()\\\">{{clue.answer}} </span>\\n            </td>\\n            <td [ngClass]=\\\"tdClass\\\">\\n                <app-clue-text [clue]=\\\"clue\\\" [publishOptions]=\\\"publishOptions\\\"></app-clue-text>\\n            </td>\\n        </tr>\\n        <tr>\\n            <td [ngClass]=\\\"tdClass\\\"></td>\\n            <td [ngClass]=\\\"tdClass\\\"></td>\\n            <td [ngClass]=\\\"tdClass\\\">\\n                    <quill-view [content]=\\\"clue.comment\\\" format=\\\"object\\\" theme=\\\"snow\\\"></quill-view>\\n            </td>\\n        </tr>\\n    </ng-container>\\n</table>\\n\\n<div *ngIf=\\\"clues && publishOptions.layout === 'list'\\\">\\n    <ng-container *ngFor=\\\"let clue of clues\\\">\\n        <div [ngStyle]=\\\"makeClueStyle()\\\" [ngClass]=\\\"tdClass\\\">\\n            <span class=\\\"text-nowrap\\\">{{clue.caption}}.</span>&nbsp;&nbsp;<app-clue-text [clue]=\\\"clue\\\" [publishOptions]=\\\"publishOptions\\\"></app-clue-text>\\n        </div>\\n        <div class=\\\"text-nowrap\\\" [ngClass]=\\\"tdClass\\\" [ngStyle]=\\\"makeAnswerStyle()\\\">{{clue.answer}}</div>\\n        <div [ngClass]=\\\"tdClass\\\">\\n            <quill-view [content]=\\\"clue.comment\\\" format=\\\"object\\\" theme=\\\"snow\\\"></quill-view>\\n        </div>\\n    </ng-container>\\n</div>\"","export default \"<div class=\\\"form-group\\\">\\n    <select class=\\\"form-control\\\" [ngStyle]=\\\"{ 'background-color' : color.value }\\\" [(ngModel)]=\\\"color\\\"\\n        [ngModelOptions]=\\\"{ standalone: true }\\\" (change)=\\\"onColorChange()\\\">\\n        <option *ngFor=\\\"let option of options\\\" [ngValue]=\\\"option\\\"\\n            [ngStyle]=\\\"{ 'background-color' : option.value }\\\">\\n            {{option.caption}}\\n        </option>\\n    </select>\\n</div>\\n\"","export default \"<div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title\\\">Warning</h4>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"onClose(false)\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n</div>\\n<div class=\\\"modal-body\\\">\\n    <p>{{message}}</p>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark mr-3\\\" (click)=\\\"onClose(true)\\\">Continue</button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"onClose(false)\\\">Cancel</button>\\n</div>\"","export default \"<ng-container *ngIf=\\\"content\\\">\\n    <quill-view [content]=\\\"content\\\" format=\\\"object\\\" theme=\\\"snow\\\"></quill-view>\\n</ng-container>\\n\\n\"","export default \"<div class=\\\"border border-secondary rounded d-inline-block p-0 mr-3\\\">\\n    <div class=\\\"d-inline-block px-3\\\">\\n        <span *ngIf=\\\"!editable\\\">{{text}}</span>\\n        <input type=\\\"text\\\"[(ngModel)]=\\\"text\\\" [ngModelOptions]=\\\"{ standalone: true }\\\" *ngIf=\\\"editable\\\">\\n    </div>\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\"   (click)=\\\"onSave()\\\" *ngIf=\\\"editable\\\">Save</button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"onRemove()\\\" *ngIf=\\\"!editable\\\">X</button>\\n</div>\\n\\n\"","export default \"<div>\\n    <div class=\\\"form-group\\\">\\n        <p>Diary aliases - the name(s) by which you are known in the Googe diary</p>\\n        <div>\\n            <app-diary-alias-control \\n                *ngFor=\\\"let control of aliasControls\\\" \\n                (remove)=\\\"onRemoveAlias($event)\\\"\\n                (save)=\\\"onSaveAlias($event)\\\"\\n                [editable]=\\\"control.editable\\\"\\n                [text]=\\\"control.text\\\"\\n                [id]=\\\"control.id\\\">\\n            </app-diary-alias-control>\\n\\n            <button class=\\\"btn btn-primary\\\" (click)=\\\"onAddAlias()\\\">Add alias</button>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"form-check\\\">\\n        <input type=\\\"checkbox\\\" [checked]=\\\"checked\\\" class=\\\"form-check-input\\\" (click)=\\\"onShowEverybodyChange()\\\">\\n        <label class=\\\"form-check-label\\\">Show diary entries for all bloggers</label>\\n    </div>\\n</div>\"","export default \"<button type=\\\"button\\\" class=\\\"btn btn-primary mr-3\\\" (click)=\\\"onClick($event)\\\" *ngIf=\\\"enabled\\\">Download</button>\\n<a #downloadLink class=\\\"invisible\\\" [download]=\\\"filename\\\" [href]=\\\"dataUrl\\\"></a>\\n\"","export default \"<div class=\\\"mt-5\\\">\\n    <form [formGroup]=\\\"form\\\">\\n\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"cellsAcross\\\">Cells across</label>\\n            <input id=\\\"cellsAcross\\\" type=\\\"number\\\" step=\\\"1\\\" min=\\\"1\\\" max=\\\"25\\\" class=\\\"form-control\\\"\\n                formControlName=\\\"cellsAcross\\\">\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"cellsAcross\\\">Cells down</label>\\n            <input id=\\\"cellsAcross\\\" type=\\\"number\\\" step=\\\"1\\\" min=\\\"1\\\" max=\\\"25\\\" class=\\\"form-control\\\"\\n                formControlName=\\\"cellsDown\\\">\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <div class=\\\"form-check\\\">\\n                <input class=\\\"form-check-input\\\" type=\\\"radio\\\" id=\\\"gridStyle1\\\" formControlName=\\\"gridStyle\\\"\\n                    value=\\\"standard\\\">\\n                <label class=\\\"form-check-label\\\" for=\\\"gridStyle1\\\">This is a standard grid</label>\\n            </div>\\n\\n            <div class=\\\"form-check\\\">\\n                <input class=\\\"form-check-input\\\" type=\\\"radio\\\" id=\\\"gridStyle2\\\" formControlName=\\\"gridStyle\\\" value=\\\"barred\\\">\\n                <label class=\\\"form-check-label\\\" for=\\\"gridStyle2\\\">This is a barred grid</label>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <div class=\\\"form-check\\\">\\n                <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"symmetrical\\\" formControlName=\\\"symmetrical\\\">\\n                <label class=\\\"form-check-label\\\" for=\\\"symmetrical\\\">grid is symmetrical (rotate by 180)</label>\\n            </div>\\n        </div>\\n        \\n        <div class=\\\"formGroup mt-5\\\">\\n            <button class=\\\"btn btn-primary mr-3\\\" type=\\\"button\\\" [disabled]=\\\"!form.valid\\\"\\n                (click)=\\\"onContinue()\\\">Continue</button>\\n            <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"onCancel()\\\">Cancel</button>\\n        </div>\\n    </form>\\n</div>\"","export default \"<div class=\\\"canvasContainer\\\">\\n    <input #editor [ngStyle]=\\\"model.style\\\" type=\\\"text\\\" maxlength=\\\"1\\\" [value]=\\\"model.text\\\" (keydown)=\\\"onInput($event)\\\">\\n    <canvas #gridCanvas class=\\\"gridCanvas\\\" [height]=\\\"canvasHeight\\\" [width]=\\\"canvasWidth\\\" (click)=\\\"onCanvasClick($event)\\\"></canvas>\\n</div>\\n\"","export default \"<div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n        <form [formGroup]=\\\"form\\\">\\n            <div class=\\\"form\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label>\\n                        Username\\n                        <app-validation-message [control]=\\\"form.get('username')\\\"></app-validation-message>\\n                        <input id=\\\"username\\\" class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"username\\\" required>\\n                    </label>\\n                </div>\\n\\n                <div class=\\\"form-group\\\">\\n                    <label>\\n                        Password\\n                        <app-validation-message [control]=\\\"form.get('password')\\\"></app-validation-message>\\n                        <input id=\\\"password\\\" class=\\\"form-control\\\" type=\\\"password\\\" formControlName=\\\"password\\\" required>\\n                    </label>\\n                </div>\\n            </div>\\n        </form>\\n    </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n        <button [disabled]=\\\"appStatus.busy || !form.valid\\\" type=\\\"button\\\" class=\\\"btn btn-primary mr-3\\\" (click)=\\\"onLogin()\\\">{{continueButtonText}}</button>\\n        <button [disabled]=\\\"appStatus.busy\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onCancel()\\\">{{cancelButtonText}}</button>\\n    </div>\\n</div>\"","export default \"<div *ngIf=\\\"code === 'endMarker_down'\\\">\\n    <ng-container *ngTemplateOutlet=\\\"unfinishedClue\\\"></ng-container>\\n</div>\\n<div *ngIf=\\\"code === 'acrossMarker_across'\\\">\\n    <ng-container *ngTemplateOutlet=\\\"invalidAcrossMarker\\\"></ng-container>\\n</div>\\n<div *ngIf=\\\"code === 'acrossMarker_down'\\\">\\n    <ng-container *ngTemplateOutlet=\\\"invalidAcrossMarker\\\"></ng-container>\\n</div>\\n<div *ngIf=\\\"code === 'acrossMarker_ended'\\\">\\n    <ng-container *ngTemplateOutlet=\\\"invalidAcrossMarker\\\"></ng-container>\\n</div>\\n<div *ngIf=\\\"code === 'downMarker_null'\\\">\\n    <ng-container *ngTemplateOutlet=\\\"invalidDownMarker\\\"></ng-container>\\n</div>\\n<div *ngIf=\\\"code === 'downMarker_across'\\\">\\n    <ng-container *ngTemplateOutlet=\\\"unfinishedClue\\\"></ng-container>\\n</div>\\n<div *ngIf=\\\"code === 'downMarker_down'\\\">\\n    <ng-container *ngTemplateOutlet=\\\"invalidDownMarker\\\"></ng-container>\\n</div>\\n<div *ngIf=\\\"code === 'downMarker_ended'\\\">\\n    <ng-container *ngTemplateOutlet=\\\"invalidDownMarker\\\"></ng-container>\\n</div>\\n<div *ngIf=\\\"code === 'endMarker_null'\\\">\\n    Could not find any clues in the puzzle!\\n</div>\\n<div *ngIf=\\\"code === 'endMarker_across'\\\">\\n    Could not find an \\\"across\\\" heading at the start of the clues.\\n</div>\\n<div *ngIf=\\\"code === 'endMarker_down'\\\">\\n    Could not find an \\\"down\\\" heading in the puzzle.\\n</div>\\n<div *ngIf=\\\"code === 'clue_null'\\\">\\n    <ng-container *ngTemplateOutlet=\\\"contentBeforeAcrossMarker\\\"></ng-container>\\n</div>\\n<div *ngIf=\\\"code === 'clue_acrossdown'\\\">\\n    <ng-container *ngTemplateOutlet=\\\"unfinishedClue\\\"></ng-container>\\n</div>\\n<div *ngIf=\\\"code === 'clue_ended'\\\">\\n    <ng-container *ngTemplateOutlet=\\\"contentAfterEnd\\\"></ng-container>\\n</div>\\n<div *ngIf=\\\"code === 'clueStart_null'\\\">\\n    <ng-container *ngTemplateOutlet=\\\"contentBeforeAcrossMarker\\\"></ng-container>\\n</div>\\n<div *ngIf=\\\"code === 'clueStart_ended'\\\">\\n    <ng-container *ngTemplateOutlet=\\\"contentAfterEnd\\\"></ng-container>\\n</div>\\n<div *ngIf=\\\"code === 'clueStart_acrossdown'\\\">\\n    <ng-container *ngTemplateOutlet=\\\"unfinishedClue\\\"></ng-container>\\n</div>\\n<div *ngIf=\\\"code === 'clueEnd_acrossdown'\\\">\\n    <ng-container *ngTemplateOutlet=\\\"unfinishedClue\\\"></ng-container>\\n</div>\\n<div *ngIf=\\\"code === 'clueEnd_null'\\\">\\n    <!-- is this really an error ? -->\\n</div>\\n<div *ngIf=\\\"code === 'clueEnd_ended'\\\">\\n</div>\\n<div *ngIf=\\\"code === 'text_null'\\\">\\n    <ng-container *ngTemplateOutlet=\\\"contentBeforeAcrossMarker\\\"></ng-container>\\n</div>\\n<div *ngIf=\\\"code === 'text_across'\\\">\\n    <ng-container *ngTemplateOutlet=\\\"unfinishedClue\\\"></ng-container>\\n</div>\\n<div *ngIf=\\\"code === 'text_down'\\\">\\n    <ng-container *ngTemplateOutlet=\\\"unfinishedClue\\\"></ng-container>\\n</div>\\n\\n\\n<ng-template #unfinishedClue>\\n    There seems to be a clue that is not finished.\\n    This is often caused by problems with the letter-count of the previous clue.\\n    Look out for:\\n    <ul>\\n        <li>A missing letter count</li>\\n        <li>An incomplete letter count, eg (2,3</li>\\n        <li>An unusual or miss-spelled letter count, eg (2 wrds)</li>\\n    </ul>\\n    Sometimes this is caused by a line-break in a clue that results in the first character of the new line being a\\n    number.\\n    This makes the line appear to be the start of a new clue.\\n    Fix this by removing the line break and having the whole clue on one line.\\n\\n</ng-template>\\n\\n<ng-template #contentBeforeAcrossMarker>\\n    Found some content before the \\\"Across\\\" heading. Look out for a missing or mis-spelled heading.\\n</ng-template>\\n\\n<ng-template #invalidAcrossMarker>\\n    There appears to be a misplaced or duplicated across heading.\\n    Look out for more than one line containing the text \\\"Across\\\" (upper or lower case).\\n</ng-template>\\n\\n<ng-template #invalidDownMarker>\\n    There appears to be a misplaced or duplicated down heading.\\n    Look out for more than one line containing the text \\\"Down\\\" (upper or lower case).\\n</ng-template>\\n\\n<ng-template #contentAfterEnd>\\n    There appears to be a misplaced or duplicated down heading.\\n    Look out for more than one line containing the text \\\"Down\\\" (upper or lower case).\\n</ng-template>\"","export default \"<ngb-alert type=\\\"warning\\\" *ngIf=\\\"result && result.error\\\">\\n    <h5 *ngIf=\\\"result.tokenGroup.current.lineNumber\\\">Failed to parse the text at line {{result.tokenGroup.current.lineNumber + 1}}</h5>\\n    <h5 *ngIf=\\\"!result.tokenGroup.current.lineNumber\\\">Failed to parse the text</h5>\\n    \\n    <div class=\\\"mt-3\\\">{{result.error.message}}</div>\\n    <div class=\\\"mt-3\\\" *ngIf=\\\"result.error\\\">{{result.error.message}}</div>\\n\\n    <table class=\\\"table table-sm mt-5\\\">\\n        <thead>\\n            <tr>\\n                <th>Line number</th>\\n                <th>Text</th>\\n            </tr>\\n        </thead>\\n        <tbody>\\n            <tr>\\n                <td>{{result.tokenGroup.previous.lineNumber + 1 | number}}</td>\\n                <td>{{result.tokenGroup.previous.text}}</td>\\n            </tr>\\n            <tr>\\n                <td>{{result.tokenGroup.current.lineNumber + 1 | number}}</td>\\n                <td class=\\\"text-danger\\\">{{result.tokenGroup.current.text}}</td>\\n            </tr>\\n            <tr>\\n                <td>{{result.tokenGroup.next.lineNumber + 1 | number}}</td>\\n                <td>{{result.tokenGroup.next.text}}</td>\\n            </tr>\\n        </tbody>\\n    </table>\\n\\n    <app-parse-error-hint [error]=\\\"result.error\\\"></app-parse-error-hint>\\n\\n</ngb-alert>\\n\"","export default \"<div class=\\\"container-fluid mr-5\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col\\\">\\r\\n            <form [formGroup]=\\\"form\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label labelFor=\\\"color\\\">{{caption}} colour</label>\\r\\n\\r\\n                    <!-- <select id=\\\"color\\\" class=\\\"form-control\\\" [ngStyle]=\\\"{ 'background-color' : form.value.color.value }\\\"\\r\\n                        formControlName=\\\"color\\\">\\r\\n                        <option *ngFor=\\\"let option of options\\\" [ngValue]=\\\"option\\\"\\r\\n                            [ngStyle]=\\\"{ 'background-color' : option.value }\\\">\\r\\n                            {{option.name}}\\r\\n                        </option>\\r\\n                    </select> -->\\r\\n                    <app-color-control id=\\\"color\\\" formControlName=\\\"color\\\"></app-color-control>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-check\\\">\\r\\n\\r\\n                    <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" formControlName=\\\"bold\\\">\\r\\n                    <label class=\\\"form-check-label\\\">Bold</label>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-check\\\">\\r\\n                    <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" formControlName=\\\"italic\\\">\\r\\n                    <label class=\\\"form-check-label\\\">Italic</label>\\r\\n                </div>\\r\\n\\r\\n\\r\\n                <div class=\\\"form-check\\\">\\r\\n                    <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" formControlName=\\\"underline\\\">\\r\\n                    <label class=\\\"form-check-label\\\">Underline</label>\\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","export default \"<ngb-alert *ngIf=\\\"status.show\\\" type=\\\"warning\\\" (close)=\\\"onClose()\\\">\\n\\n    <div>\\n        <ng-content></ng-content>\\n    </div>\\n\\n    <div class=\\\"mt-3\\\" *ngIf=\\\"suppressable\\\">\\n        <label>Don't show this again <input type=\\\"checkbox\\\" (change)=\\\"onDontShowAgain($event)\\\"></label>\\n    </div>\\n</ngb-alert>\"","export default \"<span *ngIf=\\\"control.hasError('required') && (control.dirty || control.touched)\\\" class=\\\"alert-danger\\\">required</span>\\n\"","export default \"<div class=\\\"row my-5\\\">\\n    <div class=\\\"col\\\">\\n        <div class=\\\"card w-50  mx-auto text-center\\\" *ngIf=\\\"provider && latest\\\">\\n            <h5 class=\\\"card-header\\\">Latest {{provider | provider}} puzzle</h5>\\n            <div class=\\\"card-body\\\">\\n                <p *ngIf=\\\"latest\\\" class=\\\"card-text\\\">{{latest.date | date:'EEEE dd MMMM yyyy'}}</p>\\n                <p *ngIf=\\\"latest\\\" class=\\\"card-text\\\">{{latest.serialNumber | number:\\\"2.\\\"}}</p>\\n                <button class=\\\"btn btn-primary\\\" (click)=\\\"openPuzzle(latest)\\\">Open</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"row mt-3\\\" *ngIf=\\\"archiveItems.length\\\">\\n    <div class=\\\"col\\\">\\n        <table class=\\\"table\\\">\\n            <tbody>\\n                <tr>\\n                    <td colspan=\\\"3\\\">\\n                        <h5>Puzles from the archive</h5>\\n                    </td>\\n                </tr>\\n                <tr *ngFor=\\\"let item of archiveItems\\\">\\n                    <td>{{item.serialNumber | number:\\\"2.\\\"}}</td>\\n                    <td>{{item.date | date:'EEEE dd MMMM yyyy'}}</td>\\n                    <td><button class=\\\"btn btn-primary\\\" (click)=\\\"openPuzzle(item)\\\">Open</button></td>\\n                </tr>\\n            </tbody>\\n        </table>\\n    </div>\\n</div>\\n\"","export default \"<div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n        <h3>Clue Editor</h3>\\n    </div>\\n</div>\\n\\n<div class=\\\"row\\\" *ngIf=\\\"puzzle\\\">\\n    <div class=\\\"col\\\">\\n        <h5>{{puzzle.info.title}}</h5>\\n    </div>\\n</div>\\n\\n<div class=\\\"row\\\" *ngIf=\\\"puzzle\\\">\\n    <div class=\\\"col\\\">\\n        <app-clue-list direction=\\\"across\\\" (clueClick)=\\\"onClueClick($event)\\\"></app-clue-list>\\n    </div>\\n\\n    <div class=\\\"col\\\">\\n        <app-clue-list direction=\\\"down\\\" (clueClick)=\\\"onClueClick($event)\\\"></app-clue-list>\\n    </div>\\n</div>\\n\\n<div class=\\\"row\\\" *ngIf=\\\"puzzle\\\">\\n    <div class=\\\"col\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary mr-3\\\" (click)=\\\"onContinue()\\\">Continue</button>\\n    </div>\\n</div>\"","export default \"<p>clues-start works!</p>\\n\"","export default \"<p>create-puzzle works!</p>\\n\\n<form [formGroup]=\\\"form\\\">\\n\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"title\\\">Title</label>\\n        <input id=\\\"title\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"title\\\"\\n            placeholder=\\\"Enter a title for your grid...\\\">\\n    </div>\\n\\n    <div class=\\\"formGroup mt-5\\\">\\n        <button class=\\\"btn btn-primary mr-3\\\" type=\\\"button\\\" [disabled]=\\\"!form.valid\\\"\\n            (click)=\\\"onContinue()\\\">Continue</button>\\n        <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"onCancel()\\\">Cancel</button>\\n    </div>\\n</form>\\n\"","export default \"<div class=\\\"row\\\" *ngIf=\\\"puzzle\\\">\\n    <div class=\\\"col\\\">\\n        <h5>{{puzzle.info.title}}</h5>\\n    </div>\\n</div>\\n\\n<div class=\\\"row\\\" *ngIf=\\\"puzzle\\\">\\n    <div class=\\\"col\\\">\\n        <app-grid \\n            #gridControl\\n            (cellClick)=\\\"onCellClick($event)\\\" \\n            (barClick)=\\\"onBarClick($event)\\\" \\n            (gridText)=\\\"onGridText($event)\\\" \\n            (gridNavigation)=\\\"onGridNavigation($event)\\\" \\n            [options]=\\\"options\\\">\\n        </app-grid>\\n    </div>\\n    <div class=\\\"col border border-secondary rounded p-3\\\">\\n        <app-tip key=\\\"gridEditor\\\">\\n            <p>\\n                These tools allow you to configure your grid. Select one of the tab headings below:\\n            </p>\\n            <ul>\\n                <li>Grid - for setting the light and dark cells/bars</li>\\n                <li>Text - for writing letters into the lights</li>\\n                <li>Colours - for highlighting a theme</li>\\n                <li>Title - change grid title</li>\\n            </ul>\\n        </app-tip>\\n        \\n        <ngb-tabset activeId=\\\"grid\\\" (tabChange)=\\\"onTabChange($event)\\\">\\n\\n            <ngb-tab id=\\\"grid\\\" title=\\\"Grid\\\">\\n                <ng-template ngbTabContent>\\n                    <div class=\\\"w-100 mt-5\\\">\\n                        Click on the grid to add or remove\\n                        <span *ngIf=\\\"barred\\\">bars</span>\\n                        <span *ngIf=\\\"!barred\\\">lights and dark cells</span>\\n                    </div>\\n                    <div class=\\\"form-check mt-5\\\">\\n                        <input disabled=\\\"true\\\" id=\\\"symmetrical\\\" type=\\\"checkbox\\\" class=\\\"form-check-input\\\" [checked]=\\\"symmetrical\\\" (change)=\\\"onSymmetrical(!symmetrical)\\\"/>\\n                        <label for=\\\"symmetrical\\\" class=\\\"form-check-label\\\">Grid is symmetrical </label>\\n                    </div>\\n                </ng-template>\\n            </ngb-tab>\\n\\n            <ngb-tab id=\\\"text\\\" title=\\\"Text\\\">\\n                <ng-template ngbTabContent>\\n                    \\n                    <div class=\\\"mt-5\\\">\\n                        <div class=\\\"mb-5\\\">\\n                            Click on a cell in the grid to enter text\\n                        </div>\\n\\n                        <app-tip key=\\\"gridEditorText\\\">\\n                            <p>\\n                                You can control how the cursor will move after entering a letter into the grid:\\n                            </p>\\n                            <ul>\\n                                <li>Select cell - enter a letter then stop</li>\\n                                <li>Select in sequence - move to the next cell in the grid</li>\\n                                <li>Select empty cells - move to the next empty cell in the grid</li>\\n                                <li>Select entries - select the entire grid entry and move to the next cell in that entry</li>\\n                            </ul>\\n                        </app-tip>\\n\\n                        <div class=\\\"form-check\\\">\\n                            <input type=\\\"radio\\\" name=\\\"selectSingle\\\" class=\\\"form-check-input\\\" [value]=\\\"gridEditors.cellEditor\\\" [(ngModel)]=\\\"options.editor\\\" (change)=\\\"onOptionChange()\\\">\\n                            <label class=\\\"form-check-label\\\">Select cell</label>\\n                        </div>\\n\\n                        <div class=\\\"form-check\\\">\\n                            <input type=\\\"radio\\\" name=\\\"selectSingle\\\" class=\\\"form-check-input\\\" [value]=\\\"gridEditors.cellEditorFluid\\\" [(ngModel)]=\\\"options.editor\\\" (change)=\\\"onOptionChange()\\\">\\n                            <label class=\\\"form-check-label\\\">Select in sequence</label>\\n                        </div>\\n\\n                        <div class=\\\"form-check\\\">\\n                            <input type=\\\"radio\\\" name=\\\"selectSingle\\\" class=\\\"form-check-input\\\" [value]=\\\"gridEditors.cellEditorEmptyFluid\\\" [(ngModel)]=\\\"options.editor\\\" (change)=\\\"onOptionChange()\\\">\\n                            <label class=\\\"form-check-label\\\">Select empty cells</label>\\n                        </div>\\n\\n                        <div class=\\\"form-check\\\">\\n                            <input type=\\\"radio\\\" name=\\\"selectSingle\\\" class=\\\"form-check-input\\\" [value]=\\\"gridEditors.entryEditor\\\" [(ngModel)]=\\\"options.editor\\\" (change)=\\\"onOptionChange()\\\">\\n                            <label class=\\\"form-check-label\\\">Select entries</label>\\n                        </div>\\n                    </div>\\n                </ng-template>\\n            </ngb-tab>\\n\\n            <ngb-tab id=\\\"color\\\" title=\\\"Colours\\\">\\n                <ng-template ngbTabContent>\\n                    <div class=\\\"mt-5\\\">\\n                        Choose a colour then click a cell to apply highlighting\\n                    </div>\\n                    <div class=\\\"mt-5\\\">\\n                        <app-color-control [(ngModel)]=\\\"shadingColor\\\"></app-color-control>\\n                    </div>\\n                    <div class=\\\"mt-3\\\">\\n                        <button type=\\\"button\\\" class=\\\"btn btn-link pl-1\\\" (click)=\\\"onClearAll()\\\">clear all shading</button>\\n                    </div>\\n                    </ng-template>\\n            </ngb-tab>\\n\\n            <ngb-tab id=\\\"properties\\\" title=\\\"Title\\\">\\n                <ng-template ngbTabContent>\\n                    <form [formGroup]=\\\"form\\\">\\n                        <div class=\\\"form-group mt-5\\\">\\n                            <label for=\\\"title\\\">Title</label>\\n                            <input id=\\\"title\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"title\\\">\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <button type=\\\"button\\\" [disabled]=\\\"!form.valid || form.pristine\\\" (click)=\\\"onSubmit()\\\">Save</button>\\n                        </div>\\n                    </form>\\n                </ng-template>\\n            </ngb-tab>\\n\\n        </ngb-tabset>\\n    </div>\\n</div>\\n\\n<div class=\\\"row\\\" *ngIf=\\\"puzzle\\\">\\n    <div class=\\\"col\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary mr-3\\\" (click)=\\\"onContinue()\\\">Publish</button>\\n        <app-download-button (download)=\\\"onDownload($event)\\\"></app-download-button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary mr-3\\\" (click)=\\\"onClose()\\\">Close</button>\\n    </div>\\n</div>\\n\\n\"","export default \"<h3 class=\\\"mt-3\\\">Start a new grid</h3>\\r\\n<app-tip key=\\\"gridStart\\\">\\r\\n    <p>\\r\\n        The Grid Tool allows you to create a grid image suitable for display in a web page. \\r\\n        The first step is to give the new grid a title and specify its size and shape.\\r\\n    </p>\\r\\n    <p>\\r\\n        The pages following this will allow you to set lights and dark cells, add text and hightlight cells of the grid (to illustrate a theme for example).\\r\\n    </p>\\r\\n    <p>\\r\\n        The completed gid may then be printed, downloaded to your computer or uploaded to the Media Library at fifteensquared.net for inclusion\\r\\n        in a blog.\\r\\n    </p>\\r\\n</app-tip>\\r\\n<app-grid-properties-editor (close)=\\\"onClose($event)\\\"></app-grid-properties-editor>\"","export default \"<div class=\\\"row my-5\\\">\\n    <div class=\\\"col\\\">\\n        <div class=\\\"card w-50  mx-auto text-center\\\">\\n            <h5 class=\\\"card-header\\\">Latest</h5>\\n            <div class=\\\"card-body\\\">\\n                    <p class=\\\"card-text\\\">{{provider | provider }}</p>\\n                    <p class=\\\"card-text\\\">{{today | date:\\\"EEEE - d LLLL yyyy\\\"}}</p>\\n                <button class=\\\"btn btn-primary\\\" (click)=\\\"openLatest()\\\">Open</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"row mt-5\\\">\\n    <div class=\\\"col\\\">\\n        <h5>Open puzzle by date</h5>\\n    </div>\\n</div>\\n\\n<div class=\\\"row mt-3\\\">\\n    <div class=\\\"col\\\">\\n        <form [formGroup]=\\\"form\\\">\\n\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"datePicker\\\">Puzzle date</label>\\n                <input id=\\\"datePicker\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"date\\\"\\n                    [bsConfig]=\\\"{ dateInputFormat: 'dddd Do MMMM YYYY' }\\\" bsDatepicker>\\n            </div>\\n\\n            <div class=\\\"form-group mt-5\\\">\\n                <button class=\\\"btn btn-primary mr-3\\\" type=\\\"button\\\" (click)=\\\"openPuzzleByDate()\\\">Open</button>\\n            </div>\\n        </form>\\n    </div>\\n</div>\\n\"","export default \"<p>link-error works!</p>\\n\"","export default \"<p>nav-error works!</p>\\n\"","export default \"<h3>Open puzzle</h3>\\n\\n<div *ngIf=\\\"credentials.authenticated\\\">\\n    <p>Opening puzzle...</p>\\n</div>\\n\\n<div *ngIf=\\\"!credentials.authenticated\\\">\\n    <p>Enter your fifteensquared username and password</p>\\n    <app-login-control (close)=\\\"onLoginClose($event)\\\"></app-login-control>\\n</div>\\n\"","export default \"<h3>Login</h3>\\n<p>Enter your fifteensquared username and password <span *ngIf=\\\"settings.sandbox\\\">(Using Sandbox)</span></p>\\n\\n<app-login-control *ngIf=\\\"appStatus\\\" (close)=\\\"onLoginClose($event)\\\"></app-login-control>\"","export default \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n        <h3>Open puzzle from PDF</h3>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <input #file class=\\\"form-control-file\\\" type=\\\"file\\\" accept=\\\".pdf\\\" (change)=\\\"onFileChange(file.files)\\\">\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"onOpenPdf()\\\">Open PDF</button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n        <h3>Open puzzle from text</h3>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<ng-container *ngIf=\\\"puzzle\\\">\\r\\n    <form [formGroup]=\\\"form\\\">\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col form-group\\\">\\r\\n                <label for=\\\"title\\\" class=\\\"form-label\\\">Give this puzzle a title</label>\\r\\n                <input id=\\\"title\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"title\\\">\\r\\n            </div>\\r\\n        </div>\\r\\n    \\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col form-group\\\">\\r\\n                <app-tip key=\\\"specialText\\\">\\r\\n        <h5>Notes on formatting the clues:</h5>\\r\\n        <p>\\r\\n            Clues for a puzzle can be entered manually here.  The format is simple and based on that used\\r\\n            by the daily cyptics in a newspaper.  In general, text cut-and-pasted from a newspaper website should\\r\\n            work here.\\r\\n        </p>\\r\\n    \\r\\n        The 5 basic rules for entering clues are:\\r\\n        <ul>\\r\\n            <li>There should be one clue per line</li>\\r\\n            <li>Clues should start with the clue number</li>\\r\\n            <li>Clues should end with the letter count</li>\\r\\n            <li>The across clues are labelled \\\"ACROSS\\\"</li>\\r\\n            <li>The down clues are labelled \\\"DOWN\\\"</li>\\r\\n        </ul>\\r\\n    \\r\\n        <pre class=\\\"bg-light\\\">\\r\\n        ACROSS\\r\\n        1 Goodnight ladies (5)\\r\\n        2 Ladies goodnight (2, 4)\\r\\n        DOWN\\r\\n        3 This is a clue (2-2)\\r\\n        </pre>\\r\\n    \\r\\n        Some optional features for more complex clues are:\\r\\n        <ul>\\r\\n            <li>Optionally, additional clue numbers may be added for linked clues, separated by commas</li>\\r\\n            <li>Optionally, numbers for linked clues may be supplemented with \\\"across\\\" or \\\"down\\\" to remove ambiguity</li>\\r\\n            <li>Redirections should be of the form \\\"See n\\\" where n is the clue number</li>\\r\\n            <li>Optionally, redirection numbers can be supplemented with \\\"across\\\" or down\\\" to remove ambiguity</li>\\r\\n        </ul>\\r\\n    \\r\\n        <pre class=\\\"bg-light\\\">\\r\\n        ACROSS\\r\\n        1,2 down,3 Life in the fast lane (8,2,2 4)\\r\\n        2 This is a clue (2, 4)\\r\\n        3 See 1\\r\\n        4 Another clue on its own (4)\\r\\n        DOWN\\r\\n        1 this is a clue (4)\\r\\n        2 See 1 across\\r\\n        </pre>\\r\\n        <p>\\r\\n            You can cut-and-paste text into here copied from another document, a PDF file for example.\\r\\n            Any extaneous text before the first ACROSS marker and after the last down-clue will be ignored, but best to remove it\\r\\n            before pressing the \\\"continue\\\" button just in case.\\r\\n        </p>\\r\\n                </app-tip>\\r\\n            </div>\\r\\n        </div>\\r\\n    \\r\\n        <div *ngIf=\\\"parseResult\\\">\\r\\n            <app-parse-result [result]=\\\"parseResult\\\"></app-parse-result>\\r\\n        </div>\\r\\n    \\r\\n        <div class=\\\"row\\\" *ngIf=\\\"!parseResult\\\">\\r\\n            <div class=\\\"col form-group\\\">\\r\\n                <label for=\\\"text\\\" class=\\\"form-label\\\">Enter text for the clues here</label>\\r\\n                <textarea id=\\\"text\\\" class=\\\"form-control\\\" rows=\\\"24\\\" formControlName=\\\"text\\\" (keydown)=\\\"onKeyDown($event)\\\"></textarea>\\r\\n            </div>\\r\\n        </div>\\r\\n            \\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col form-group\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary mr-3\\\" *ngIf=\\\"!parseResult\\\" (click)=\\\"onParse()\\\" [disabled]=\\\"!form.valid\\\">Continue</button>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary mr-3\\\" *ngIf=\\\"parseResult\\\" (click)=\\\"onAmend()\\\" [disabled]=\\\"!form.valid\\\">Amend</button>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onCancel()\\\">Cancel</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </form>\\r\\n</ng-container>\\r\\n\"","export default \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n        <ngb-alert type=\\\"warning\\\">\\r\\n            This feature is still work in progress.  \\r\\n            You are welcome to have a go, but don't rely on it for anything important.\\r\\n        </ngb-alert>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n        <h3>Special</h3>\\r\\n        <p>You can open a puzzle from a PDF file on your computer, or you can entering the clues manually</p>\\r\\n    </div>\\r\\n</div>\\r\\n    \\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n\\r\\n        <div>Load a PDF file form your computer</div>\\r\\n        <button class=\\\"btn btn-primary mt-3\\\" (click)=\\\"onPdf()\\\">Open PDF</button>\\r\\n\\r\\n        <div class=\\\"mt-5\\\">Create a grid and enter the clues</div>\\r\\n        <button class=\\\"btn btn-primary mt-3\\\" (click)=\\\"onGridText()\\\">Grid and clues</button>\\r\\n\\r\\n        <div class=\\\"mt-5\\\">Enter the clues only</div>\\r\\n        <button class=\\\"btn btn-primary mt-3\\\" (click)=\\\"onText()\\\">Clues only</button>\\r\\n    </div>\\r\\n</div>\\r\\n\"","export default \"<p>validate-puzzle works!</p>\\n\"","export default \"<h3 class=\\\"my-3\\\">publish complete</h3>\\n\\n<p>The puzzle has now been sent to the fifteensquared.net website.\\n</p>\\n\\n<p>Further changes may be made using the Wordpress Admin tools at\\n    <a href=\\\"http://fifteensquared.net.\\\" target=\\\"fifteensquared\\\">http://fifteensquared.net/</a>\\n</p>\\n\\n<div class=\\\"row\\\" *ngIf=\\\"puzzle\\\">\\n    <div class=\\\"col\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onContinue()\\\">OK</button>\\n    </div>\\n</div>\"","export default \"<div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n        <h3>grid editor</h3>\\n        <p>Click on cells in the grid to add shading, to highlight a theme for example</p>\\n    </div>\\n</div>\\n\\n<div class=\\\"row\\\" *ngIf=\\\"puzzle\\\">\\n    <div class=\\\"col\\\">\\n        <app-grid (cellClick)=\\\"onCellClick($event)\\\" [options]=\\\"{ showShading: true }\\\"></app-grid>\\n    </div>\\n    <div class=\\\"col\\\">\\n        <p>shading colour</p>\\n        <form>\\n            <app-color-control [(ngModel)]=\\\"color\\\" name=\\\"color\\\"></app-color-control>\\n        </form>\\n        <p class=\\\"mt-5\\\"><button type=\\\"button\\\" class=\\\"btn btn-link\\\" (click)=\\\"onClearAll()\\\">clear all shading</button></p>\\n    </div>\\n</div>\\n\\n<div class=\\\"row\\\" *ngIf=\\\"puzzle\\\">\\n    <div class=\\\"col\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary mr-3\\\" (click)=\\\"onContinue()\\\">Continue</button>\\n        <app-download-button (download)=\\\"onDownload($event)\\\"></app-download-button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onBack()\\\">Back</button>\\n    </div>\\n</div>\"","export default \"<h3>Login <span *ngIf=\\\"settings.sandbox\\\">(Using Sandbox)</span></h3>\\n\\n<app-login-control\\n    *ngIf=\\\"appStatus\\\" \\n    [options]=\\\"{ continueButtonText: 'Continue', cancelButtonText: 'Back'}\\\"\\n    (close)=\\\"onClose($event)\\\"\\n    >\\n</app-login-control>\\n\\n\\n\"","export default \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n        <h3>publish options</h3>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row justify-content-center\\\" *ngIf=\\\"puzzle\\\">\\r\\n    <div class=\\\"col col-auto\\\">\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col btn-group btn-group-toggle\\\" ngbRadioGroup name=\\\"radioLayout\\\" [(ngModel)]=\\\"publishOptions.layout\\\">\\r\\n                <label ngbButtonLabel class=\\\"btn btn-light\\\">\\r\\n                    <input ngbButton type=\\\"radio\\\" value=\\\"table\\\"> Table layout\\r\\n                </label>\\r\\n                <label ngbButtonLabel class=\\\"btn btn-light\\\">\\r\\n                    <input ngbButton type=\\\"radio\\\" value=\\\"list\\\"> List layout\\r\\n                </label>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"row mt-3\\\">\\r\\n            <div class=\\\"col bg-light\\\">\\r\\n                <app-clues-preview [includeGrid]=\\\"publishOptions.includeGrid\\\" [clues]=\\\"sample\\\"\\r\\n                    [publishOptions]=\\\"puzzle.publishOptions\\\">\\r\\n                </app-clues-preview>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row mt-3\\\" *ngIf=\\\"puzzle\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n        <div class=\\\"card-deck\\\">\\r\\n\\r\\n            <div class=\\\"card\\\">\\r\\n                <h5 class=\\\"card-header\\\">Answer</h5>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <app-text-style textStyleName=\\\"answerStyle\\\" caption=\\\"answer\\\"></app-text-style>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"card\\\">\\r\\n                <h5 class=\\\"card-header\\\">Clue</h5>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <app-text-style textStyleName=\\\"clueStyle\\\" caption=\\\"clue text\\\"></app-text-style>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"card\\\">\\r\\n                <h5 class=\\\"card-header\\\">Definition</h5>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <app-text-style textStyleName=\\\"definitionStyle\\\" caption=\\\"definition\\\"></app-text-style>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row mt-3\\\" *ngIf=\\\"puzzle\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n        <div>\\r\\n            Line Spacing: \\r\\n        </div>\\r\\n        <div class=\\\"form-check-inline\\\">\\r\\n            <label class=\\\"form-check-label\\\" for=\\\"spacing1\\\">\\r\\n                <input id=\\\"spacing1\\\" type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"spacing\\\" value=\\\"small\\\" [(ngModel)]=\\\"publishOptions.spacing\\\"> small\\r\\n            </label>\\r\\n        </div>\\r\\n        <div class=\\\"form-check-inline\\\">\\r\\n            <label class=\\\"form-check-label\\\" for=\\\"spacing2\\\">\\r\\n                <input id=\\\"spacing2\\\" type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"spacing\\\" value=\\\"medium\\\" [(ngModel)]=\\\"publishOptions.spacing\\\"> medium\\r\\n            </label>\\r\\n        </div>\\r\\n        <div class=\\\"form-check-inline\\\">\\r\\n            <label class=\\\"form-check-label\\\" for=\\\"spacing3\\\">\\r\\n                <input id=\\\"spacing3\\\" type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"spacing\\\" value=\\\"large\\\" [(ngModel)]=\\\"publishOptions.spacing\\\"> large\\r\\n            </label>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row mt-3\\\" *ngIf=\\\"puzzle && puzzle.grid\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n        <label>\\r\\n            <input type=\\\"checkbox\\\" [(ngModel)]=\\\"publishOptions.includeGrid\\\">\\r\\n            include grid image\\r\\n        </label>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row mt-3 mb-5\\\" *ngIf=\\\"puzzle && puzzle.grid && publishOptions.includeGrid\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onGrid()\\\">Colour the grid</button>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row mt-3\\\" *ngIf=\\\"puzzle\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary mr-3\\\" (click)=\\\"onContinue()\\\">Continue</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary mr-3\\\" (click)=\\\"onBack()\\\">Back</button>\\r\\n    </div>\\r\\n</div>\\r\\n\"","export default \"<h3>preamble</h3>\\n<form [formGroup]=\\\"form\\\" *ngIf=\\\"puzzle\\\">\\n\\n    <div class=\\\"row\\\" *ngIf=\\\"puzzle\\\">\\n        <div class=\\\"col\\\">\\n            <div class=\\\"mt-4\\\">\\n                <p>Enter the title to be displayed on the fifteensquared home page</p>\\n                <input id=\\\"title\\\" type=\\\"text\\\" class=\\\"w-100 pl-2\\\" formControlName=\\\"title\\\">\\n            </div>\\n\\n            <div class=\\\"mt-4\\\">\\n                <p>Comment to be displayed below the title on the home page</p>\\n                <quill-editor formControlName=\\\"header\\\" format=\\\"object\\\"></quill-editor>\\n            </div>\\n        </div>\\n    </div>\\n    \\n    <div class=\\\"row justify-content-center mt-5\\\" *ngIf=\\\"puzzle\\\">\\n        <div class=\\\"col-2\\\"></div>\\n        <div class=\\\"col-8 bg-light p-5 border\\\">\\n            <div class=\\\"title\\\">{{form.value.title}}</div>\\n            <div class=\\\"border-bottom\\\">Posted by {{getUsername()}} on {{today | date : \\\"MMMM d, y\\\"}}</div>\\n            <div class=\\\"clearfix mt-2\\\">\\n                <div class=\\\"mug-shot float-left\\\">\\n                    <img src=\\\"assets/kitten.png\\\">\\n                </div>\\n                <div class=\\\"float-left\\\">\\n                    <div>\\n                        <app-content-preview [content]=\\\"form.value.header\\\"></app-content-preview>\\n                    </div>\\n                    <div class=\\\"anchor-like\\\">Read the rest of this entry >></div>\\n                </div>\\n            </div>\\n            <div class=\\\"border-bottom\\\">Posted in <span class=\\\"anchor-like\\\">{{puzzle.info.providerName}}</span> | <span\\n                    class=\\\"anchor-like\\\">0 Comments</span> >></div>\\n        </div>\\n        <div class=\\\"col-2\\\"></div>\\n    </div>\\n\\n    <div class=\\\"row\\\" *ngIf=\\\"puzzle\\\">\\n        <div class=\\\"col\\\">\\n            <div class=\\\"mt-4\\\">\\n                <p>further comment inside your blog</p>\\n                <quill-editor formControlName=\\\"body\\\" format=\\\"object\\\"></quill-editor>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"row justify-content-center mt-5\\\" *ngIf=\\\"puzzle\\\">\\n            <div class=\\\"col-2\\\"></div>\\n            <div class=\\\"col-8 bg-light p-5 border\\\">\\n            <div class=\\\"body-top clearfix\\\">\\n                <div class=\\\"float-left anchor-like smaller m-0\\\">&lt;&lt; Guardian cryptic 23,456 by Paul</div>\\n                <div class=\\\"float-right anchor-like smaller m-0\\\">&gt;&gt; Financial Times 12,345 by Julius</div>\\n            </div>\\n            <div class=\\\"title mt-3\\\">{{form.value.title}}</div>\\n            <div class=\\\"border-bottom\\\">Posted by {{getUsername()}} on {{today | date : \\\"MMMM d, y\\\"}}</div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-auto\\\">\\n                    <div class=\\\"mug-shot\\\">\\n                        <img src=\\\"assets/kitten.png\\\">\\n                    </div>\\n                    </div>\\n                <div class=\\\"col-auto\\\">\\n                    <div>\\n                        <app-content-preview [content]=\\\"form.value.header\\\"></app-content-preview>\\n                    </div>\\n                    <div>\\n                        <app-content-preview [content]=\\\"form.value.body\\\"></app-content-preview>\\n                    </div>\\n                    <app-clues-preview \\n                        [includeGrid]=\\\"puzzle.publishOptions.includeGrid\\\" \\n                        [clues]=\\\"sample\\\"\\n                        [publishOptions]=\\\"puzzle.publishOptions\\\">\\n                    </app-clues-preview>\\n                    <div>\\n                        <app-content-preview [content]=\\\"appSettings.footer\\\"></app-content-preview>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"col-2\\\"></div>\\n    </div>\\n\\n    <div class=\\\"row\\\" *ngIf=\\\"puzzle\\\">\\n        <div class=\\\"col\\\">\\n            <div class=\\\"mt-4\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary mr-3\\\" (click)=\\\"onContinue()\\\">Continue</button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onBack()\\\">Back</button>\\n            </div>\\n        </div>\\n    </div>\\n\\n</form>\"","export default \"<h3 *ngIf=\\\"!gridOnly && alreadyPublished\\\">Update Published Post</h3>\\r\\n<h3 *ngIf=\\\"!gridOnly && !alreadyPublished\\\">Publish Post</h3>\\r\\n<h3 *ngIf=\\\"gridOnly\\\">Upload Grid</h3>\\r\\n\\r\\n<div class=\\\"row\\\" *ngIf=\\\"appStatus && puzzle && !gridOnly\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n        <p *ngIf=\\\"alreadyPublished\\\">This puzzle has already been uploaded to fifteensquared.net. What would you like to do?</p>\\r\\n        <form>\\r\\n            <div class=\\\"form\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n\\r\\n                    <div class=\\\"form-check\\\" *ngIf=\\\"alreadyPublished\\\">\\r\\n                        <input name=\\\"action\\\" class=\\\"form-check-input\\\" type=\\\"radio\\\" value=\\\"nothing\\\" [(ngModel)]=\\\"action\\\">\\r\\n                        <label class=form-check-label>do nothing</label>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-check\\\" *ngIf=\\\"!alreadyPublished\\\">\\r\\n                        <input name=\\\"action\\\" class=\\\"form-check-input\\\" type=\\\"radio\\\" value=\\\"publish\\\" [(ngModel)]=\\\"action\\\">\\r\\n                        <label class=form-check-label>publish immediately</label>\\r\\n                    </div>\\r\\n        \\r\\n                    <div class=\\\"form-check\\\" *ngIf=\\\"!alreadyPublished\\\">\\r\\n                        <input name=\\\"action\\\" class=\\\"form-check-input\\\" type=\\\"radio\\\" value=\\\"upload\\\"\\r\\n                            [(ngModel)]=\\\"action\\\">\\r\\n                        <label class=form-check-label>upload as draft</label>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-check\\\" *ngIf=\\\"alreadyPublished\\\">\\r\\n                        <input name=\\\"action\\\" class=\\\"form-check-input\\\" type=\\\"radio\\\" value=\\\"copy-post\\\"\\r\\n                            [(ngModel)]=\\\"action\\\">\\r\\n                        <label class=form-check-label>upload the entire post again</label>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-check\\\" *ngIf=\\\"alreadyPublished && puzzle.publishOptions.includeGrid\\\">\\r\\n                        <input name=\\\"action\\\" class=\\\"form-check-input\\\" type=\\\"radio\\\" value=\\\"copy-grid\\\"\\r\\n                            [(ngModel)]=\\\"action\\\">\\r\\n                        <label class=form-check-label>upload just the grid</label>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-check\\\" *ngIf=\\\"alreadyPublished\\\">\\r\\n                        <input name=\\\"action\\\" class=\\\"form-check-input\\\" type=\\\"radio\\\" value=\\\"replace-post\\\"\\r\\n                            [(ngModel)]=\\\"action\\\">\\r\\n                        <label class=form-check-label>replace the existing post</label>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-check\\\" *ngIf=\\\"alreadyPublished && puzzle.publishOptions.includeGrid\\\">\\r\\n                        <input name=\\\"action\\\" class=\\\"form-check-input\\\" type=\\\"radio\\\" value=\\\"replace-grid\\\" [(ngModel)]=\\\"action\\\">\\r\\n                        <label class=form-check-label>replace the grid only</label>\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\" *ngIf=\\\"appStatus && puzzle\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n        <ngb-alert type=\\\"info\\\" [dismissible]=\\\"false\\\" *ngIf=\\\"action === 'nothing'\\\">\\r\\n            No changes will be made\\r\\n        </ngb-alert>\\r\\n\\r\\n        <ngb-alert type=\\\"info\\\" [dismissible]=\\\"false\\\" *ngIf=\\\"action === 'publish'\\\">\\r\\n            The post will be published to fifteensquared.net immediately.\\r\\n        </ngb-alert>\\r\\n    \\r\\n        <ngb-alert type=\\\"info\\\" [dismissible]=\\\"false\\\" *ngIf=\\\"action === 'upload'\\\">\\r\\n            The post will be uploaded to fifteensquared.net as a draft.\\r\\n            Log in to fifteensquared and use the Admin section to schedule or publish the post\\r\\n        </ngb-alert>\\r\\n\\r\\n        <ngb-alert type=\\\"info\\\" [dismissible]=\\\"false\\\" *ngIf=\\\"action === 'copy-post'\\\">\\r\\n            A copy of the post will be uploaded to fifteensquared.net as a draft.\\r\\n            Any existing posts will remain unchanged.\\r\\n            If the existing post has received any comments then these will not be visible on the new post.\\r\\n            Log in to fifteensquared and use the Admin section to remove the existing post and publsih the new one.\\r\\n        </ngb-alert>\\r\\n    \\r\\n        <ngb-alert type=\\\"info\\\" [dismissible]=\\\"false\\\" *ngIf=\\\"action === 'copy-grid'\\\">\\r\\n            A copy of the grid will be uploaded to the Media Library on fifteensquared.net.\\r\\n            To include this grid in an existing post log in to fifteensquared and use the Admin section edit the desired post.\\r\\n            Include the grid using the \\\"Insert Media\\\" button on the editor page.\\r\\n        </ngb-alert>\\r\\n\\r\\n        <ngb-alert type=\\\"warning\\\" [dismissible]=\\\"false\\\" *ngIf=\\\"action === 'replace-post'\\\">\\r\\n            <strong>NOT IMPLEMENTED</strong> The content of the existing post will be replaced fifteensquared.net.\\r\\n            Be aware that the content of the existing post will be lost.\\r\\n            If the existing post has received any comments then these will still be visible.\\r\\n        </ngb-alert>\\r\\n\\r\\n        <ngb-alert type=\\\"warning\\\" [dismissible]=\\\"false\\\" *ngIf=\\\"action === 'replace-grid'\\\">\\r\\n            <strong>NOT IMPLEMENTED</strong> If the existing post contained a grid then the grid will be replaced.\\r\\n            The post content and comments will remain unchanged.\\r\\n        </ngb-alert>\\r\\n\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div class=\\\"row\\\" *ngIf=\\\"appStatus && puzzle\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n        <button \\r\\n            [disabled]=\\\"appStatus.busy || action === 'nothing'\\\" \\r\\n            type=\\\"button\\\" \\r\\n            class=\\\"btn btn-primary mr-3\\\"\\r\\n            (click)=\\\"onContinue()\\\">\\r\\n            Publish\\r\\n        </button>\\r\\n        <button \\r\\n            [disabled]=\\\"appStatus.busy\\\" \\r\\n            type=\\\"button\\\" \\r\\n            class=\\\"btn btn-primary\\\" \\r\\n            (click)=\\\"onBack()\\\">\\r\\n            Back\\r\\n        </button>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div style=\\\"visibility: hidden;\\\">\\r\\n    <app-grid #gridControl [options]=\\\"{ showShading: true }\\\"></app-grid>\\r\\n</div>\"","export default \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n        <table class=\\\"table w-100\\\" *ngIf=\\\"puzzle\\\">\\r\\n            <tbody>\\r\\n                <ng-container *ngFor=\\\"let clue of puzzle.clues\\\">\\r\\n                    <tr class=\\\"border-top bg-light\\\" (click)=\\\"onRowClick(clue)\\\" *ngIf=\\\"!clue.highlight\\\">\\r\\n                        <td>\\r\\n                            {{clue.caption}}\\r\\n                        </td>\\r\\n                        <td class=\\\"font-weight-bold\\\">\\r\\n                            {{clue.answer}}\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <app-clue-text [clue]=\\\"clue\\\" [publishOptions]=\\\"puzzle.publishOptions\\\"></app-clue-text>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <quill-view [content]=\\\"clue.comment\\\" format=\\\"object\\\" theme=\\\"snow\\\"></quill-view>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <ng-container *ngIf=\\\"appSettings.general.showCommentValidation.enabled && clue.warnings.length && !clue.redirect\\\">\\r\\n                                <span class=\\\"text-warning\\\"> {{clue.warnings[0]}}</span>\\r\\n                            </ng-container>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n\\r\\n                    <tr *ngIf=\\\"clue.highlight\\\">\\r\\n                        <td colspan=\\\"5\\\">\\r\\n                            <div class=\\\"border rounded\\\">\\r\\n                                <app-clue-editor [clueId]=\\\"clue.id\\\" (close)=\\\"onEditorClose(clue, $event)\\\"></app-clue-editor>\\r\\n                            </div>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </ng-container>\\r\\n            </tbody>\\r\\n        </table>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row mt-5\\\" *ngIf=\\\"puzzle\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary mr-3\\\" (click)=\\\"onContinue()\\\">Continue</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary mr-3\\\" (click)=\\\"onSolver()\\\" *ngIf=\\\"puzzle.info.solveable\\\">Open in solver</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary mr-3\\\" (click)=\\\"onEditClues()\\\">Edit clues (temp)</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary mr-3\\\" (click)=\\\"onBack()\\\">Back</button>\\r\\n    </div>\\r\\n</div>\"","export default \"<div class=\\\"row\\\" *ngIf=\\\"puzzle\\\">\\n    <div class=\\\"col\\\">\\n        <h5>{{puzzle.info.title}}</h5>\\n    </div>\\n</div>\\n\\n<div class=\\\"row\\\" *ngIf=\\\"puzzle\\\">\\n    <div class=\\\"col\\\">\\n        <app-grid (cellClick)=\\\"onCellClick($event)\\\"></app-grid>\\n    </div>\\n\\n    <div class=\\\"col\\\">\\n        <app-clue-list direction=\\\"across\\\" (clueClick)=\\\"onClueClick($event)\\\"></app-clue-list>\\n    </div>\\n\\n    <div class=\\\"col\\\">\\n        <app-clue-list direction=\\\"down\\\" (clueClick)=\\\"onClueClick($event)\\\"></app-clue-list>\\n    </div>\\n</div>\\n\\n<div class=\\\"row\\\" *ngIf=\\\"puzzle\\\">\\n    <div class=\\\"col\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary mr-3\\\" (click)=\\\"onContinue()\\\">Continue</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary mr-3\\\" (click)=\\\"onBlogger()\\\">Open in blogger</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary mr-3\\\" (click)=\\\"onBack()\\\">Back</button>\\n    </div>\\n</div>\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SolverComponent } from './ui/puzzle-solving/solver/solver.component';\r\nimport { PublishOptionsComponent } from './ui/puzzle-publishing/publish-options/publish-options.component';\r\nimport { PublishComponent } from './ui/puzzle-publishing/publish/publish.component';\r\nimport { PublishCompleteComponent } from './ui/puzzle-publishing/publish-complete/publish-complete.component';\r\nimport { PublishPreambleComponent } from './ui/puzzle-publishing/publish-preamble/publish-preamble.component';\r\nimport { BloggerComponent } from './ui/puzzle-solving/blogger/blogger.component';\r\nimport { ArchiveComponent } from './ui/puzzle-editing/archive/archive.component';\r\nimport { LocationStrategy, HashLocationStrategy } from '@angular/common';\r\nimport { PublishGridComponent } from './ui/puzzle-publishing/publish-grid/publish-grid.component';\r\nimport { PublishLoginComponent } from './ui/puzzle-publishing/publish-login/publish-login.component';\r\nimport { OpenPuzzleComponent } from './ui/puzzle-editing/open-puzzle/open-puzzle.component';\r\nimport { IndyComponent } from './ui/puzzle-editing/indy/indy.component';\r\nimport { GridEditorComponent } from './ui/puzzle-editing/grid-editor/grid-editor.component';\r\nimport { GridStartComponent } from './ui/puzzle-editing/grid-start/grid-start.component';\r\nimport { SpecialPdfComponent } from './ui/puzzle-editing/special-pdf/special-pdf.component';\r\nimport { SpecialComponent } from './ui/puzzle-editing/special/special.component';\r\nimport { SpecialTextComponent } from './ui/puzzle-editing/special-text/special-text.component';\r\nimport { CreatePuzzleComponent } from './ui/puzzle-editing/create-puzzle/create-puzzle.component';\r\nimport { HomeComponent } from './ui/app-general/home/home.component';\r\nimport { LoginComponent } from './ui/app-general/login/login.component';\r\nimport { DiaryComponent } from './ui/app-general/diary/diary.component';\r\nimport { ReadmeComponent } from './ui/app-general/readme/readme.component';\r\nimport { SettingsComponent } from './ui/app-general/settings/settings.component';\r\nimport { SpecialLoginComponent } from './ui/puzzle-editing/special-login/special-login.component';\r\nimport { NavErrorComponent } from './ui/puzzle-editing/nav-error/nav-error.component';\r\nimport { LinkErrorComponent } from './ui/puzzle-editing/link-error/link-error.component';\r\nimport { CluesEditorComponent } from './ui/puzzle-editing/clues-editor/clues-editor.component';\r\n\r\nconst routes: Routes = [\r\n    // landing pages\r\n    { path: \"home\", component: HomeComponent },\r\n    { path: \"login\", component: LoginComponent },\r\n\r\n    // solving and blogging puzzles\r\n    { path: \"archive/:provider\", component: ArchiveComponent },\r\n    { path: \"indy\", component: IndyComponent },\r\n    { path: \"special\", component: SpecialComponent },\r\n    { path: \"special-pdf\", component: SpecialPdfComponent },\r\n    { path: \"special-login\", component: SpecialLoginComponent },\r\n    { path: \"open-puzzle\", component: OpenPuzzleComponent },\r\n    { path: \"solver\", component: SolverComponent },\r\n    { path: \"blogger\", component: BloggerComponent },\r\n\r\n    // publishing puzzles\r\n    { path: \"publish-options\", component: PublishOptionsComponent },\r\n    { path: \"publish-grid\", component: PublishGridComponent },\r\n    { path: \"publish-preamble\", component: PublishPreambleComponent },\r\n    { path: \"publish-login\", component: PublishLoginComponent },\r\n    { path: \"publish\", component: PublishComponent },\r\n    { path: \"publish-complete\", component: PublishCompleteComponent },\r\n\r\n    // creating and editing grids\r\n    { path: \"create-puzzle\", component: CreatePuzzleComponent },\r\n    { path: \"special-text\", component: SpecialTextComponent },\r\n    { path: \"grid-start\", component: GridStartComponent },\r\n    { path: \"grid-editor\", component: GridEditorComponent },\r\n    { path: \"clues-editor\", component: CluesEditorComponent },\r\n    { path: \"nav-error\", component: NavErrorComponent },\r\n    { path: \"link-error\", component: LinkErrorComponent },\r\n\r\n    // general\r\n    { path: \"diary\", component: DiaryComponent },\r\n    { path: \"readme\", component: ReadmeComponent },\r\n    { path: \"settings\", component: SettingsComponent },\r\n\r\n    // default routes\r\n    { path: \"\", redirectTo: \"/home\", pathMatch: \"full\" },\r\n    { path: \"*\", redirectTo: \"/home\", pathMatch: \"full\" }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n  providers: [\r\n    {provide: LocationStrategy, useClass: HashLocationStrategy},\r\n  ]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\r\nimport { QuillModule } from \"ngx-quill\";\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\n\r\nimport { AppComponent } from './ui/app/app.component';\r\nimport { PublishOptionsComponent } from './ui/puzzle-publishing/publish-options/publish-options.component';\r\nimport { PublishComponent } from './ui/puzzle-publishing/publish/publish.component';\r\nimport { PublishCompleteComponent } from './ui/puzzle-publishing/publish-complete/publish-complete.component';\r\nimport { PublishPreambleComponent } from './ui/puzzle-publishing/publish-preamble/publish-preamble.component';\r\nimport { ClueListComponent } from './ui/components/clue-list/clue-list.component';\r\nimport { SolverComponent } from './ui/puzzle-solving/solver/solver.component';\r\nimport { ClueEditorComponent } from './ui/components/clue-editor/clue-editor.component';\r\nimport { ClueTextChunkComponent } from './ui/components/clue-text-chunk/clue-text-chunk.component';\r\nimport { GridComponent } from './ui/components/grid/grid.component';\r\n\r\nimport { PuzzleManagementService, IPuzzleManager, IActivePuzzle } from './services/puzzle-management.service';\r\nimport { AlertComponent } from './ui/components/alert/alert.component';\r\nimport { TextStyleComponent } from './ui/components/text-style/text-style.component';\r\nimport { BloggerComponent } from './ui/puzzle-solving/blogger/blogger.component';\r\nimport { ClueTextControlComponent } from './ui/components/clue-text-control/clue-text-control.component';\r\nimport { ClueTextComponent } from './ui/components/clue-text/clue-text.component';\r\nimport { CluesPreviewComponent } from './ui/components/clues-preview/clues-preview.component';\r\nimport { ContentPreviewComponent } from './ui/components/content-preview/content-preview.component';\r\nimport { HtmlAsIsPipe } from './ui/pipes/html-as-is.pipe';\r\nimport { ValidationMessageComponent } from './ui/components/validation-message/validation-message.component';\r\nimport { LoginControlComponent } from './ui/components/login-control/login-control.component';\r\nimport { ArchiveComponent } from './ui/puzzle-editing/archive/archive.component';\r\nimport { ProviderPipe } from './ui/pipes/provider.pipe';\r\nimport { PublishGridComponent } from './ui/puzzle-publishing/publish-grid/publish-grid.component';\r\nimport { ColorControlComponent } from './ui/components/color-control/color-control.component';\r\nimport { PublishLoginComponent } from './ui/puzzle-publishing/publish-login/publish-login.component';\r\nimport { TipComponent } from './ui/components/tip/tip.component';\r\nimport { TipInstanceFactory } from './ui/components/tip/tip-instance';\r\nimport { OpenPuzzleComponent } from './ui/puzzle-editing/open-puzzle/open-puzzle.component';\r\nimport { WordpressIdPipe } from './ui/pipes/wordpress-id.pipe';\r\nimport { IndyComponent } from './ui/puzzle-editing/indy/indy.component';\r\nimport { ConfirmModalComponent } from './ui/components/confirm-modal/confirm-modal.component';\r\nimport { GridEditorComponent } from './ui/puzzle-editing/grid-editor/grid-editor.component';\r\nimport { GridStartComponent } from './ui/puzzle-editing/grid-start/grid-start.component';\r\nimport { GridPropertiesEditorComponent } from './ui/components/grid-properties-editor/grid-properties-editor.component';\r\nimport { DownloadButtonComponent } from './ui/components/download-button/download-button.component';\r\nimport { DiaryAliasControlComponent } from './ui/components/diary-alias-control/diary-alias-control.component';\r\nimport { DiarySettingsEditorComponent } from './ui/components/diary-settings-editor/diary-settings-editor.component';\r\nimport { SpecialPdfComponent } from './ui/puzzle-editing/special-pdf/special-pdf.component';\r\nimport { SpecialComponent } from './ui/puzzle-editing/special/special.component';\r\nimport { SpecialTextComponent } from './ui/puzzle-editing/special-text/special-text.component';\r\nimport { ParseResultComponent } from './ui/components/parse-result/parse-result.component';\r\nimport { ParseErrorHintComponent } from './ui/components/parse-error-hint/parse-error-hint.component';\r\nimport { NavTrack } from './ui/navigation/interfaces';\r\nimport { publishPostTrack } from './ui/navigation/tracks/publish-post-track';\r\nimport { publishGridTrack } from './ui/navigation/tracks/publish-grid-track';\r\nimport { NAV_TRACKS, NAV_PROCESSOR } from './ui/navigation/nav.service';\r\nimport { CreatePuzzleComponent } from './ui/puzzle-editing/create-puzzle/create-puzzle.component';\r\nimport { CluesEditorComponent } from './ui/puzzle-editing/clues-editor/clues-editor.component';\r\nimport { ValidatePuzzleComponent } from './ui/puzzle-editing/validate-puzzle/validate-puzzle.component';\r\nimport { UIProcessService } from './ui/navigation/ui-process.service';\r\nimport { CluesStartComponent } from './ui/puzzle-editing/clues-start/clues-start.component';\r\nimport { LinkErrorComponent } from './ui/puzzle-editing/link-error/link-error.component';\r\nimport { HomeComponent } from './ui/app-general/home/home.component';\r\nimport { LoginComponent } from './ui/app-general/login/login.component';\r\nimport { ReadmeComponent } from './ui/app-general/readme/readme.component';\r\nimport { SettingsComponent } from './ui/app-general/settings/settings.component';\r\nimport { DiaryComponent } from './ui/app-general/diary/diary.component';\r\nimport { SpecialLoginComponent } from './ui/puzzle-editing/special-login/special-login.component';\r\nimport { NavErrorComponent } from './ui/puzzle-editing/nav-error/nav-error.component';\r\nimport { ClueListItemComponent } from './ui/components/clue-list-item/clue-list-item.component';\r\nimport { createTrack } from './ui/navigation/tracks/create-track';\r\nimport { solveTrack } from './ui/navigation/tracks/solve-track';\r\n\r\nconst quillGlobalConfig = {\r\n    modules: {\r\n        toolbar: [\r\n            ['bold', 'italic', 'underline'],\r\n            [{ 'color': [] }, { 'background': [] }],\r\n            [{ 'font': [] }],\r\n            ['link', 'image']\r\n        ]\r\n    }\r\n};\r\n\r\nconst tracks: ReadonlyArray<NavTrack> = [\r\n    createTrack,\r\n    solveTrack,\r\n    publishPostTrack,\r\n    publishGridTrack,\r\n];\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        HtmlAsIsPipe,\r\n        ProviderPipe,\r\n        AppComponent,\r\n        GridComponent,\r\n        ClueListComponent,\r\n        SolverComponent,\r\n        ClueEditorComponent,\r\n        ClueTextControlComponent,\r\n        ClueTextChunkComponent,\r\n        HomeComponent,\r\n        PublishOptionsComponent,\r\n        PublishComponent,\r\n        PublishCompleteComponent,\r\n        PublishPreambleComponent,\r\n        AlertComponent,\r\n        TextStyleComponent,\r\n        BloggerComponent,\r\n        ClueTextComponent,\r\n        CluesPreviewComponent,\r\n        ContentPreviewComponent,\r\n        ValidationMessageComponent,\r\n        LoginComponent,\r\n        LoginControlComponent,\r\n        ArchiveComponent,\r\n        PublishGridComponent,\r\n        ColorControlComponent,\r\n        PublishLoginComponent,\r\n        TipComponent,\r\n        ReadmeComponent,\r\n        SettingsComponent,\r\n        OpenPuzzleComponent,\r\n        WordpressIdPipe,\r\n        IndyComponent,\r\n        ConfirmModalComponent,\r\n        GridEditorComponent,\r\n        GridStartComponent,\r\n        GridPropertiesEditorComponent,\r\n        DownloadButtonComponent,\r\n        DiaryComponent,\r\n        DiaryAliasControlComponent,\r\n        DiarySettingsEditorComponent,\r\n        SpecialPdfComponent,\r\n        SpecialComponent,\r\n        SpecialTextComponent,\r\n        ParseResultComponent,\r\n        ParseErrorHintComponent,\r\n        CreatePuzzleComponent,\r\n        CluesEditorComponent,\r\n        ValidatePuzzleComponent,\r\n        CluesStartComponent,\r\n        LinkErrorComponent,\r\n        SpecialLoginComponent,\r\n        NavErrorComponent,\r\n        ClueListItemComponent,\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        BrowserAnimationsModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        NgbModule,\r\n        BsDatepickerModule.forRoot(),\r\n        HttpClientModule,\r\n        QuillModule.forRoot(quillGlobalConfig),\r\n        AppRoutingModule,\r\n    ],\r\n    providers: [\r\n        PuzzleManagementService,\r\n        {provide: IPuzzleManager, useExisting: PuzzleManagementService},\r\n        {provide: IActivePuzzle, useExisting: PuzzleManagementService},\r\n        HttpClient,\r\n        TipInstanceFactory,\r\n        {provide: NAV_TRACKS, useValue: tracks},\r\n        {provide: NAV_PROCESSOR, useClass: UIProcessService},\r\n    ],\r\n    entryComponents: [\r\n        ClueEditorComponent,\r\n        ConfirmModalComponent,\r\n    ],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { ArchiveItem } from './archive-item';\r\nimport { PuzzleProvider } from './interfaces';\r\n\r\nexport class ArchiveIndex {\r\n    public readonly provider: PuzzleProvider;\r\n    public readonly items: ReadonlyArray<ArchiveItem>;\r\n\r\n    constructor(data: any) {\r\n        if (data) {\r\n            this.provider = data.provider;\r\n            let items = [];\r\n            if (Array.isArray(data.items)) {\r\n                data.items.forEach(item => items.push(new ArchiveItem(item)));\r\n            }\r\n            this.items = items;\r\n        }\r\n    }\r\n}","import moment from \"moment\";\r\nimport { PuzzleProvider } from './interfaces';\r\n\r\nexport class ArchiveItem {\r\n    public readonly provider: PuzzleProvider;\r\n    public readonly serialNumber: number;\r\n    public readonly date: Date;\r\n    public readonly setter: string;\r\n    public readonly url: string;\r\n\r\n    constructor(data: any) {\r\n        this.provider = data.provider;\r\n        this.serialNumber = data.serialNumber;\r\n        this.date = moment(data.xwordDate).toDate();\r\n        this.setter = data.setter;\r\n        this.url = data.url;\r\n    }\r\n}","import { ArchiveIndex } from './archive-index';\r\nimport { PuzzleProvider } from './interfaces';\r\n\r\nexport class Archive {\r\n    public readonly indexes: ReadonlyArray<ArchiveIndex>;\r\n\r\n    constructor(data: any) {\r\n        let indexes = [];\r\n        if (data && Array.isArray(data.indexes)) {\r\n            data.indexes.forEach(index => indexes.push(new ArchiveIndex(index)));\r\n        }\r\n        this.indexes = indexes;\r\n    }\r\n\r\n    getIndex(provider: PuzzleProvider): ArchiveIndex {\r\n        return this.indexes.find(index => index.provider === provider);\r\n    }\r\n}","import { ITextChunk } from './interfaces';\r\n\r\nexport class TextChunk implements ITextChunk {\r\n    public readonly text: string;\r\n    public readonly isDefinition: boolean;\r\n\r\n    constructor(data) {\r\n        this.text = data.text;\r\n        this.isDefinition = data.isDefinition;\r\n    }\r\n}","import { ClueGroup, QuillDelta } from './interfaces';\r\nimport { GridEntry } from './grid-entry';\r\nimport { TextChunk } from './clue-text-chunk';\r\nimport { ClueValidationWarning, IClue } from './interfaces';\r\n\r\nexport class Clue implements IClue {\r\n    public readonly id: string;\r\n    public readonly group: ClueGroup;\r\n    public readonly caption: string;        // \"1 across, 2 down\"\r\n    public readonly text: string;           // \"How to train a dragon (5, 4)\"\r\n    public readonly letterCount: string;    // \"(5, 4)\"\r\n    public readonly answer: string;\r\n    public readonly solution: string;\r\n    public readonly annotation: string;\r\n    public readonly redirect: boolean;\r\n    public readonly format: string;\r\n    public readonly comment: QuillDelta;\r\n    public readonly highlight: boolean;\r\n    public readonly entries: readonly GridEntry[];\r\n    public readonly chunks: readonly TextChunk[];\r\n    public readonly warnings: readonly ClueValidationWarning[]; \r\n\r\n    constructor(data: any) {\r\n        this.id = data.id;\r\n        this.caption = data.caption;\r\n        this.text = data.text;\r\n        this.letterCount = data.letterCount;\r\n        this.answer = data.answer;\r\n        this.solution = data.solution;\r\n        this.annotation = data.annotation;\r\n        this.format = data.format;\r\n        this.comment = data.comment;\r\n        this.highlight = data.highlight;\r\n\r\n        if (typeof data.group === \"string\" && (data.group === \"across\" || data.group === \"down\")) {\r\n            this.group = data.group;\r\n        } else {\r\n            throw \"unrecognised clue group when reading clue data\";\r\n        }\r\n\r\n        if (typeof data.redirect === \"boolean\") {\r\n            this.redirect = data.redirect;\r\n        } else if (typeof data.text === \"string\" && data.text.length > 0) {\r\n            this.redirect = new RegExp(\"^see\\\\s+\\\\d+(\\\\d+|across|down|,|\\\\s+)*$\", \"i\").test(data.text);\r\n        } else {\r\n            this.redirect = false;\r\n        }\r\n\r\n        let entries: GridEntry[] = [];\r\n        data.entries.forEach(entry => entries.push(new GridEntry(entry)));\r\n        this.entries = entries;\r\n\r\n        let chunks: TextChunk[] = [];\r\n        data.chunks.forEach(chunk => chunks.push(new TextChunk(chunk)));\r\n        this.chunks = chunks;\r\n\r\n        let warnings: ClueValidationWarning[] = [];\r\n        if (data.warnings) {\r\n            data.warnings.forEach(warning => warnings.push(warning));\r\n        }\r\n        this.warnings = warnings;\r\n    }\r\n\r\n    public get lengthAvailable(): number {\r\n        let count = 0;\r\n        this.entries.forEach(entry => entry.cellIds.forEach(c => count = count + 1 ));\r\n        return count;\r\n    }\r\n\r\n    public get answerFormat(): string {\r\n        let result = \"\";\r\n        let groups = this.letterCount.split(\",\");\r\n\r\n        groups.forEach((group, index ) => {\r\n            result += this.parseGroup(group);\r\n\r\n            if (index < groups.length - 1) {\r\n                result += \"/\";\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    private parseGroup(group): string {\r\n        let result = \"\";\r\n        let match = null;\r\n\r\n        let exp = /\\d+|[^a-z0-9]/gi;\r\n\r\n        while(match = exp.exec(group.trim())) {\r\n            let text: string = match[0];\r\n\r\n            if (/\\d/.test(text)) {\r\n                let len = parseInt(text);\r\n                result += \",\".repeat(len);\r\n            } else if (text.trim()) {\r\n                result += text.trim();\r\n            }\r\n        }\r\n\r\n    return result;\r\n}\r\n\r\n}","import { IDiaryEntry } from './interfaces';\r\nimport { DateTime } from 'luxon';\r\n\r\nexport class DiaryEntry implements IDiaryEntry {\r\n    readonly solver: string;\r\n    readonly provider: string;\r\n    readonly solveDate: DateTime;\r\n    readonly postDate: DateTime;\r\n    readonly solve: boolean;\r\n\r\n    constructor (data: any) {\r\n        if (data) {\r\n            this.solver = data.solver;\r\n            this.provider = data.provider;\r\n\r\n            if (typeof data.solve === \"boolean\") {\r\n                this.solve = data.solve;\r\n            }\r\n\r\n            if (typeof data.postDate === \"string\") {\r\n                try {\r\n                    this.postDate = DateTime.fromISO(data.postDate);\r\n                } catch {\r\n                    this.postDate = null;\r\n                }\r\n            }\r\n\r\n            if (typeof data.solveDate === \"string\") {\r\n                try {\r\n                    this.solveDate = DateTime.fromISO(data.solveDate);\r\n                } catch {\r\n                    this.solveDate = null;\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n}","import { IDiary } from './interfaces';\r\nimport { DiaryEntry } from './diary-entry';\r\n\r\nexport class Diary implements IDiary {\r\n    readonly entries: ReadonlyArray<DiaryEntry> = [];\r\n\r\n    constructor(data: any) {\r\n        if (data && Array.isArray(data.entries)) {\r\n            let entries: DiaryEntry[] = [];\r\n            data.entries.forEach(d => entries.push(new DiaryEntry(d)));\r\n            this.entries = entries;\r\n        }\r\n    }\r\n}","import { IGridCell } from './interfaces';\r\n\r\nexport class GridCell implements IGridCell {\r\n    public readonly id: string;\r\n    public readonly x: number;\r\n    public readonly y: number;\r\n    public readonly caption: string;\r\n    public readonly content: string;\r\n    public readonly light: boolean;\r\n    public readonly rightBar: boolean;\r\n    public readonly bottomBar: boolean;\r\n    public readonly highlight: boolean;\r\n    public readonly shading: string;\r\n    public readonly edit: boolean;\r\n\r\n    constructor(data: any) {\r\n        this.id = data.id;\r\n        this.x = data.x;\r\n        this.y = data.y;\r\n        this.caption = data.caption;\r\n        this.content = data.content;\r\n        this.light = data.light;\r\n        this.rightBar = data.rightBar;\r\n        this.bottomBar = data.bottomBar;\r\n        this.highlight = data.highlight;\r\n        this.shading = data.shading;\r\n        this.edit = data.edit;\r\n    }\r\n}","import { IGridEntry } from './interfaces';\r\n\r\nexport class GridEntry implements IGridEntry {\r\n    public readonly cellIds: readonly string[];\r\n\r\n    constructor(data: any) {\r\n        let cellIds: string[] = [];\r\n        data.cellIds.forEach(id => cellIds.push(id));\r\n        this.cellIds = cellIds;\r\n    }\r\n}\r\n","import { GridStyle, IGridProperties } from './interfaces';\r\nimport { GridSize } from './grid-size';\r\n\r\nexport class GridProperties implements IGridProperties {\r\n    public readonly style: GridStyle;\r\n    public readonly size: GridSize;\r\n    public readonly symmetrical: boolean;\r\n\r\n    constructor(data: any) {\r\n        this.style = data.style;\r\n        this.symmetrical = data.symmetrical;\r\n        this.size = new GridSize(data.size);\r\n    }\r\n}","import { IGridSize } from './interfaces';\r\n\r\nexport class GridSize implements IGridSize {\r\n    public readonly across: number;\r\n    public readonly down: number;\r\n\r\n    constructor(data: any) {\r\n        this.across = data.across;\r\n        this.down = data.down;\r\n    }\r\n}\r\n","import { IGrid, GridNavigation, Direction } from './interfaces';\r\nimport { GridCell } from './grid-cell';\r\nimport { GridProperties } from './grid-properties';\r\n\r\nexport class Grid implements IGrid {\r\n    public readonly properties: GridProperties;\r\n    public readonly cells: readonly GridCell[];\r\n\r\n    constructor(data: any) {\r\n        if (data.size) {\r\n            this.properties = new GridProperties({ \r\n                size: {\r\n                    across: data.size.across, \r\n                    down: data.size.down,\r\n                },\r\n                style: data.style,\r\n            });\r\n        } else if (data.properties) {\r\n            this.properties = new GridProperties(data.properties);\r\n        }\r\n\r\n        let cells: GridCell[] = [];\r\n        data.cells.forEach(cell => cells.push(new GridCell(cell)));\r\n        this.cells = cells;\r\n    }\r\n\r\n    public cellAt(x: number, y: number): GridCell {\r\n        return this.cells.find((cell) => cell.x === x && cell.y === y);\r\n    }\r\n\r\n    public *getNavigator(startCellId: string, orientation: GridNavigation): Iterator<GridCell> {\r\n        const cellsAcross = this.properties.size.across;\r\n        const cellsDown = this.properties.size.down;\r\n\r\n        let current: GridCell = this.cells.find(c => c.id === startCellId);\r\n        \r\n        // yield the \"start\" as the first \"next\" value\r\n        // the naming seems confusing but is the way that one would expect the iterator to work\r\n        if (current) {\r\n            yield current;\r\n        } else {\r\n            return null as GridCell;\r\n        }\r\n\r\n        while (current !== null) {\r\n\r\n            switch(orientation) {\r\n                case \"right\":\r\n                    if (current.x + 1 < cellsAcross) {\r\n                        current = this.cellAt(current.x + 1, current.y);\r\n                    } else if (current.y + 1 < cellsDown) {\r\n                        current = this.cellAt(0, current.y + 1);\r\n                    } else {\r\n                        current = this.cellAt(0, 0);\r\n                    }\r\n                    break;\r\n                case \"left\":\r\n                    if (current.x - 1 >= 0) {\r\n                        current = this.cellAt(current.x - 1, current.y);\r\n                    } else if (current.y - 1 >= 0) {\r\n                        current = this.cellAt(cellsAcross - 1, current.y - 1);\r\n                    } else {\r\n                        current = this.cellAt(cellsAcross - 1, cellsDown - 1);\r\n                    }\r\n                    break;\r\n                case \"up\":\r\n                    if (current.y - 1 >= 0) {\r\n                        current = this.cellAt(current.x, current.y - 1);\r\n                    } else if (current.x - 1 >= 0) {\r\n                        current = this.cellAt(current.x - 1, cellsDown - 1);\r\n                    } else {\r\n                        current = this.cellAt(cellsAcross - 1, cellsDown - 1);\r\n                    }\r\n                    break;\r\n                case \"down\":\r\n                    if (current.y + 1 < cellsDown) {\r\n                        current = this.cellAt(current.x, current.y + 1);\r\n                    } else if (current.x + 1 < cellsDown) {\r\n                        current = this.cellAt(current.x + 1, 0);\r\n                    } else {\r\n                        current = this.cellAt(0, 0);\r\n                    }\r\n                    break;\r\n            };\r\n\r\n            if (current.id !== startCellId) {\r\n                yield current;\r\n            } else {\r\n                return null as GridCell;\r\n            }\r\n        }\r\n\r\n        return null as GridCell;\r\n    }\r\n\r\n    public getGridEntryForCell(cellId: string): GridCell[] {\r\n        let entry: GridCell[] = [];\r\n        let startCell = this.cells.find(c => c.id === cellId);\r\n\r\n        if (startCell && startCell.light) {\r\n            entry = this.getEntry(startCell, \"across\");\r\n            if (entry.length < 2) {\r\n                entry = this.getEntry(startCell, \"down\");\r\n            }\r\n        }\r\n\r\n        return entry;\r\n    }\r\n\r\n    public getGridEntryForCaption(caption: string,  direction: Direction): GridCell[] {\r\n        let entry: GridCell[] = [];\r\n\r\n        let startCell = this.cells.find(c => c.caption === caption);\r\n\r\n        if (startCell) {\r\n            entry = this.getEntry(startCell, direction);\r\n        }\r\n\r\n        return entry;\r\n    }\r\n    \r\n    private getEntry(entryCell: GridCell, direction: Direction): GridCell[] {\r\n        let result: GridCell[] = [];\r\n        let startCell: GridCell = null;\r\n\r\n        const indexProp = direction === \"across\" ? \"x\" : \"y\";\r\n        const barProp = direction === \"across\" ? \"rightBar\" : \"bottomBar\";\r\n        const forwards = direction === \"across\" ? \"right\" : \"down\";\r\n        const backwards = direction === \"across\" ? \"left\" : \"up\";\r\n        const gridSize = direction === \"across\" ? this.properties.size.across : this.properties.size.down;\r\n\r\n        // first backtrack looking for the start of the entry\r\n        let nav = this.getNavigator(entryCell.id, backwards);\r\n\r\n        let cell = nav.next().value;\r\n        let next = nav.next().value;\r\n\r\n        while(cell) {\r\n            if (cell[indexProp] === 0 ||\r\n                (next && !next.light) ||\r\n                (next && next[barProp])) {\r\n                \r\n                // found first cell in entry\r\n                startCell = cell;\r\n                cell = null;\r\n                next = null;\r\n            } else {\r\n                cell = next;\r\n                next = nav.next().value;\r\n            }\r\n        };\r\n\r\n        // now go forward again looking for the end of the entry\r\n        nav = this.getNavigator(startCell.id, forwards);\r\n        cell = nav.next().value;\r\n        next = nav.next().value;\r\n\r\n        while(cell) {\r\n            result.push(cell);\r\n\r\n            if (cell[indexProp] === gridSize - 1 ||\r\n                cell[barProp] ||\r\n                (next && !next.light)) {\r\n\r\n                //found last cell in entry\r\n                cell = null;\r\n                next = null;\r\n            } else {\r\n                cell = next;\r\n                next = nav.next().value;\r\n            }\r\n        };\r\n\r\n        return result;\r\n    }\r\n\r\n}","import { DeltaOperation } from 'quill';\r\nimport { DateTime } from 'luxon';\r\n\r\nexport type Base64Encoded = string;\r\n\r\nexport type Direction = \"across\" | \"down\";\r\nexport type ClueGroup = \"across\" | \"down\";\r\nexport type ClueValidationWarning = \"missing answer\" | \"missing comment\" | \"missing definition\";\r\nexport type PuzzleProvider = \"cryptic\" | \"prize\" | \"azed\" | \"everyman\" | \"quiptic\" | \"ft\" | \"independent\" | \"ios\" | \"pdf\" | \"text\";\r\nexport type Layouts = \"table\" | \"list\";\r\nexport type Spacings = \"small\" | \"medium\" | \"large\";\r\n\r\nexport type GridNavigation = \"left\" | \"right\" | \"up\" | \"down\" | \"absolute\" | null;\r\nexport type WritingDirection = \"static\" | \"forward\" | \"backward\";\r\n\r\nexport type ParsingErrorLevel = \"warning\" | \"error\";  // and \"fatal-error\" | \"system-error\" ??\r\n\r\nexport class QuillDelta implements ReadonlyQuillDelta { \r\n    ops: DeltaOperation[]\r\n}\r\n\r\nexport class ReadonlyQuillDelta {\r\n    readonly ops: ReadonlyArray<DeltaOperation>;\r\n}\r\n\r\nexport type GridStyle = \"standard\" | \"barred\";\r\nexport const GridStyles: {standard: GridStyle, barred: GridStyle} = {\r\n    standard: \"standard\",\r\n    barred: \"barred\",\r\n}\r\n\r\n// NOTE: using abtract classe rather than interface so that the members can be \r\n// marked as read-only\r\n\r\nexport abstract class ITextChunk {\r\n    abstract readonly text: string;\r\n    abstract readonly isDefinition: boolean;\r\n}\r\n\r\nexport abstract class IClue {\r\n    abstract readonly id: string;\r\n    abstract readonly group: ClueGroup;\r\n    abstract readonly caption: string;        // \"1 across, 2 down\"\r\n    abstract readonly text: string;           // \"How to train a dragon (5, 4)\"\r\n    abstract readonly letterCount: string;    // \"(5, 4)\"\r\n    abstract readonly answer: string;\r\n    abstract readonly solution: string;\r\n    abstract readonly annotation: string;\r\n    abstract readonly redirect: boolean;\r\n    abstract readonly format: string;\r\n    abstract readonly comment: QuillDelta;\r\n    abstract readonly highlight: boolean;\r\n    abstract readonly entries: readonly IGridEntry[];\r\n    abstract readonly chunks: readonly ITextChunk[];\r\n    abstract readonly warnings: readonly ClueValidationWarning[]; \r\n}\r\n\r\nexport abstract class IGridEntry {\r\n    abstract readonly cellIds: readonly string[];\r\n}\r\n\r\nexport abstract class IGridCell {\r\n    abstract readonly id: string;\r\n    abstract readonly x: number;\r\n    abstract readonly y: number;\r\n    abstract readonly caption: string;\r\n    abstract readonly content: string;\r\n    abstract readonly light: boolean;\r\n    abstract readonly rightBar: boolean;\r\n    abstract readonly bottomBar: boolean;\r\n    abstract readonly highlight: boolean;\r\n    abstract readonly shading: string;\r\n    abstract readonly edit: boolean;\r\n}\r\n\r\nexport abstract class IGridProperties {\r\n    abstract readonly style: GridStyle;\r\n    abstract readonly size: IGridSize;\r\n    abstract readonly symmetrical: boolean;\r\n}\r\n\r\nexport abstract class IGrid {\r\n    abstract readonly properties: IGridProperties;\r\n    abstract readonly cells: readonly IGridCell[];\r\n}\r\n\r\nexport abstract class IPuzzle {\r\n    abstract readonly info: IPuzzleInfo;\r\n    abstract readonly publishOptions: IPublishOptions;\r\n    abstract readonly notes: IPuzzleAnnotation;\r\n\r\n    abstract readonly grid: IGrid;\r\n    abstract readonly clues: readonly IClue[];\r\n\r\n    abstract readonly linked: boolean;\r\n    abstract readonly revision: number;\r\n}\r\n\r\nexport abstract class IPuzzleSource {\r\n    abstract readonly source: string;\r\n    abstract readonly parseErrors: ReadonlyArray<IParseError>;\r\n}\r\n\r\nexport abstract class IPuzzleInfo {\r\n    abstract readonly id: string;\r\n    abstract readonly title: string;\r\n    abstract readonly puzzleDate: Date;\r\n    abstract readonly provider: PuzzleProvider;\r\n    abstract readonly setter: string;\r\n    abstract readonly wordpressId: number;\r\n\r\n    abstract readonly blogable: boolean;\r\n    abstract readonly solveable: boolean;\r\n    abstract readonly gridable: boolean;\r\n} \r\n\r\nexport abstract class IPublishOptions {\r\n    abstract readonly layout: Layouts;\r\n    abstract readonly answerStyle: ITextStyle;\r\n    abstract readonly clueStyle: ITextStyle;\r\n    abstract readonly definitionStyle: ITextStyle;\r\n    abstract readonly includeGrid: boolean;\r\n    abstract readonly spacing: Spacings;\r\n}\r\n\r\nexport abstract class ITextStyle {\r\n    abstract readonly color: string;\r\n    abstract readonly bold: boolean;\r\n    abstract readonly italic: boolean;\r\n    abstract readonly underline: boolean;\r\n}\r\n\r\nexport abstract class IPuzzleAnnotation {\r\n    abstract readonly header: ReadonlyQuillDelta;\r\n    abstract readonly body:  ReadonlyQuillDelta;\r\n    abstract readonly footer:  ReadonlyQuillDelta;\r\n}\r\n\r\nexport abstract class IGridSize {\r\n    abstract readonly across: number;\r\n    abstract readonly down: number;\r\n}\r\n\r\nexport abstract class IParseError {\r\n    abstract readonly level: ParsingErrorLevel;\r\n    abstract readonly answer: string;\r\n    abstract readonly clue: string;\r\n    abstract readonly lineNumber: number;\r\n    abstract readonly reason: string;\r\n}\r\n\r\nexport abstract class IDiary {\r\n    abstract readonly entries: readonly IDiaryEntry[]\r\n}\r\n\r\nexport abstract class IDiaryEntry {\r\n    abstract readonly solver: string;\r\n    abstract readonly provider: string;\r\n    abstract readonly solveDate: DateTime;\r\n    abstract readonly postDate: DateTime;\r\n    abstract readonly solve: boolean;\r\n}\r\n","import { TextStyle } from './text-style';\r\nimport { IPublishOptions, Layouts, Spacings } from './interfaces';\r\n\r\n\r\nexport class PublishOptions implements IPublishOptions {\r\n    \r\n    public readonly answerStyle: TextStyle;\r\n    public readonly clueStyle: TextStyle;\r\n    public readonly definitionStyle: TextStyle;\r\n    public readonly includeGrid: boolean;\r\n    public readonly layout: Layouts;\r\n    public readonly spacing: Spacings;\r\n\r\n\r\n    constructor(data) {\r\n        this.answerStyle = data.answerStyle ? new TextStyle(data.answerStyle) : null;\r\n        this.clueStyle  = data.clueStyle ? new TextStyle(data.clueStyle) : null;\r\n        this.definitionStyle = data.definitionStyle ? new TextStyle(data.definitionStyle) : null;\r\n        this.includeGrid = !!(data.includeGrid);\r\n        this.layout = data.layout ? data.layout : \"table\";\r\n        this.spacing = data.spacing ? data.spacing : \"medium\";\r\n     }\r\n}","import { IPuzzleAnnotation, QuillDelta } from './interfaces';\r\nimport { DeltaOperation } from 'quill';\r\n\r\nexport class PuzzleAnnotation implements IPuzzleAnnotation {\r\n    // public readonly header:  DeltaOperation[];\r\n    // public readonly body:  DeltaOperation[];\r\n    // public readonly footer:  DeltaOperation[];\r\n\r\n    public readonly header:  QuillDelta;\r\n    public readonly body:  QuillDelta;\r\n    public readonly footer:  QuillDelta;\r\n\r\n    constructor(data: any) {\r\n        this.header = data.header;\r\n        this.body = data.body;\r\n        this.footer = data.footer;\r\n    }\r\n}","import { IPuzzleInfo, PuzzleProvider } from './interfaces';\r\n\r\nexport class PuzzleInfo implements IPuzzleInfo {\r\n    public readonly id: string;\r\n    public readonly title: string;\r\n    public readonly puzzleDate: Date;\r\n    public readonly provider: PuzzleProvider;\r\n    public readonly setter: string;\r\n    public readonly wordpressId: number;\r\n\r\n    public readonly blogable: boolean;\r\n    public readonly solveable: boolean;\r\n    public readonly gridable: boolean;\r\n\r\n    //public readonly ready: boolean;\r\n    public readonly source: string;\r\n\r\n    constructor(data: any) {\r\n        this.id = data.id;\r\n        this.title = data.title;\r\n        this.puzzleDate = new Date(data.puzzleDate);\r\n        this.provider = data.provider;\r\n        this.setter = data.setter;\r\n        this.wordpressId = data.wordpressId;\r\n        this.blogable = data.blogable;\r\n        this.solveable = data.solveable;\r\n        this.gridable = data.gridable;\r\n        //this.ready = typeof data.ready === \"boolean\" ? data.ready : true; \r\n        this.source = typeof data.source === \"string\" ? data.source : null; \r\n        }\r\n}\r\n","import { PublishOptions } from './publish-options';\r\nimport { PuzzleInfo } from './puzzle-info';\r\nimport { PuzzleAnnotation } from './puzzle-annotation';\r\nimport { Grid } from './grid';\r\nimport { Clue } from './clue';\r\nimport { GridCell } from './grid-cell';\r\nimport { IPuzzle } from './interfaces';\r\n\r\nexport const definitionMaskMarker: string = \"d\";\r\n\r\nexport class Puzzle implements IPuzzle {\r\n    public readonly info: PuzzleInfo;\r\n    public readonly publishOptions: PublishOptions;\r\n    public readonly notes: PuzzleAnnotation;\r\n\r\n    public readonly grid: Grid;\r\n    public readonly clues: readonly Clue[];\r\n    public readonly linked: boolean;\r\n\r\n    public readonly revision: number;\r\n\r\n    constructor(data: any) {\r\n\r\n        this.revision = data.revision ? data.revision : 0;\r\n\r\n        if (data.grid) {\r\n            this.grid = new Grid(data.grid);\r\n        } else {\r\n            this.grid = null;\r\n        }\r\n        \r\n        if (data.clues) {\r\n            let clues: Clue[] = [];\r\n            data.clues.forEach(clue => clues.push(new Clue(clue)));\r\n            this.clues = clues;\r\n        } else {\r\n            this.clues = null;\r\n        }\r\n\r\n        // backwards compatibility\r\n        if (data.info.solveable === undefined) {\r\n            data.info.solveable = data.solveable;\r\n            data.info.blogable  = true;\r\n            data.info.gridable  = false;\r\n        }\r\n\r\n        this.info = new PuzzleInfo(data.info);\r\n\r\n        this.notes = new PuzzleAnnotation(data.notes);\r\n\r\n        this.publishOptions = new PublishOptions(data.publishOptions);\r\n\r\n        this.linked = data.linked;\r\n        //this.version = data.version;\r\n        //this.createdWithVersion = data.createdWithVersion;\r\n    }\r\n\r\n    public getSelectedClue(): Clue {\r\n        return this.clues.find((clue) => clue.highlight);\r\n    }\r\n}\r\n\r\n\r\n","import { ITextStyle } from './interfaces';\r\n\r\nexport class TextStyle implements ITextStyle {\r\n        public readonly color: string;\r\n        public readonly bold: boolean;\r\n        public readonly italic: boolean;\r\n        public readonly underline: boolean;\r\n\r\n        constructor(data) {\r\n            this.color = data.color;\r\n            this.bold = data.bold;\r\n            this.italic = data.italic;\r\n            this.underline = data.underline;\r\n        }\r\n\r\n        public toCssStyleString(): string {\r\n            let result = `color: ${this.color};`;\r\n\r\n            if (this.bold) {\r\n                result = result.concat(\" font-weight: bold;\")\r\n            }\r\n            \r\n            if (this.italic) {\r\n                result = result.concat(\" font-style: italic;\")\r\n            }\r\n            \r\n            if (this.underline) {\r\n                result = result.concat(\" text-decoration: underline;\")\r\n            }\r\n            \r\n            return result;\r\n        }\r\n}","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { LocalStorageService } from './local-storage.service';\r\nimport { QuillDelta } from '../model/interfaces';\r\nimport { BooleanSetting, GeneralSettings, TipSettings, DiarySettings, AppSettings, BooleanSettingsGroupKey } from './common';\r\n\r\n// TO DO: so far all the the settings have turned out to be related to the UI.\r\n// Consider if we need an app-wide settings service.  Perhaps move this to the\r\n// UI section of the project\r\n\r\nclass _BooleanSetting implements BooleanSetting {\r\n    constructor(\r\n        public caption: string,\r\n        public enabled: boolean,\r\n    ) {}\r\n}\r\n\r\nclass _GeneralSettings implements GeneralSettings {\r\n    public showCommentEditor: _BooleanSetting;\r\n    public showCommentValidation: _BooleanSetting;\r\n    public showCheat: _BooleanSetting;\r\n}\r\n\r\nclass _TipSettings implements TipSettings {\r\n    public general: _BooleanSetting;\r\n    public definitionWarning: _BooleanSetting;\r\n    public gridEditor: _BooleanSetting;\r\n    public gridEditorText: _BooleanSetting;\r\n    public gridStart: _BooleanSetting;\r\n    public specialText: _BooleanSetting;\r\n}\r\n\r\nclass _DiarySettings implements DiarySettings {\r\n    public showEverybody: boolean;\r\n    public aliases: string[];\r\n}\r\n\r\nclass _AppSettings implements AppSettings {\r\n    public username: string;\r\n    public general: _GeneralSettings;\r\n    public tips: _TipSettings;\r\n    public sandbox: boolean;\r\n    public footer: QuillDelta;\r\n    public diary: _DiarySettings;\r\n}\r\n\r\n/*\r\n*   Steps to add a new tip or general boolean setting:\r\n*\r\n*   1) Add the name of the setting to one of the exported interfaces, either TipSettings or General Settings\r\n*   2) Add an entry containing the caption and initial value to the _defaultSettings object below\r\n*\r\n*   The setting will automatically appear as a user configuration in the Settings page and will be available\r\n*   for the app to use as appSettings.general.mynewname.enabled or appSettings.tps.mynewname.enabled.\r\n*\r\n*   Tips can be shown using the tip control <app-tip key=\"mynewnamme\"> Your text goes here... </app-tip>\r\n*/\r\n\r\n// before adding more settings read the comment on interfaces GeneralSettings and TipSettings\r\nconst _defaultSettings: _AppSettings = {\r\n    username: null,\r\n    sandbox: false,\r\n    footer: { ops: []},\r\n    general: {\r\n        showCommentEditor: { caption: \"show comment editor\", enabled: true },\r\n        showCommentValidation: { caption: \"show missing answers, comments, definitions etc\", enabled: true },\r\n        showCheat: { caption: \"show cheat buttons\", enabled: true },\r\n    },\r\n    tips: {\r\n        general: { caption: \"show general tips\", enabled: true },\r\n        definitionWarning: { caption: \"show tip on highlighting definitions\", enabled: true },\r\n        gridEditor: { caption: \"show tips on using the Grid Editor\", enabled: true },\r\n        gridEditorText: { caption: \"show tips on entering text in grids\", enabled: true },\r\n        gridStart: { caption: \"show tips on using the Grid Tool start page\", enabled: true },\r\n        specialText: { caption: \"show tips on manually entering clue text\", enabled: true },\r\n    },\r\n    diary: {\r\n        showEverybody: false,\r\n        aliases: [\"PeeDee\"]\r\n    }\r\n};\r\n\r\ntype _Modifier = (settings: _AppSettings) => void;\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AppSettingsService {\r\n    private bs: BehaviorSubject<AppSettings>;\r\n\r\n    constructor(private storageService: LocalStorageService) {\r\n        this.bs = new BehaviorSubject<AppSettings>(_defaultSettings);\r\n\r\n        let data = storageService.getUserSettings();\r\n        if (data) {\r\n            try {\r\n                let newSettings = JSON.parse(data);\r\n                this.update(newSettings);\r\n            } catch { }\r\n        }\r\n    }\r\n\r\n    public get settings() {\r\n        return this.bs.value;\r\n    }\r\n\r\n    public observe(): Observable<AppSettings> {\r\n        return this.bs.asObservable();\r\n    }\r\n\r\n    public update(changes: any) {\r\n        // make a copy of the current settings then overwrite with values from any matching items in the changes object \r\n        this._update((_settings: _AppSettings) => {\r\n            if (changes) {\r\n                if (changes.username !== undefined && \r\n                    (typeof changes.username === \"string\" || changes.username === null)) {\r\n                    _settings.username = changes.username;\r\n                }\r\n\r\n                if (changes.footer !== undefined && changes.footer.ops !== \"undefined\") {\r\n                    _settings.footer = changes.footer;\r\n                }\r\n\r\n                if (changes.sandbox !== undefined && typeof changes.sandbox === \"boolean\") {\r\n                    _settings.sandbox = changes.sandbox;\r\n                }\r\n\r\n                if (changes.diary && typeof changes.diary.showEverybody === \"boolean\") {\r\n                    _settings.diary.showEverybody = changes.diary.showEverybody;\r\n                }\r\n\r\n                if (changes.diary && Array.isArray(changes.diary.aliases)) {\r\n                    _settings.diary.aliases = [];\r\n                    changes.diary.aliases.forEach(alias => {\r\n                        if (alias.trim().length) {\r\n                            _settings.diary.aliases.push(alias);\r\n                        }\r\n                    });\r\n                }\r\n\r\n                this._patchBooleanSettings(_settings, changes, \"general\");\r\n                this._patchBooleanSettings(_settings, changes, \"tips\");\r\n            }\r\n        });\r\n    }\r\n\r\n    public set username(val: string) {\r\n        this._update((settings) => {\r\n            settings.username = val;\r\n        });\r\n    }\r\n\r\n    public hideCommentEditor() {\r\n        this._update((settings) => {\r\n            settings.general.showCommentEditor.enabled = false;\r\n        });\r\n    }\r\n\r\n    public showCommentEditor() {\r\n        this._update((settings) => {\r\n            settings.general.showCommentEditor.enabled = true;\r\n        });\r\n    }\r\n\r\n    public toggleCommentEditor() {\r\n        if (this.bs.value.general.showCommentEditor.enabled) {\r\n            this.hideCommentEditor();\r\n        } else {\r\n            this.showCommentEditor();\r\n        }\r\n    }\r\n\r\n    public factoryReset() {\r\n        this.storageService.saveUserSettings(JSON.stringify(_defaultSettings));\r\n        this.update(_defaultSettings);\r\n    }\r\n\r\n    private _update(modifier: _Modifier) {\r\n        let newSettings: _AppSettings = JSON.parse(JSON.stringify(this.bs.value));\r\n        modifier(newSettings);\r\n        this.storageService.saveUserSettings(JSON.stringify(newSettings));\r\n        this.bs.next(newSettings);\r\n    }\r\n\r\n    private _patchBooleanSettings(currentSettings: _AppSettings, changes: any, group: BooleanSettingsGroupKey) {\r\n\r\n        // For each of the settings in the given BooleanSettingsGroup it look for a matching\r\n        // setting in the changes object and if we find one then apply the new value\r\n\r\n        if (changes && typeof changes[group] === \"object\") {\r\n             Object.keys(currentSettings[group]).forEach(key => {\r\n                let newTip = changes[group][key];\r\n                if (newTip && typeof newTip === \"object\" && typeof newTip.enabled === \"boolean\") {\r\n                    currentSettings[group][key].enabled = newTip.enabled;\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ApiResponse, ApiResponseStatus } from './common';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { Archive } from '../model/archive';\nimport { environment } from 'src/environments/environment';\nimport { PuzzleProvider } from '../model/interfaces';\n\ninterface ArchiveItemResponse {\n    setter: string;\n    providerName: string;\n    serialNumber: number;\n    xwordDate: string;\n}\n\ninterface ArchiveIndexResponse {\n    provider: PuzzleProvider;\n    items: ArchiveItemResponse[];\n}\n\nabstract class ArchiveResponse implements ApiResponse {\n    public readonly success: ApiResponseStatus;\n    public readonly message: string;\n    public readonly indexes: ArchiveIndexResponse[];\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ArchiveService {\n    private bs: BehaviorSubject<Archive>;\n\n    constructor(private http: HttpClient) {\n        this.bs = new BehaviorSubject<Archive>(new Archive(null));\n    }\n\n    public observe(): Observable<Archive> {\n        return this.bs.asObservable();\n    }\n\n    public getList(provider: PuzzleProvider): Promise<void> {\n\n        return this.http.get(environment.apiRoot + \"archive/\" + provider)\n        .toPromise()\n        .then((data: ArchiveResponse) => {\n            if (data) {\n                if (data.success === ApiResponseStatus.OK) {\n                    this.bs.next(new Archive(data));\n                } else {\n                    throw data.message\n                }\n            }\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { ApiResponse, ApiResponseStatus, ApiSymbols } from './common';\nimport { environment } from 'src/environments/environment';\nimport { AppSettingsService } from './app-settings.service';\n\nexport class Credentials {\n    constructor(\n        public readonly username: string,\n        public readonly password: string,\n        public readonly authenticated: boolean,\n    ) { }\n}\n\nconst defaultCredentials: Credentials = new Credentials(\"\", \"\", false);\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthService {\n    private bs: BehaviorSubject<Credentials> = new BehaviorSubject<Credentials>(defaultCredentials);\n\n    constructor(\n        private http: HttpClient,\n        private settingsService: AppSettingsService) { }\n\n    public observe(): Observable<Credentials> {\n        return this.bs.asObservable();\n    }\n\n    public getCredentials(): Credentials {\n        return this.bs.value;\n    }\n\n    public authenticate(username: string, password: string): Promise<void> {\n        return this.http.post(environment.apiRoot + \"authorization/\", { username, password, sandbox: this.settingsService.settings.sandbox})\n        .toPromise()\n        .then((data: ApiResponse) => {\n            if (data.success === ApiResponseStatus.OK) {\n                this.settingsService.username = username;\n                this.bs.next(new Credentials(username, password, true));\n            } else {\n                this.clearCredentials();\n                throw ApiSymbols.AuthorizationFailure;\n            }\n        })\n        .catch((error) => {\n            this.clearCredentials();\n            throw error;\n        });\n    }\n\n    public clearCredentials(): void {\n        this.bs.next(new Credentials(this.settingsService.username, \"\", false));\n    }\n\n}\n","import { Puzzle } from '../model/puzzle';\r\nimport { ReadonlyQuillDelta } from '../model/interfaces';\r\n\r\nexport enum ApiResponseStatus {\r\n    OK = 0,\r\n    other = 1,\r\n    authorizationFailure = 2,\r\n    apiDisabled = 3,\r\n}\r\n\r\nexport interface ApiResponse {\r\n    success: ApiResponseStatus,\r\n    message: string;\r\n}\r\n\r\nexport const ApiSymbols = {\r\n    OK: Symbol(\"OK\"),\r\n    AuthorizationFailure: Symbol(\"AuthorizationFailure\"),\r\n    Error: Symbol(\"Error\"),\r\n}\r\n\r\nexport type PublishStatus = \"publish\" | \"draft\";\r\n\r\nexport interface ContentGenerator {\r\n    getContent(puzzle: Puzzle, gridUrl: string): string;\r\n}\r\n\r\nexport interface BooleanSetting {\r\n    readonly caption: string\r\n    readonly enabled: boolean;\r\n}\r\n\r\n// add new general settings here first, this will ensure all other missing additions are caught by the compiler\r\nexport interface GeneralSettings {\r\n    readonly showCommentEditor: BooleanSetting;\r\n    readonly showCommentValidation: BooleanSetting;\r\n    readonly showCheat: BooleanSetting;\r\n}\r\n\r\n// add new tip settings here first, this will ensure all other missing additions are caught by the compiler\r\nexport interface TipSettings {\r\n    readonly general: BooleanSetting;\r\n    readonly definitionWarning: BooleanSetting;\r\n    readonly gridEditor: BooleanSetting;\r\n    readonly gridEditorText: BooleanSetting;\r\n    readonly gridStart: BooleanSetting;\r\n    readonly specialText: BooleanSetting;\r\n}\r\n\r\nexport interface DiarySettings {\r\n    readonly showEverybody: boolean;\r\n    readonly aliases: ReadonlyArray<string>;\r\n}\r\n\r\nexport interface AppSettings {\r\n    readonly username: string;\r\n    readonly general: GeneralSettings;\r\n    readonly tips: TipSettings;\r\n    readonly sandbox: boolean;\r\n    readonly footer: ReadonlyQuillDelta;\r\n    readonly diary: DiarySettings;\r\n}\r\n\r\nexport type TipKey = keyof TipSettings;\r\nexport type GeneralKey = keyof GeneralSettings;\r\nexport type BooleanSettingsGroupKey = \"general\" | \"tips\";\r\n\r\n","import { Puzzle } from 'src/app/model/puzzle';\r\nimport { QuillDeltaToHtmlConverter } from \"quill-delta-to-html\";\r\nimport { QuillDelta } from 'src/app/model/interfaces';\r\nimport { Clue } from 'src/app/model/clue';\r\nimport escape from \"escape-html\";\r\nimport { TextChunk } from 'src/app/model/clue-text-chunk';\r\nimport { PublishOptions } from 'src/app/model/publish-options';\r\nimport { TextStyle } from 'src/app/model/text-style';\r\nimport { ContentGenerator } from '../common';\r\n\r\nconst marginSizes = {\r\n    small: \"2px\",\r\n    medium: \"5px\",\r\n    large: \"8px\",\r\n}\r\n\r\nexport class ContentGeneratorListLayout implements ContentGenerator {\r\n    private marginSize: string = \"3px\";\r\n\r\n    // TO DO: IMPORTANT!\r\n    // review this component for XSS vunerabilities\r\n\r\n    constructor() {\r\n    }\r\n\r\n    public getContent(puzzle: Puzzle, gridUrl: string): string {\r\n        this.marginSize = marginSizes[puzzle.publishOptions.spacing];\r\n\r\n        const markup =  `\r\n        <div>\r\n            <div>\r\n                ${this.writeQuillDelta(puzzle.notes.header)}\r\n                <!-- MORE -->\r\n                ${this.writeQuillDelta(puzzle.notes.body)}\r\n            </div>\r\n\r\n            <div>\r\n                ${this.writeGridUrl(gridUrl)}\r\n            </div>\r\n\r\n            <div>\r\n                ACROSS\r\n            </div>\r\n            \r\n            <div>\r\n                ${this.writeClues(puzzle.clues.filter(c => c.group === \"across\"), puzzle.publishOptions)}\r\n            </div>\r\n\r\n            <div>\r\n                DOWN\r\n            </div>\r\n            \r\n            <div>\r\n            ${this.writeClues(puzzle.clues.filter(c => c.group === \"down\"), puzzle.publishOptions)}\r\n            </div>\r\n\r\n            <div>\r\n                ${this.writeQuillDelta(puzzle.notes.footer)}\r\n            </div>\r\n        </div>\r\n        `;\r\n\r\n        return markup;\r\n    }\r\n\r\n    private writeClue(clue: Clue, publishOptions: PublishOptions) {\r\n        const markup = `\r\n        <div style=\"margin-top:${this.marginSize}\">\r\n            ${this.writeText(clue.caption, publishOptions.clueStyle)} ${this.writeClueText(clue.chunks, publishOptions)}\r\n        </div>\r\n        <div style=\"margin-top:${this.marginSize}\">\r\n            ${this.writeText(clue.answer, publishOptions.answerStyle)}\r\n        </div>\r\n        <div style=\"margin-top:${this.marginSize}\">\r\n            ${this.writeQuillDelta(clue.comment)}\r\n        </div>`;\r\n\r\n        return markup;\r\n    }\r\n\r\n    private writeGridUrl(url: string) {\r\n        let markup = \"\";\r\n\r\n        if (url) {\r\n            markup = `\r\n            <img src=\"${url}\" alt=\"image of grid\">\r\n            `;\r\n        }\r\n\r\n        return markup;\r\n    }\r\n\r\n    private writeClues(clues: Clue[], publishOptions): string {\r\n        let markup = \"\";\r\n        clues.forEach(clue => markup += this.writeClue(clue, publishOptions));\r\n        return markup;\r\n    }\r\n\r\n    private writeText(text: string, textStyle?: TextStyle) {\r\n        let markup = \"\";\r\n\r\n        if (textStyle) {\r\n            markup = `<span style=\"${textStyle.toCssStyleString()}\">${escape(text)}</span>`;\r\n        } else {\r\n            markup = escape(text);\r\n        }\r\n        return markup;\r\n    }\r\n\r\n    private writeQuillDelta(delta: QuillDelta) {\r\n        let markup = \"\";\r\n\r\n        if (delta && delta.ops && delta.ops.length) {\r\n            const converter = new QuillDeltaToHtmlConverter(\r\n                delta.ops,\r\n                { inlineStyles: true });\r\n\r\n            markup = converter.convert();\r\n        }\r\n\r\n        return markup;\r\n    }\r\n\r\n    private writeClueText(chunks: readonly TextChunk[], publishOptions: PublishOptions): string {\r\n        let markup = \"\";\r\n\r\n        chunks.forEach(chunk => {\r\n            let textStyle = chunk.isDefinition ?\r\n                publishOptions.definitionStyle :\r\n                publishOptions.clueStyle;\r\n\r\n                markup += `<span style=\"${textStyle.toCssStyleString()}\">${chunk.text}</span>`;\r\n        });\r\n\r\n        return markup;\r\n    }\r\n}","import { Puzzle } from 'src/app/model/puzzle';\r\nimport { QuillDeltaToHtmlConverter } from \"quill-delta-to-html\";\r\nimport { QuillDelta } from 'src/app/model/interfaces';\r\nimport { Clue } from 'src/app/model/clue';\r\nimport escape from \"escape-html\";\r\nimport { TextChunk } from 'src/app/model/clue-text-chunk';\r\nimport { PublishOptions } from 'src/app/model/publish-options';\r\nimport { TextStyle } from 'src/app/model/text-style';\r\nimport { ContentGenerator } from '../common';\r\n\r\nconst paddingSizes = {\r\n    small: \"1px\",\r\n    medium: \"3px\",\r\n    large: \"5px\",\r\n}\r\n\r\nexport class ContentGeneratorTableLayout implements ContentGenerator {\r\n    private buffer: string = \"\";\r\n    private tdPadding = \"3px\";\r\n\r\n    // TO DO: IMPORTANT!\r\n    // review this component for XSS vunerabilities\r\n\r\n    // TO DO: rewrite this using the neater back-quote syntax, as used in ContentGeneratorListLayout\r\n\r\n    constructor() {\r\n    }\r\n\r\n    public getContent(puzzle: Puzzle, gridUrl: string): string {\r\n        this.tdPadding = paddingSizes[puzzle.publishOptions.spacing];\r\n\r\n        this.addHtml(\"<div>\");\r\n        this.addQuillDelta(puzzle.notes.header);\r\n        this.addHtml(\"<!-- MORE -->\");\r\n        this.addQuillDelta(puzzle.notes.body);\r\n\r\n        if (gridUrl) {\r\n            this.addHtml(\"<div>\");\r\n            this.addHtml(`<img src=\"${gridUrl}\" alt=\"image of grid\">`);\r\n            this.addHtml(\"</div>\");\r\n        }\r\n\r\n        this.addHtml(\"<table>\")\r\n        this.addHtml(\"<tbody>\")\r\n\r\n        this.addHtml(\"<tr>\");\r\n        this.openTD(3);\r\n        this.addText(\"ACROSS\");\r\n        this.closeTD();\r\n        this.addHtml(\"</tr>\");\r\n\r\n        this.addClues(puzzle.clues.filter(c => c.group === \"across\"), puzzle.publishOptions);\r\n\r\n        this.addHtml(\"<tr>\");\r\n        this.openTD(3);\r\n        this.addText(\"DOWN\");\r\n        this.closeTD();\r\n        this.addHtml(\"</tr>\");\r\n\r\n        this.addClues(puzzle.clues.filter(c => c.group === \"down\"), puzzle.publishOptions);\r\n\r\n        this.addHtml(\"</tbody>\")\r\n        this.addHtml(\"</table>\")\r\n\r\n        this.addQuillDelta(puzzle.notes.footer);\r\n        this.addHtml(\"</div>\");\r\n\r\n        return this.buffer;\r\n\r\n    }\r\n\r\n    private addHtml(html: string) {\r\n        this.buffer = this.buffer.concat(html);\r\n    }\r\n\r\n    private addText(text: string, textStyle?: TextStyle) {\r\n        let formattedText: string = \"\";\r\n\r\n        if (textStyle) {\r\n            formattedText = `<span style=\"${textStyle.toCssStyleString()}\">${escape(text)}</span>`;\r\n        } else {\r\n            formattedText = escape(text);\r\n        }\r\n        this.buffer = this.buffer.concat(formattedText);\r\n    }\r\n\r\n    private addQuillDelta(delta: QuillDelta) {\r\n\r\n        if (delta && delta.ops && delta.ops.length) {\r\n            const converter = new QuillDeltaToHtmlConverter(\r\n                delta.ops,\r\n                { inlineStyles: true });\r\n\r\n            this.buffer = this.buffer.concat(converter.convert());\r\n        }\r\n    }\r\n\r\n    private addClues(clues: Clue[], publishOptions: PublishOptions) {\r\n        clues.forEach(clue => this.addClue(clue, publishOptions));\r\n    }\r\n\r\n    private addClue(clue: Clue, publishOptions: PublishOptions) {\r\n\r\n        // add a row for the clue and answer\r\n        this.addHtml(\"<tr>\");\r\n\r\n        this.openTD();\r\n        this.addText(clue.caption, publishOptions.answerStyle);\r\n        this.closeTD();\r\n\r\n        this.openTD();\r\n        this.addText(clue.answer, publishOptions.answerStyle);\r\n        this.closeTD();\r\n\r\n        this.openTD();\r\n        this.addClueText(clue.chunks, publishOptions);\r\n        this.closeTD();\r\n\r\n        this.addHtml(\"</tr>\");\r\n\r\n        // add a row for the comments\r\n        this.addHtml(\"<tr>\");\r\n\r\n        this.openTD(2);\r\n        this.addHtml(\"&nbsp;\")\r\n        this.closeTD();\r\n\r\n        this.openTD();\r\n        this.addQuillDelta(clue.comment);\r\n        this.closeTD();\r\n\r\n        this.addHtml(\"</tr>\");\r\n\r\n    }\r\n\r\n    private addClueText(chunks: readonly TextChunk[], publishOptions: PublishOptions) {\r\n\r\n        chunks.forEach(chunk => {\r\n            let textStyle = chunk.isDefinition ?\r\n                publishOptions.definitionStyle :\r\n                publishOptions.clueStyle;\r\n\r\n            this.addHtml(`<span style=\"${textStyle.toCssStyleString()}\">${chunk.text}</span>`);\r\n        });\r\n    }\r\n\r\n    private openTD(colspan?: number) {\r\n        const attr = colspan ? `colspan=\"${colspan}\"` : \"\";\r\n        this.buffer = this.buffer.concat(`<td ${attr} style='padding: ${this.tdPadding};'>`);\r\n    }\r\n\r\n    private closeTD() {\r\n        this.buffer = this.buffer.concat(\"</td>\");\r\n    }\r\n\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { AuthService } from './auth.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ApiSymbols, ApiResponse, ApiResponseStatus } from './common';\r\nimport { Diary } from '../model/diary';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\nexport abstract class DiaryResponse implements ApiResponse {\r\n    public abstract success: ApiResponseStatus;\r\n    public abstract message: string;\r\n    public abstract entries: any;\r\n}\r\n\r\ninterface DiaryRequest {\r\n    username: string;\r\n    password: string;\r\n}\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class DiaryService {\r\n    private bs: BehaviorSubject<Diary>;\r\n\r\n    constructor(\r\n        private http: HttpClient,\r\n        private authService: AuthService\r\n    ) {\r\n        this.bs = new BehaviorSubject<Diary>(null);\r\n    }\r\n\r\n    public observe(): Observable<Diary> {\r\n        return this.bs.asObservable();\r\n    }\r\n\r\n    public refresh(): Promise<Symbol> {\r\n        const credentials = this.authService.getCredentials();\r\n\r\n        if (!credentials.authenticated) {\r\n            return Promise.reject(ApiSymbols.AuthorizationFailure);\r\n        }\r\n\r\n        const request: DiaryRequest = {\r\n            username: credentials.username,\r\n            password: credentials.password,\r\n        };\r\n\r\n        return this.http.post(environment.apiRoot + \"diary/\", request)\r\n        .toPromise()\r\n        .then((data: DiaryResponse) => {\r\n            if (data.success === ApiResponseStatus.authorizationFailure) {\r\n                return ApiSymbols.AuthorizationFailure;\r\n            } else {\r\n                this.bs.next(new Diary(data));\r\n                return ApiSymbols.OK\r\n            }\r\n        })\r\n        .catch(() => {\r\n            return ApiSymbols.Error;\r\n        });\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ApiResponse, ApiResponseStatus, ApiSymbols } from './common';\r\nimport { AuthService } from './auth.service';\r\nimport { environment } from \"../../environments/environment\";\r\nimport { OpenPuzzleParamters } from '../ui/services/app.service';\r\nimport { Base64Encoded } from '../model/interfaces';\r\n\r\nabstract class ApiPdfExtractResponse implements ApiResponse {\r\n    public abstract success: ApiResponseStatus;\r\n    public abstract message: string;\r\n    public abstract grid: any;\r\n    public abstract text: string;\r\n}\r\n\r\nabstract class ApiPuzzleResponse implements ApiResponse {\r\n    public abstract success: ApiResponseStatus;\r\n    public abstract message: string;\r\n    public abstract puzzle: any;\r\n    public abstract warnings: any;\r\n    public abstract completionState: string;\r\n}\r\n\r\nexport interface PuzzleResponse {\r\n    readonly puzzle: any;\r\n    readonly warnings: any;\r\n    readonly completionState: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HttpPuzzleSourceService {\r\n\r\n    constructor(\r\n        private http: HttpClient,\r\n        private authService: AuthService) { }\r\n\r\n    public getPuzzle(params: OpenPuzzleParamters): Promise<PuzzleResponse> {\r\n        const credentials = this.authService.getCredentials();\r\n\r\n        if (!credentials.authenticated) {\r\n            return Promise.reject(ApiSymbols.AuthorizationFailure);\r\n        }\r\n\r\n        params.username = credentials.username;\r\n        params.password = credentials.password;\r\n\r\n        return this.http.post(environment.apiRoot + \"puzzle/\", params)\r\n        .toPromise()\r\n        .then((data: ApiPuzzleResponse) => {\r\n            if (data.success === ApiResponseStatus.OK) {\r\n                return data as PuzzleResponse;\r\n            } else if (data.success === ApiResponseStatus.authorizationFailure) {\r\n                throw ApiSymbols.AuthorizationFailure;\r\n            } else {\r\n                throw data.message;\r\n            }\r\n        });\r\n    }\r\n\r\n    public getPdfExtract(pdf: Base64Encoded): Promise<ApiPdfExtractResponse> {\r\n        const credentials = this.authService.getCredentials();\r\n\r\n        if (!credentials.authenticated) {\r\n            return Promise.reject(ApiSymbols.AuthorizationFailure);\r\n        }\r\n\r\n        let params: any = {\r\n            username: credentials.username,\r\n            password: credentials.password,\r\n            sourceDataB64: pdf,\r\n        }\r\n\r\n        return this.http.post(environment.apiRoot + \"pdfextract/\", params)\r\n        .toPromise()\r\n        .then((data: ApiPdfExtractResponse) => {\r\n            if (data.success === ApiResponseStatus.OK) {\r\n                return data as ApiPdfExtractResponse;\r\n            } else if (data.success === ApiResponseStatus.authorizationFailure) {\r\n                throw ApiSymbols.AuthorizationFailure;\r\n            } else {\r\n                throw data.message;\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\nimport { Puzzle } from '../model/puzzle';\nimport { PuzzleInfo } from '../model/puzzle-info';\nimport { IPuzzle } from '../model/interfaces';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LocalStorageService {\n\n    constructor() { }\n\n    public getUserSettings(): string {\n        try {\n            return localStorage.getItem(\"xw-user-settings\");\n        } catch(error) {\n            return null;\n        }\n    }\n\n    public saveUserSettings(settings: string) {\n        try {\n            localStorage.setItem(\"xw-user-settings\", settings);\n        } catch(error) {\n        }\n    }\n\n    // public getLastest(): Promise<Puzzle> {\n    //     let id = localStorage.getItem(\"xw-latest\");\n    //     return this.getPuzzle(id);\n    // }\n\n    public deletePuzzle(id: string): Promise<void> {\n        localStorage.removeItem(\"xw-puzzle-\" + id);\n        return Promise.resolve();\n    }\n\n    public listPuzzles(): PuzzleInfo[] {\n        let result: PuzzleInfo[] = [];\n\n        for(let i = 0; i < localStorage.length; i++) {\n            let key = localStorage.key(i);\n\n            if (key.startsWith(\"xw-puzzle-\")) {\n                let puzzle: any = JSON.parse(localStorage[key]);\n                result.push(new PuzzleInfo(puzzle.info))\n            }\n        }\n\n        return result;\n    }\n\n    public getPuzzle(id: string): Promise<Puzzle> {\n        const json = localStorage.getItem(\"xw-puzzle-\" + id);\n        \n        if (json) {\n            return Promise.resolve(new Puzzle(JSON.parse(json)));\n        } else {\n            return Promise.resolve(null);\n        }\n    }\n\n    public putPuzzle(puzzle: IPuzzle): Promise<any> {\n        if (puzzle) {\n            const json = JSON.stringify(puzzle);\n            localStorage.setItem(\"xw-puzzle-\" + puzzle.info.id, json);\n        }\n\n        return Promise.resolve();\n    }\n\n    public clearPuzzles() {\n        localStorage.clear();\n    }\n}\n","import { IPuzzleModifier } from './puzzle-modifier';\r\nimport { PuzzleM } from './mutable-model/puzzle-m';\r\nimport { Clue } from 'src/app/model/clue';\r\nimport { AddPlaceholders } from './add-placeholders';\r\n\r\nexport class AddClues implements IPuzzleModifier {\r\n    constructor(\r\n        public args: { clues: ReadonlyArray<Clue> }\r\n    ) { }\r\n\r\n    exec(puzzle: PuzzleM) {\r\n        if (puzzle) {\r\n            if (typeof this.args.clues !== \"undefined\") {\r\n                puzzle.clues = JSON.parse(JSON.stringify(this.args.clues));\r\n                puzzle.linked = false;\r\n\r\n                new AddPlaceholders().exec(puzzle);\r\n            }\r\n        }\r\n    }\r\n}","import { IPuzzleModifier } from './puzzle-modifier';\r\nimport { PuzzleM } from './mutable-model/puzzle-m';\r\nimport { GridM } from './mutable-model/grid-m';\r\nimport { Grid } from 'src/app/model/grid';\r\n\r\nexport class AddGrid implements IPuzzleModifier {\r\n    constructor(\r\n        public args: {grid: Grid}\r\n    ) { }\r\n\r\n    exec(puzzle: PuzzleM) {\r\n        if (puzzle) {\r\n            if (typeof this.args.grid !== \"undefined\") {\r\n                puzzle.grid = JSON.parse(JSON.stringify(this.args.grid));\r\n                puzzle.linked = false;\r\n            }\r\n        }\r\n    }\r\n}","import { IPuzzleModifier } from './puzzle-modifier';\r\nimport { PuzzleM } from './mutable-model/puzzle-m';\r\nimport { DeltaInsertOp, InsertDataCustom } from 'quill-delta-to-html';\r\n\r\nexport class AddPlaceholders implements IPuzzleModifier {\r\n    constructor() { }\r\n\r\n    exec(puzzle: PuzzleM) {\r\n        if (puzzle) {\r\n            // puzzle.notes.header = {\r\n            //     ops: [ { \"insert\": \"enter your introduction here\" } ]\r\n            // };\r\n            // puzzle.notes.body = {\r\n            //     ops: [ { \"insert\": \"enter your further comments here\"} ]\r\n            // };\r\n            if (puzzle.clues) {\r\n                puzzle.clues.forEach(clue => clue.warnings = [ \"missing answer\", \"missing comment\", \"missing definition\"]);\r\n            }\r\n        }\r\n    }\r\n}","import { IPuzzleModifier } from './puzzle-modifier';\r\nimport { PuzzleM } from './mutable-model/puzzle-m';\r\n\r\nexport class ClearShading implements IPuzzleModifier {\r\n    constructor() { }\r\n\r\n    exec(puzzle: PuzzleM) {\r\n        if (puzzle.grid) {\r\n            puzzle.grid.cells.forEach((cell) => {\r\n                cell.shading = null;\r\n            });\r\n        }\r\n\r\n    }\r\n}","import { IPuzzleModifier } from './puzzle-modifier';\r\nimport { IPuzzle } from 'src/app/model/interfaces';\r\nimport { PuzzleM } from './mutable-model/puzzle-m';\r\n\r\nexport class Clear implements IPuzzleModifier {\r\n    constructor() { }\r\n\r\n    exec(puzzle: PuzzleM) {\r\n        if (puzzle.clues) {\r\n            puzzle.clues.forEach((clue) => {\r\n                clue.highlight = false;\r\n            });\r\n        }\r\n\r\n        if (puzzle.grid) {\r\n            puzzle.grid.cells.forEach((cell) => {\r\n                cell.highlight = false;\r\n                cell.edit = false;\r\n            });\r\n        }\r\n\r\n    }\r\n}","import { IPuzzleModifier } from './puzzle-modifier';\r\nimport { PuzzleM } from './mutable-model/puzzle-m';\r\nimport { Grid } from 'src/app/model/grid';\r\nimport { GridEntryM } from './mutable-model/grid-entry-m';\r\nimport { Direction, ClueGroup } from 'src/app/model/interfaces';\r\nimport { RenumberGid } from './renumber-grid';\r\n\r\ninterface GridReference {\r\n    // for example: 2 down or 23 across\r\n    clueNumber: number,\r\n    clueGroup: ClueGroup \r\n}\r\nexport class LinkCluesToGrid implements IPuzzleModifier {\r\n    constructor() { }\r\n\r\n    public exec(puzzle: PuzzleM) {\r\n        if (puzzle.grid && puzzle.clues && puzzle.clues.length > 0) {\r\n            let captionWriter = new RenumberGid();\r\n            captionWriter.exec(puzzle);\r\n            \r\n            puzzle.clues.forEach((clue) => {\r\n                const grid = new Grid(puzzle.grid);\r\n    \r\n                // parse the clue caption into grid references\r\n                if (!clue.redirect) {\r\n                    clue.entries = LinkCluesToGrid.makeGridEntries(grid, clue.caption, clue.group);\r\n                }\r\n            });\r\n\r\n            // TO DO: check entries match the letter count\r\n\r\n            puzzle.info.blogable = true;\r\n            puzzle.info.solveable = true;\r\n            puzzle.linked = true;\r\n        }\r\n    }\r\n\r\n    private static makeGridEntries(grid: Grid, caption: string, direction: Direction): GridEntryM[] {\r\n        let result: GridEntryM[] = [];\r\n        let gridRefs = LinkCluesToGrid.readGridReferences(caption, direction);\r\n\r\n        gridRefs.forEach((gridRef) => {\r\n            let gridEntry: GridEntryM = { cellIds: [] };\r\n            let cells = grid.getGridEntryForCaption(gridRef.clueNumber.toString(), gridRef.clueGroup);\r\n\r\n            cells.forEach(cell => gridEntry.cellIds.push(cell.id));\r\n            result.push(gridEntry);\r\n        });\r\n\r\n\r\n        return result;\r\n    }\r\n\r\n    private static readGridReferences(caption: string, direction: ClueGroup): GridReference[] {\r\n        let result: GridReference[] = [];\r\n        const expression = new RegExp(String.raw`\\s*(?<clueNumber>\\d{1,2})(\\s?(?<direction>(across)|(down)))?`);\r\n\r\n        let parts = caption.split(\",\");\r\n\r\n        //console.log(\"CAPTION = \" + caption);\r\n        //console.log(\"PARTS = \" + JSON.stringify(parts));\r\n\r\n        parts.forEach((part) => {\r\n            let clueNumber: number = 0;\r\n            let clueGroup: ClueGroup = direction;\r\n\r\n            let match = expression.exec(part);\r\n\r\n            if (match.groups.clueNumber) {\r\n                clueNumber = parseInt(match.groups.clueNumber);\r\n                if (match.groups.direction) {\r\n                    clueGroup = <ClueGroup>match.groups.direction.toLowerCase(); \r\n                }\r\n                result.push({ clueNumber, clueGroup });\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n}","import { IPuzzleModifier } from './puzzle-modifier';\r\nimport { PuzzleM } from './mutable-model/puzzle-m';\r\n\r\nexport class MakeCellEditable implements IPuzzleModifier {\r\n    constructor(private cellId: string) { }\r\n\r\n    exec(puzzle: PuzzleM) {\r\n        if (puzzle && puzzle.grid) {\r\n            puzzle.grid.cells.forEach(cell => {\r\n                let isMatch = cell.id === this.cellId;\r\n                cell.edit = isMatch;\r\n            });\r\n        }\r\n    }\r\n}","import { IPuzzleModifier } from './puzzle-modifier';\r\nimport { PuzzleM } from './mutable-model/puzzle-m';\r\nimport { ParseData } from '../parsing/text/parse-data';\r\nimport { TextParsingOptions, TextParsingService } from '../parsing/text/text-parsing-service';\r\nimport { Injectable } from '@angular/core';\r\nimport { AddClues } from './add-clues';\r\n\r\n// interface GridReference {\r\n//     // for example: 2 down or 23 across\r\n//     clueNumber: number,\r\n//     clueGroup: ClueGroup \r\n// }\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ParseText implements IPuzzleModifier {\r\n    constructor(private textParsingService: TextParsingService) { }\r\n\r\n    public exec(puzzle: PuzzleM): void {\r\n        let parseData = new ParseData();\r\n        parseData.clueDataType = \"text\";\r\n        parseData.rawData = puzzle.info.source;\r\n\r\n        let options: TextParsingOptions = {\r\n            allowPreamble: true,\r\n            allowPostamble: true,\r\n        }\r\n\r\n        let parser = this.textParsingService.parser(parseData, options);\r\n        let context = parser.next();\r\n\r\n        while(!context.done) {\r\n            context = parser.next();\r\n        }\r\n\r\n        if (!context.value.error) {\r\n            new AddClues({ clues: context.value.clues }).exec(puzzle);\r\n        } else {\r\n            throw new Error(`Failed to parse puzzle at line ${context.value.error.line} ${context.value.error.message}`);\r\n        }\r\n    }\r\n\r\n}","import { IPuzzleModifier } from './puzzle-modifier';\r\nimport { GridStyle, ClueGroup } from 'src/app/model/interfaces';\r\nimport { PuzzleM } from './mutable-model/puzzle-m';\r\nimport { GridCellM } from './mutable-model/grid-cell-m';\r\nimport { GridM } from './mutable-model/grid-m';\r\n\r\nexport class RenumberGid implements IPuzzleModifier {\r\n    constructor() { }\r\n\r\n    exec(puzzle: PuzzleM) {\r\n        let counter = 1;\r\n\r\n        if (puzzle.grid) {\r\n            const grid = puzzle.grid;\r\n\r\n            for(let y = 0; y < grid.properties.size.down; y++) {\r\n                for(let x = 0; x < grid.properties.size.across; x++) {\r\n                    let cell = grid.cells.find(c => c.x === x && c.y === y);\r\n\r\n                    // first try for the first cell of an across word\r\n                    let next = this.nextCellAcross(grid, cell);\r\n                    let previous = this.previousCellAcross(grid, cell);\r\n                    let isStartCell = this.isStartCell(puzzle.grid.properties.style, cell, previous, next, \"across\");\r\n\r\n                    if (!isStartCell) {\r\n                        // no joy, so try for the first cell of a down word\r\n                        next = this.nextCellDown(grid, cell);\r\n                        previous = this.previousCellDown(grid, cell);\r\n                        isStartCell = this.isStartCell(puzzle.grid.properties.style, cell, previous, next, \"down\");\r\n                    }\r\n\r\n                    if (isStartCell) {\r\n                        cell.caption = counter.toString();\r\n                        counter++;\r\n                    } else {\r\n                        cell.caption = \"\";\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private isStartCell(gridStyle: GridStyle, cell: GridCellM, previous: GridCellM, next: GridCellM, direction: ClueGroup): boolean {\r\n        let result: boolean = false;\r\n\r\n        if (gridStyle === \"standard\") {\r\n            result = cell.light && \r\n                next && next.light && \r\n                (!previous || !previous.light); \r\n        \r\n        } else if (gridStyle === \"barred\" && direction === \"across\") {\r\n            result = cell.light && \r\n                !cell.rightBar &&\r\n                next &&\r\n                (!previous || previous.rightBar); \r\n\r\n        } else if (gridStyle === \"barred\" && direction === \"down\") {\r\n            result = cell.light && \r\n                !cell.bottomBar &&\r\n                next &&\r\n                (!previous || previous.bottomBar); \r\n        }\r\n\r\n        return result;\r\n}\r\n\r\n    private nextCellAcross(grid: GridM, cell: GridCellM): GridCellM {\r\n        const x = cell.x;\r\n        const y = cell.y;\r\n\r\n        return x < grid.properties.size.across - 1 ? grid.cells.find(c => c.y === y && c.x === x + 1) : null; \r\n    }\r\n\r\n    private previousCellAcross(grid: GridM, cell: GridCellM): GridCellM {\r\n        const x = cell.x;\r\n        const y = cell.y;\r\n\r\n        return x > 0 ? grid.cells.find(c => c.y === y && c.x === x - 1) : null; \r\n    }\r\n\r\n    private nextCellDown(grid: GridM, cell: GridCellM): GridCellM {\r\n        const x = cell.x;\r\n        const y = cell.y;\r\n\r\n        return y < grid.properties.size.down - 1 ? grid.cells.find(c => c.y === y + 1 && c.x === x) : null; \r\n    }\r\n\r\n    private previousCellDown(grid: GridM, cell: GridCellM): GridCellM {\r\n        const x = cell.x;\r\n        const y = cell.y;\r\n\r\n        return y > 0 ? grid.cells.find(c => c.y === y - 1 && c.x === x) : null; \r\n    }\r\n}","import { IPuzzleModifier } from './puzzle-modifier';\r\nimport { PuzzleM } from './mutable-model/puzzle-m';\r\nimport { GridCell } from 'src/app/model/grid-cell';\r\n\r\nexport class SelectCellsForEdit implements IPuzzleModifier {\r\n    constructor(private cells: GridCell[]) { }\r\n\r\n    exec(puzzle: PuzzleM) {\r\n        if (puzzle && puzzle.grid) {\r\n            puzzle.grid.cells.forEach(cell => {\r\n                cell.highlight = !!this.cells.find(c => c.id === cell.id);\r\n            });\r\n        }\r\n    }\r\n}","import { IPuzzleModifier } from './puzzle-modifier';\r\nimport { IPuzzle, IClue } from 'src/app/model/interfaces';\r\nimport { Clear } from './clear';\r\nimport { Clue } from 'src/app/model/clue';\r\nimport { SelectClue } from './select-clue';\r\nimport { PuzzleM } from './mutable-model/puzzle-m';\r\nimport { GridCell } from 'src/app/model/grid-cell';\r\n\r\nexport class SelectClueByCell implements IPuzzleModifier {\r\n    constructor(\r\n        private cell: GridCell\r\n        ) { }\r\n\r\n    exec(puzzle: PuzzleM) {\r\n        new Clear().exec(puzzle);\r\n\r\n        if (this.cell) {\r\n\r\n            // Find a clue that contains this cell.  \r\n            // Try across clues first then down clues.\r\n            // Prefer clues that have cell in first entry over clues that have\r\n            // the cell in linked entries\r\n\r\n            const acrossClues = this.getAcrossClues(puzzle)\r\n            const downClues = this.getDownClues(puzzle)\r\n            let result: IClue = null;\r\n\r\n            // Look in across clues, first entry only\r\n            result = this.findCellInFirstEntry(acrossClues, this.cell.id);\r\n\r\n            // Look in down clues, first entry only\r\n            if (!result) {\r\n                result = this.findCellInFirstEntry(downClues, this.cell.id);\r\n            }\r\n\r\n            // Look in across clues, all entries\r\n            if (!result) {\r\n                result = this.findCellInAnyEntry(acrossClues, this.cell.id);\r\n            }\r\n\r\n            // Look in down clues, all entries\r\n            if (!result) {\r\n                result = this.findCellInAnyEntry(downClues, this.cell.id);\r\n            }\r\n\r\n            if (result) {\r\n                new SelectClue(result.id).exec(puzzle);\r\n            }\r\n        }\r\n    }\r\n\r\n    private getAcrossClues(puzzle: IPuzzle): IClue[] {\r\n        return puzzle.clues.filter((clue) => clue.group === \"across\");\r\n    }\r\n\r\n    private getDownClues(puzzle: IPuzzle): IClue[] {\r\n        return puzzle.clues.filter((clue) => clue.group === \"down\");\r\n    }\r\n\r\n    private findCellInFirstEntry(clues: IClue[], cellId: string): IClue {\r\n        let result: IClue = null;\r\n\r\n        for (let clue of clues) {\r\n            if (!clue.redirect) {\r\n                if (clue.entries.length) {\r\n                    let entry = clue.entries[0];\r\n                    entry.cellIds.forEach(id => {\r\n                        if (id === cellId) {\r\n                            result = clue;\r\n                        }\r\n                    });\r\n                }\r\n                if (result) {\r\n                    break;\r\n                }\r\n                }\r\n            }\r\n        return result;\r\n    }\r\n\r\n    private findCellInAnyEntry(clues: IClue[], cellId: string): IClue {\r\n        let result: IClue = null;\r\n\r\n        for (let clue of clues) {\r\n            if (!clue.redirect) {\r\n                clue.entries.forEach((entry) => {\r\n                    entry.cellIds.forEach(id => {\r\n                        if (id === cellId) {\r\n                            result = clue;\r\n                        }\r\n                    });\r\n                });\r\n\r\n                if (result) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n}","import { IPuzzleModifier } from './puzzle-modifier';\r\nimport { IPuzzle } from 'src/app/model/interfaces';\r\nimport { Clear } from './clear';\r\nimport { PuzzleM } from './mutable-model/puzzle-m';\r\n\r\nexport class SelectClue implements IPuzzleModifier {\r\n    constructor(public readonly clueId: string) { }\r\n\r\n    exec(puzzle: PuzzleM) {\r\n        if (puzzle) {\r\n            let red = new Clear();\r\n            red.exec(puzzle);\r\n\r\n            let clue = puzzle.clues.find((clue) => clue.id === this.clueId);\r\n            if (clue && !clue.redirect) {\r\n                clue.highlight = true;\r\n                clue.entries.forEach((entry) => {\r\n                    entry.cellIds.forEach((cellId) => {\r\n                        let cell = puzzle.grid.cells.find((cell) => cell.id === cellId);\r\n                        cell.highlight = true;\r\n                    });\r\n                });\r\n            }\r\n        }\r\n    }\r\n}","import { IPuzzleModifier } from './puzzle-modifier';\r\nimport { IPuzzle } from 'src/app/model/interfaces';\r\nimport { Clear } from './clear';\r\nimport { PuzzleM } from './mutable-model/puzzle-m';\r\n\r\nexport class SelectNextClue implements IPuzzleModifier {\r\n    constructor(public readonly clueId: string) { }\r\n\r\n    exec(puzzle: PuzzleM) {\r\n        new Clear().exec(puzzle);\r\n\r\n        let index = puzzle.clues.findIndex((clue) => clue.id === this.clueId);\r\n        if (index >= 0 && index + 1 < puzzle.clues.length) {\r\n            puzzle.clues[index + 1].highlight = true;\r\n        }\r\n    }\r\n}","import { IPuzzleModifier } from './puzzle-modifier';\r\nimport { PuzzleM } from './mutable-model/puzzle-m';\r\nimport { GridProperties } from 'src/app/model/grid-properties';\r\nimport { GridStyle } from 'src/app/model/interfaces';\r\nimport { GridSize } from 'src/app/model/grid-size';\r\n\r\nexport class UpdateGridProperties implements IPuzzleModifier {\r\n    constructor(\r\n        public args: { style?: GridStyle, size?: GridSize, symmetrical?: boolean },\r\n    ) { }\r\n\r\n    exec(puzzle: PuzzleM) {\r\n        if (puzzle) {\r\n            if (this.args) {\r\n                if (this.args.style) {\r\n                    puzzle.grid.properties.style = this.args.style;\r\n                }\r\n                if (this.args.style) {\r\n                    puzzle.grid.properties.size = this.args.size;\r\n                }\r\n                if (this.args.symmetrical !== undefined) {\r\n                    puzzle.grid.properties.symmetrical = this.args.symmetrical;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","import { IPuzzleModifier } from './puzzle-modifier';\r\nimport { IPuzzle } from 'src/app/model/interfaces';\r\nimport { Clear } from './clear';\r\nimport { PuzzleM } from './mutable-model/puzzle-m';\r\n\r\nexport class UpdateCell implements IPuzzleModifier {\r\n    constructor(\r\n        public cellId: string,\r\n        public args: {\r\n            shading?: string,\r\n            caption?: string,\r\n            content?: string,\r\n            light?: boolean,\r\n            rightBar?: boolean,\r\n            bottomBar?: boolean,\r\n        }\r\n    ) { }\r\n\r\n    exec(puzzle: PuzzleM) {\r\n        if (puzzle) {\r\n            \r\n            let cell = puzzle.grid.cells.find((cell) => cell.id === this.cellId);\r\n            if (cell) {\r\n                if (this.args.shading !== undefined) {\r\n                    cell.shading = this.args.shading;\r\n                }\r\n                if (this.args.caption !== undefined) {\r\n                    cell.caption = this.args.caption;\r\n                }\r\n                if (this.args.content !== undefined) {\r\n                    cell.content = this.args.content;\r\n                }\r\n                if (this.args.light !== undefined) {\r\n                    cell.light = this.args.light;\r\n                }\r\n                if (this.args.rightBar !== undefined) {\r\n                    cell.rightBar = this.args.rightBar;\r\n                }\r\n                if (this.args.bottomBar !== undefined) {\r\n                    cell.bottomBar = this.args.bottomBar;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","import { IPuzzleModifier } from './puzzle-modifier';\r\nimport { QuillDelta, ClueValidationWarning } from 'src/app/model/interfaces';\r\nimport { TextChunk } from 'src/app/model/clue-text-chunk';\r\nimport { PuzzleM } from './mutable-model/puzzle-m';\r\n\r\nexport class UpdateClue implements IPuzzleModifier {\r\n    constructor(\r\n        private id: string,\r\n        private answer: string,\r\n        private comment: QuillDelta,\r\n        private chunks: TextChunk[],\r\n        private warnings: ClueValidationWarning[]) { }\r\n\r\n    exec(puzzle: PuzzleM) {\r\n        let clue = puzzle.clues.find((c) => c.id === this.id);\r\n\r\n        if (clue) {\r\n\r\n            // commit the change\r\n            clue.answer = this.answer.trim().toUpperCase();\r\n            clue.comment = this.comment;\r\n            clue.chunks = this.chunks;\r\n            clue.warnings = this.warnings || [];\r\n\r\n            this.updateGridText(puzzle);\r\n        }\r\n    }\r\n\r\n    private updateGridText(puzzle: PuzzleM) {\r\n        if (!puzzle.grid) {\r\n            return;\r\n        }\r\n        // clear the grid\r\n        puzzle.grid.cells.forEach(cell => cell.content = \"\");\r\n\r\n        puzzle.clues.forEach((clue) => {\r\n            let answer = clue.answer.toUpperCase().replace(/[^A-Z]/g, \"\");\r\n            let index = 0;\r\n\r\n            if (answer) {\r\n                clue.entries.forEach((entry) => {\r\n                    entry.cellIds.forEach((id) => {\r\n                        let cell = puzzle.grid.cells.find(c => c.id === id);\r\n                        if (index < answer.length) {\r\n                            cell.content = answer.charAt(index);\r\n                        }\r\n                        index++;\r\n                    });\r\n                });\r\n            }\r\n        });\r\n    }\r\n}","import { IPuzzleModifier } from './puzzle-modifier';\r\nimport { PuzzleM } from './mutable-model/puzzle-m';\r\n\r\nexport class UpdateInfo implements IPuzzleModifier {\r\n    constructor(\r\n        private args: { \r\n            wordPressId?:  number, \r\n            source?: string,\r\n            title?: string,\r\n        },\r\n    ) { }\r\n\r\n    exec(puzzle: PuzzleM) {\r\n        if (this.args.wordPressId !== undefined) {\r\n            puzzle.info.wordpressId = this.args.wordPressId;\r\n        }\r\n        if (this.args.source !== undefined) {\r\n            puzzle.info.source = this.args.source;\r\n        }\r\n        if (this.args.title !== undefined) {\r\n            puzzle.info.title = this.args.title;\r\n        }\r\n    }\r\n}","import { IPuzzleModifier } from './puzzle-modifier';\r\nimport { PuzzleM } from './mutable-model/puzzle-m';\r\nimport { QuillDelta } from 'src/app/model/interfaces';\r\n\r\nexport class UpdatePreamble implements IPuzzleModifier {\r\n    constructor(\r\n        private title:  string,\r\n        private header:  QuillDelta, \r\n        private body:  QuillDelta) { }\r\n\r\n    exec(puzzle: PuzzleM) {\r\n        puzzle.info.title = this.title ? this.title : \"untitled\";\r\n        puzzle.notes.header = this.header;\r\n        puzzle.notes.body = this.body;\r\n    }\r\n}","import { IPuzzleModifier } from './puzzle-modifier';\r\nimport { IPuzzle } from 'src/app/model/interfaces';\r\nimport { TextStyleName } from 'src/app/ui/common';\r\nimport { PuzzleM } from './mutable-model/puzzle-m';\r\n\r\nexport class UpdatePublsihOptionTextStyle implements IPuzzleModifier {\r\n    constructor(\r\n        private textStyleName: TextStyleName, \r\n        private color: string, \r\n        private bold: boolean, \r\n        private italic: boolean, \r\n        private underline: boolean) { }\r\n\r\n    exec(puzzle: PuzzleM) {\r\n        let ts = puzzle.publishOptions[this.textStyleName];\r\n        ts.color = this.color;\r\n        ts.bold = this.bold;\r\n        ts.italic = this.italic;\r\n        ts.underline = this.underline;\r\n\r\n    }\r\n}","import { IPuzzleModifier } from './puzzle-modifier';\r\nimport { PuzzleM } from './mutable-model/puzzle-m';\r\nimport { Layouts, Spacings } from 'src/app/model/interfaces';\r\n\r\nexport type PublishOptionsUpdate = { includeGrid?: boolean; layout?: Layouts; spacing?: Spacings };\r\n\r\nexport class UpdatePublsihOptions implements IPuzzleModifier {\r\n    constructor(private options: PublishOptionsUpdate) { }\r\n\r\n    exec(puzzle: PuzzleM) {\r\n        if (!this.options) {\r\n            return;\r\n        }\r\n\r\n        if (typeof this.options.includeGrid !== \"undefined\" && this.options.includeGrid !== null) {\r\n            puzzle.publishOptions.includeGrid = this.options.includeGrid;\r\n        }\r\n\r\n        if (typeof this.options.layout !== \"undefined\" && this.options.layout !== null) {\r\n            puzzle.publishOptions.layout = this.options.layout;\r\n        }\r\n\r\n        if (typeof this.options.spacing !== \"undefined\" && this.options.spacing !== null) {\r\n            puzzle.publishOptions.spacing = this.options.spacing;\r\n        }\r\n\r\n    }\r\n}","import { LineType } from './types';\r\n\r\nexport class Line {\r\n\r\n    constructor(\r\n        public readonly rawText: string,\r\n        public readonly lineNumber: number,\r\n    ) {}\r\n\r\n    public get lineType(): LineType {\r\n        let result: LineType = \"unknown\";\r\n\r\n        if (this.isEmpty) {\r\n            result = \"empty\";\r\n        } else if (this.hasAcrossMarker) {\r\n            result = \"acrossMarker\";\r\n        } else if (this.hasDownMarker) {\r\n            result = \"downMarker\";\r\n        } else if (this.hasStartMarker && this.hasEndMarker) {\r\n            result = \"clue\";\r\n        } else if (this.hasStartMarker) {\r\n            result = \"partialClueStart\";\r\n        } else if (this.hasEndMarker) {\r\n            result = \"partialClueEnd\";\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    public get text(): string {\r\n        return this.rawText.trim();\r\n    }\r\n\r\n    protected get isEmpty(): boolean {\r\n        return this.rawText.trim().length === 0;\r\n    }\r\n\r\n    protected get hasStartMarker(): boolean {\r\n        return /^\\*?\\s*\\d{1,2}\\D/i.test(this.text);\r\n    }\r\n\r\n    protected get hasEndMarker(): boolean {\r\n        return /\\(\\d[,0-9- ]*( words)?\\s?\\)$/i.test(this.text);\r\n    }\r\n\r\n    protected get hasAcrossMarker(): boolean {\r\n        return /^ACROSS$/i.test(this.text);\r\n    }\r\n\r\n    protected get hasDownMarker(): boolean {\r\n        return /^DOWN$/i.test(this.text);\r\n    }\r\n\r\n}","import { Grid } from '../../../model/grid';\r\n\r\nexport class ParseData {\r\n\r\n    // a grid, probably retrieved from somewhere else\r\n    grid: Grid = null;\r\n\r\n    // the raw data, probably scraped form a website\r\n    rawData: string = \"\";\r\n\r\n    // what sort of data is it? eg text, guardian, indy etc \r\n    clueDataType: string = \"text\"; \r\n}","import { v4 as uuid } from \"uuid\";\r\nimport { Clue } from '../../../model/clue';\r\nimport { TokenGroup } from './tokeniser/tokeniser.service';\r\nimport { QuillDelta } from 'src/app/model/interfaces';\r\n\r\nexport type TextParsingState = \"across\" | \"down\" | \"ended\" | null;\r\n\r\nexport type TextParsingErrorCode =\r\n    \"exception\" |\r\n    // naming convention X_Y is: unexpected token X found while in parsing state Y \r\n    \"acrossMarker_across\" | \r\n    \"acrossMarker_down\" | \r\n    \"acrossMarker_ended\" | \r\n\r\n    \"downMarker_null\" | \r\n    \"downMarker_across\" | \r\n    \"downMarker_down\" | \r\n    \"downMarker_ended\" | \r\n\r\n    \"endMarker_null\" | \r\n    \"endMarker_across\" | \r\n    \"endMarker_down\" | \r\n\r\n    \"clue_null\" | \r\n    \"clue_ended\" | \r\n    \"clue_acrossdown\" | \r\n\r\n    \"clueStart_null\" | \r\n    \"clueStart_ended\" | \r\n    \"clueStart_acrossdown\" | \r\n\r\n    \"clueEnd_null\" | \r\n    \"clueEnd_ended\" | \r\n    \"clueEnd_acrossdown\" | \r\n\r\n    \"text_null\" | \r\n    \"text_across\" | \r\n    \"text_down\";\r\n\r\nconst marker = Symbol(\"TextParsingError\");\r\n\r\ninterface ClueTextParts {\r\n    caption: string;\r\n    clue: string;\r\n}\r\n\r\nexport class TextParsingWarning {\r\n    constructor(\r\n        public readonly lineNumber: number,\r\n        public readonly message: string,\r\n    ) {}\r\n}\r\n\r\nexport class TextParsingError {\r\n    private marker: Symbol;\r\n\r\n    constructor(\r\n        public readonly code: TextParsingErrorCode,\r\n        public readonly line: number,\r\n        public readonly text: string,\r\n        public readonly message: string,\r\n    ){\r\n        this.marker = marker;\r\n    }\r\n\r\n    static isTextParsingError(error: any) {\r\n        return error && error.code === marker;\r\n    }\r\n}\r\n\r\nexport interface IParseContext {\r\n    readonly state: TextParsingState;\r\n    readonly clues: ReadonlyArray<Clue>;\r\n    readonly buffer: string;\r\n    readonly tokenGroup: TokenGroup;\r\n    readonly error: TextParsingError;\r\n    readonly warnings: ReadonlyArray<TextParsingWarning>;\r\n}\r\n\r\nexport class ParseContext implements IParseContext {\r\n    private _clueBuffer: string = null;\r\n    private _clues: Clue[] = [];\r\n    private _group: TokenGroup = null;\r\n    private _state: TextParsingState = null;\r\n    private _error: TextParsingError = null;\r\n    private _warnings: TextParsingWarning[] = [];\r\n\r\n    public addText(text: string) {\r\n        if (!this._clueBuffer) {\r\n            this._clueBuffer = text.trim();\r\n        } else {\r\n            this._clueBuffer += \" \" + text.trim();\r\n        }\r\n    }\r\n\r\n    public addWarning(lineNumber: number, message: string) {\r\n        this._warnings.push(new TextParsingWarning(lineNumber, message));\r\n    }\r\n\r\n    public get clues(): ReadonlyArray<Clue> { return this._clues; }\r\n    public get warnings(): ReadonlyArray<TextParsingWarning> { return this._warnings; }\r\n\r\n    public get hasContent(): boolean { return this._clueBuffer !== null; }\r\n    public get buffer(): string { return this._clueBuffer; }\r\n\r\n    public get tokenGroup(): TokenGroup { return this._group; } \r\n    public setGroup(group: TokenGroup): void { this._group = group; }\r\n\r\n    public get state(): TextParsingState { return this._state } \r\n    public set state(state: TextParsingState) { this._state = state } \r\n\r\n    public get error(): TextParsingError { return this._error } \r\n    public set error(error: TextParsingError) { this._error = error } \r\n\r\n    public save(lineNumber: number) {\r\n\r\n        // TO DO: fill in the missing properties on teh clue: letterCount for example\r\n        //compileError - start again here\r\n\r\n        //let line: Line = new Line(this._clueBuffer, lineNumber);\r\n        let parts: ClueTextParts = this.readCaption(this._clueBuffer);\r\n        let letterCount = this.readLetterCount(this._clueBuffer);\r\n        let format = this.makeAnswerFormat(letterCount);\r\n\r\n        this._clues.push(new Clue({\r\n            id: uuid(),\r\n            group: this.state,\r\n            caption: parts.caption,\r\n            text: parts.clue,\r\n            letterCount,\r\n            answer: \"\",\r\n            solution: \"\",\r\n            annotation: null,\r\n            redirect: false,\r\n            format,\r\n            comment: new QuillDelta(),\r\n            highlight: false,\r\n            entries: [],\r\n            warnings: [], \r\n            chunks: [\r\n                {\r\n                    text: parts.clue,\r\n                    isDefinition: false,\r\n                }\r\n            ],\r\n        }));\r\n        this._clueBuffer = null;\r\n    }\r\n\r\n    private readCaption(text: string): ClueTextParts {\r\n\r\n        if (!text || text.trim().length === 0) {\r\n            return null;\r\n        }\r\n\r\n        // one or two digits\r\n        const firstPart = String.raw`\\d{1,2}`;\r\n        \r\n        // optional space, a comma or slash, optional space, one or two digits, then an optioanl \"across\" or \"down\" or \"/\"\"\r\n        const additionalPart = String.raw`\\s*(,|/)\\s*\\d{1,2}(\\s?(across)|(down))?`;\r\n        \r\n        // optional asterisk, optional space, (the first grid reference) then zero or more additional grid references\r\n        const captionGroup = String.raw`(?<caption>\\*?\\s*${firstPart}(${additionalPart})*)`;\r\n        \r\n        // any characters up to the end of the line\r\n        const clueGroup = String.raw`(?<clue>.*$)`;\r\n        \r\n        // start of line, optional space, (the caption group)\r\n        const expression = String.raw`^\\s*${captionGroup}${clueGroup}`;\r\n        \r\n        const regExp = new RegExp(expression);\r\n        const match = regExp.exec(text);\r\n\r\n        return {\r\n            caption: match.groups.caption.trim(),\r\n            clue: match.groups.clue.trim(),\r\n        };\r\n    }\r\n\r\n    private readLetterCount(text: string): string {\r\n        let result = null;\r\n\r\n        const expression = String.raw`^(?<clue>.*)(?<letterCount>\\([0-9-words, ]+?\\)\\s*$)`;\r\n\r\n        const regExp = new RegExp(expression);\r\n        const match = regExp.exec(text);\r\n\r\n        if (match.groups[\"letterCount\"]) {\r\n            result = match.groups[\"letterCount\"].trim();\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n\r\n    private makeAnswerFormat(letterCount: string): string {\r\n        let result: string = \"\";\r\n\r\n        const startMarker = new RegExp(String.raw`^\\(`);\r\n        const endMarker = new RegExp(String.raw`\\d words\\)$`);\r\n\r\n        let parts: string[] = letterCount\r\n            .trim()\r\n            .replace(startMarker, \"\")\r\n            .trim()\r\n            .replace(endMarker, \"\")\r\n            .trim()\r\n            .replace(\")\", \"\")\r\n            .trim()\r\n            .split(\",\");\r\n\r\n        parts.forEach((part) => {\r\n            let exp = new RegExp(/(\\d{1,2})|([^0-9 ])/g);\r\n            let match;\r\n\r\n            if (part.trim().length > 0) {\r\n                let partResult = \"\";\r\n\r\n                while ((match = exp.exec(part)) !== null) {\r\n                    if (match[1] !== null && match[1] !== undefined ) {\r\n                        let count = parseInt(match[1]);\r\n                        partResult += \",\".repeat(count);\r\n                    } else {\r\n                        partResult += match[2];\r\n                    }\r\n                };\r\n\r\n                if (partResult && result) {\r\n                    result += \"/\";\r\n                }\r\n                result += partResult;\r\n\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ParseData } from \"./parse-data\";\r\nimport { TokeniserService, TokenList } from './tokeniser/tokeniser.service';\r\nimport { parseTokenTypes, ClueToken, ClueStartToken, ClueEndToken, TextToken, AcrossMarkerToken, DownMarkerToken, EndMarkerToken } from './tokeniser/tokens';\r\nimport { IParseContext, ParseContext, TextParsingError } from './text-parsing-context';\r\n\r\nexport interface TextParsingOptions {\r\n    allowPreamble?: boolean,\r\n    allowPostamble?: boolean,\r\n}\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class TextParsingService {\r\n\r\n    constructor(private tokeniser: TokeniserService) {}\r\n\r\n    public *parser(data: ParseData, options: TextParsingOptions) {\r\n\r\n        const _options: TextParsingOptions = {\r\n            allowPreamble: options && options.allowPreamble,\r\n            allowPostamble: options && options.allowPostamble,\r\n        }\r\n\r\n        let context = new ParseContext();\r\n        let tokens: TokenList = this.tokeniser.parse(data.rawData);\r\n\r\n        let tokeniser = tokens.getIterator();\r\n        let item = tokeniser.next();\r\n\r\n        while(!item.done) {\r\n            context.setGroup(item.value);\r\n\r\n            try {\r\n                switch (context.tokenGroup.current.type) {\r\n                    case parseTokenTypes.StartMarker:\r\n                        //ignore this\r\n                        break;\r\n                    case parseTokenTypes.AcrossMarker:\r\n                        this.onAcrossMarker(context, _options);\r\n                        break;\r\n                    case parseTokenTypes.DownMarker:\r\n                        this.onDownMarker(context, _options);\r\n                        break;\r\n                    case parseTokenTypes.EndMarker:\r\n                        this.onEndMarker(context, _options);\r\n                        break;\r\n                    case parseTokenTypes.Clue:\r\n                        this.onClueToken(context, _options);\r\n                        break;\r\n                    case parseTokenTypes.ClueStart:\r\n                        this.onClueStartToken(context, _options);\r\n                        break;\r\n                    case parseTokenTypes.Text:\r\n                        this.onTextToken(context, _options);\r\n                        break;\r\n                    case parseTokenTypes.ClueEnd:\r\n                        this.onClueEndToken(context, _options);\r\n                        break;\r\n                    default:\r\n                        throw \"unrecognised Token Type\";\r\n                }\r\n\r\n                yield context as IParseContext;\r\n                item = tokeniser.next();\r\n                context.setGroup(item.value);\r\n\r\n            } catch(error) {\r\n                //context.state = true;\r\n                if (error instanceof TextParsingError) {\r\n                    context.error = error;\r\n                } else {\r\n                    throw error.toString();\r\n                }\r\n                \r\n                return context;\r\n            }\r\n        }\r\n\r\n        //context.state = true;\r\n        context.setGroup(null);\r\n\r\n        return context as IParseContext;\r\n    }\r\n\r\n    private onAcrossMarker(context: ParseContext, options: TextParsingOptions) {\r\n        const token = context.tokenGroup.current as AcrossMarkerToken;\r\n\r\n        switch (context.state) {\r\n            case null:\r\n                context.state = \"across\";\r\n                break;\r\n\r\n            case \"across\":\r\n                throw new TextParsingError(\"acrossMarker_across\", token.lineNumber, token.text, \"Found unexpected ACROSS marker\");\r\n\r\n            case \"down\":\r\n                throw new TextParsingError(\"acrossMarker_down\", token.lineNumber, token.text, \"Found ACROSS marker in the down clues\");\r\n\r\n            case \"ended\":\r\n                if (options.allowPostamble) {\r\n                    // this is OK, it will happen when the solutions from last weeks puzzle appear at the end of a PDF\r\n                } else {\r\n                    throw new TextParsingError(\"acrossMarker_ended\", token.lineNumber, token.text, \"Found ACROSS marker after the end of the puzzle\");\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    private onDownMarker(context: ParseContext, options: TextParsingOptions) {\r\n        const token = context.tokenGroup.current as DownMarkerToken;\r\n\r\n        switch (context.state) {\r\n            case \"across\":\r\n                if (context.buffer === null) {\r\n                    context.state = \"down\";\r\n                } else {\r\n                    throw new TextParsingError(\"downMarker_across\", token.lineNumber, token.text, \"Found DOWN marker when expecting end of a clue\");\r\n                }\r\n                break;\r\n\r\n            case null:\r\n                // even in preamble mode this is probably an error.  Answers to last weeks clues normally appear at the end of a puzzle\r\n                throw new TextParsingError(\"downMarker_null\", token.lineNumber, token.text, \"Found unexpected DOWN marker\");\r\n                break;\r\n\r\n            case \"down\":\r\n                // even in preamble mode this is probably an error.  Answers to last weeks clues don't normally start with a down marker\r\n                throw new TextParsingError(\"downMarker_down\", token.lineNumber, token.text, \"Found DOWN marker in the down clues\");\r\n\r\n            case \"ended\":\r\n                if (options.allowPostamble) {\r\n                    // this is probably OK, down markers can appear in solutions to last week's puzzle\r\n                } else {\r\n                    throw new TextParsingError(\"downMarker_ended\", token.lineNumber, token.text, \"Found DOWN marker after the end of the puzzle\");\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    private onEndMarker(context: ParseContext, options: TextParsingOptions) {\r\n        const token = context.tokenGroup.current as EndMarkerToken;\r\n\r\n        switch (context.state) {\r\n            case null:\r\n                throw new TextParsingError(\"endMarker_null\", token.lineNumber, token.text, \"reached end of file and no clues found\");\r\n                break;\r\n\r\n            case \"across\":\r\n                case null:\r\n                    throw new TextParsingError(\"endMarker_across\", token.lineNumber, token.text, \"reached end of file and no down clues found\");\r\n                    break;\r\n    \r\n            case \"down\":\r\n                if (context.buffer === null) {\r\n                    // this is good news, the input ends following a completed down clue\r\n                } else {\r\n                    throw new TextParsingError(\"endMarker_down\", token.lineNumber, token.text, \"reached the end of the file with an unfinished clue.\");\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    private onClueToken(context: ParseContext, options: TextParsingOptions) {\r\n        const token = context.tokenGroup.current as ClueToken;\r\n\r\n        switch (context.state) {\r\n            case null:\r\n                // even in preamble mode this is probably an error, we don't expect to see a well formatted clue before the first across marker\r\n                throw new TextParsingError(\"clue_null\", token.lineNumber, token.text, \"Found start of clue before ACROSS or DOWN marker\");\r\n                break;\r\n\r\n            case \"ended\":\r\n                // we don't expect to se whole clues cropping up in the solutions\r\n                throw new TextParsingError(\"clue_ended\", token.lineNumber, token.text, \"Found clue after and of down clues\");\r\n                break;\r\n\r\n            case \"across\":\r\n            case \"down\":\r\n                if (!context.hasContent) {\r\n                    context.addText(token.text);\r\n                    context.save(token.lineNumber);\r\n                } else {\r\n                    throw new TextParsingError(\"clue_acrossdown\", token.lineNumber, token.text, \"Found start of new clue when old clue not finished (1)\");\r\n                }\r\n                break;\r\n            }\r\n    }\r\n\r\n    private onClueStartToken(context: ParseContext, options: TextParsingOptions) {\r\n        const token = context.tokenGroup.current as ClueStartToken;\r\n\r\n        switch (context.state) {\r\n            case null:\r\n                if (!options.allowPreamble) {\r\n                    throw new TextParsingError(\"clueStart_null\", token.lineNumber, token.text, \"Found start of clue before ACROSS or DOWN marker\");\r\n                }\r\n                break;\r\n\r\n            case \"across\":\r\n            case \"down\":\r\n                if (!context.hasContent) {\r\n                    context.addText(token.text);\r\n                } else {\r\n                    \r\n                    // TO DO: same situation as in onClueToken()\r\n\r\n                    throw new TextParsingError(\"clueStart_acrossdown\", token.lineNumber, token.text, \"Found start of new clue when old clue not finished (2)\");\r\n                }\r\n                break;\r\n\r\n            case \"ended\": \r\n            if (options.allowPostamble) {\r\n                // This situation is ambiguous.  Probably indicates something htat caused the down clues to end early\r\n                // but we can't be sure at this stage\r\n                context.addWarning(context.tokenGroup.current.lineNumber, \"Found another clue after the end of the puzzle.\");\r\n            } else {\r\n                throw new TextParsingError(\"clueStart_ended\", token.lineNumber, token.text, \"Found clue start after end of down clues\");\r\n            }\r\n            break;\r\n        }\r\n    }\r\n\r\n    private onClueEndToken(context: ParseContext, options: TextParsingOptions) {\r\n        const token = context.tokenGroup.current as ClueEndToken;\r\n\r\n        switch (context.state) {\r\n            case null:\r\n                if (!options.allowPreamble) {\r\n                    throw new TextParsingError(\"clueEnd_null\", token.lineNumber, token.text, \"Found end of clue before ACROSS or DOWN marker\");\r\n                }\r\n                break;\r\n\r\n            case \"across\":\r\n            case \"down\":\r\n                if (context.hasContent) {\r\n                    context.addText(token.text);\r\n                    context.save(token.lineNumber);\r\n                } else {\r\n\r\n                // TO DO: ask the user to fix this manually\r\n\r\n                    throw new TextParsingError(\"clueStart_acrossdown\", token.lineNumber, token.text, \"Found end of clue when no clue started\");\r\n                }\r\n                break;\r\n\r\n            case \"ended\":\r\n                if (options.allowPostamble) {\r\n                    // This situation is ambiguous.  Probably indicates something htat caused the down clues to end early\r\n                    // but we can't be sure at this stage\r\n                    context.addWarning(context.tokenGroup.current.lineNumber, \"Found a clue after the end of the puzzle.\");\r\n                } else {\r\n                        throw new TextParsingError(\"clueEnd_ended\", token.lineNumber, token.text, \"Found clue end after end of down clues\");\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    \r\n    private onTextToken(context: ParseContext, options: TextParsingOptions) {\r\n        const token = context.tokenGroup.current as TextToken;\r\n\r\n        switch (context.state) {\r\n            case null:\r\n                if (!options.allowPreamble) {\r\n                    throw new TextParsingError(\"text_null\", token.lineNumber, token.text, \"Found some text before the ACROSS or DOWN markers.\");\r\n                }\r\n                break;\r\n\r\n            case \"across\":\r\n                if (context.hasContent) {\r\n                    context.addText(token.text);\r\n                } else {\r\n                    throw new TextParsingError(\"text_across\", token.lineNumber, token.text, \"Expected the start of a new clue but found unrecognised text.\");\r\n                }\r\n                break;\r\n\r\n            case \"down\":\r\n                if (context.hasContent) {\r\n                    context.addText(token.text);\r\n                } else {\r\n                    if (options.allowPostamble) {\r\n                        // in postamble mode the down clues are over when a completed down clue is followed by\r\n                        // something not recognisable as part of another clue\r\n                        context.state = \"ended\";\r\n                    } else {\r\n                        throw new TextParsingError(\"text_down\", token.lineNumber, token.text, \"Expected the start of a new clue\");\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { Line } from '../line';\nimport { ParseToken, ClueToken, ClueStartToken, ClueEndToken, TextToken, AcrossMarkerToken, DownMarkerToken, EndMarkerToken, StartMarkerToken, NullToken } from './tokens';\n\nexport class TokenGroup {\n    constructor(\n        public readonly previous: ParseToken,\n        public readonly current: ParseToken,\n        public readonly next: ParseToken\n    ) {}\n}\n\nexport class TokenList {\n    constructor(private _tokens: ReadonlyArray<ParseToken>) {}\n\n    public get tokens(): ReadonlyArray<ParseToken> {\n        return this._tokens;\n    }\n\n    *getIterator(): IterableIterator<TokenGroup> {\n        const max = this._tokens.length - 1;\n        const min = 0;\n\n        // set some defaults here so that if there are no lines to read the flow \n        // of control will fall through and return a TokenGroup with current=EOF\n        let previous: ParseToken = new NullToken();\n        let current: ParseToken = new StartMarkerToken();\n        let next: ParseToken = new EndMarkerToken();\n\n        for(let i = min; i <= max; i++) {\n            previous = (i - 1 >= min) ? this._tokens[i - 1] : new NullToken();\n            current = this._tokens[i];\n            next = (i + 1 <= max) ? this._tokens[i + 1] : new NullToken();\n\n            yield(new TokenGroup(previous, current, next));\n        }\n\n        return new TokenGroup(current, next, new NullToken());\n    }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokeniserService {\n\n    constructor() { }\n\n    public parse(data: string): TokenList {\n        let tokens: ParseToken[] = [];\n\n        // make an array of lines from the source data\n        let lines: Line[] = [];\n        data.replace(\"\\r\", \"\").split(\"\\n\").forEach((line, index) => lines.push(new Line(line, index)));\n\n        tokens.push(new StartMarkerToken());\n\n        lines.forEach(line => {\n            switch (line.lineType) {\n                case \"acrossMarker\":\n                    tokens.push(new AcrossMarkerToken(line));\n                    break;\n                case \"downMarker\":\n                    tokens.push(new DownMarkerToken(line));\n                    break;\n                case \"clue\":\n                    tokens.push(new ClueToken(line));\n                    break;\n                case \"partialClueStart\":\n                    tokens.push(new ClueStartToken(line));\n                    break;\n                case \"partialClueEnd\":\n                    tokens.push(new ClueEndToken(line));\n                    break;\n                case \"unknown\":\n                    tokens.push(new TextToken(line));\n                    break;\n                case \"empty\":\n                    // ignore this line\n                    break;\n            }\n        });\n\n        tokens.push(new EndMarkerToken());\n\n        return new TokenList(tokens);\n    }\n}\n","import { Line } from '../line';\r\n\r\nexport const parseTokenTypes = {\r\n\r\n    StartMarker: Symbol(\"StartMarkerToken\"),\r\n    AcrossMarker: Symbol(\"AcrossMarkerToken\"),\r\n    DownMarker: Symbol(\"DownMarkerToken\"),\r\n    EndMarker: Symbol(\"EndMarkerToken\"),\r\n\r\n    ClueStart: Symbol(\"ClueStartToken\"),\r\n    Clue: Symbol(\"ClueToken\"),\r\n    ClueEnd: Symbol(\"ClueEndToken\"),\r\n\r\n    Text: Symbol(\"TextToken\"),\r\n\r\n    Null: Symbol(\"NullToken\"),\r\n} \r\n\r\nexport abstract class ParseToken {\r\n    public readonly text: string; \r\n    public readonly lineNumber: number;\r\n    public readonly type: Symbol;\r\n\r\n    constructor(line: Line, type: Symbol) {\r\n        this.text = line.rawText;\r\n        this.lineNumber= line.lineNumber;\r\n        this.type = type;\r\n    }\r\n\r\n    public toString(): string {\r\n        return this.type.toString();\r\n    }\r\n\r\n    public toJSON(): any {\r\n        return {\r\n            type: this.type.toString(),\r\n            line: this.lineNumber,\r\n            text: this.text\r\n        };\r\n    }\r\n}\r\n\r\nexport class AcrossMarkerToken extends ParseToken {\r\n    constructor(line: Line) {\r\n        super(line, parseTokenTypes.AcrossMarker);\r\n    }\r\n}\r\n\r\nexport class DownMarkerToken extends ParseToken {\r\n    constructor(line: Line) {\r\n        super(line, parseTokenTypes.DownMarker);\r\n    }\r\n}\r\n\r\nexport class ClueStartToken extends ParseToken {\r\n    constructor(line: Line) {\r\n        super(line, parseTokenTypes.ClueStart);\r\n    }\r\n}\r\n\r\nexport class ClueEndToken extends ParseToken {\r\n    constructor(line: Line) {\r\n        super(line, parseTokenTypes.ClueEnd);\r\n    }\r\n}\r\n\r\nexport class ClueToken extends ParseToken {\r\n    constructor(line: Line) {\r\n        super(line, parseTokenTypes.Clue);\r\n    }\r\n}\r\n\r\nexport class TextToken extends ParseToken {\r\n    constructor(line: Line) {\r\n        super(line, parseTokenTypes.Text);\r\n    }\r\n}\r\n\r\nexport class StartMarkerToken extends ParseToken {\r\n    constructor() {\r\n        super(new Line(\"[start-of-file]\", NaN), parseTokenTypes.StartMarker);\r\n    }\r\n}\r\n\r\nexport class EndMarkerToken extends ParseToken {\r\n    constructor() {\r\n        super(new Line(\"[end-of-file]\", NaN), parseTokenTypes.EndMarker);\r\n    }\r\n}\r\n\r\nexport class NullToken extends ParseToken {\r\n    constructor() {\r\n        super(new Line(\"\", NaN), parseTokenTypes.Null);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { Puzzle } from '../model/puzzle';\nimport { HttpClient } from '@angular/common/http';\nimport { ContentGeneratorTableLayout } from './content-generator/content-generator-table-layout';\nimport { ApiResponse, ApiResponseStatus, ContentGenerator, PublishStatus, ApiSymbols } from './common';\nimport { AuthService, Credentials } from './auth.service';\nimport { environment } from 'src/environments/environment';\nimport { ContentGeneratorListLayout } from './content-generator/content-generator-list-layout';\nimport { AppSettingsService } from './app-settings.service';\n\nabstract class PublishPostResponse implements ApiResponse {\n    public abstract success: ApiResponseStatus;\n    public abstract message: string;\n    public abstract wordpressId: number;\n}\n\nabstract class PublishGridResponse implements ApiResponse {\n    public abstract success: ApiResponseStatus;\n    public abstract message: string;\n    public abstract wordpressId: number;\n    public abstract url: string;\n}\n\nexport interface PublishPostResult {\n    readonly wordpressId: number;\n}\n\nexport interface PublishGridResult {\n    readonly wordpressId: number;\n    readonly url: string;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PublicationService {\n\n    constructor(\n        private http: HttpClient,\n        private authService: AuthService,\n        private settingsService: AppSettingsService,\n    ) { }\n\n    // TO DO: IMPORTANT!\n    // review this component for XSS vunerabilities\n\n    public getContent(puzzle: Puzzle, gridUrl: string) {\n        let generator: ContentGenerator= puzzle.publishOptions.layout === \"list\" ?\n            new ContentGeneratorListLayout():\n            new ContentGeneratorTableLayout();\n\n            return generator.getContent(puzzle, gridUrl);\n    }\n\n    public publishGrid(image: string, title: string): Promise<PublishGridResult> {\n        const credentials: Credentials = this.authService.getCredentials();\n\n        if (image) {\n            return this.http.post(environment.apiRoot + \"PublishGrid\", {\n                title: title,\n                content: image,\n                username: credentials.username,\n                password: credentials.password,\n                sandbox: this.settingsService.settings.sandbox,\n            })\n            .toPromise()\n            .then((data: PublishGridResponse) => {\n                if (data.success === ApiResponseStatus.OK) {\n                    return data as PublishGridResult;\n                } else if (data.success === ApiResponseStatus.authorizationFailure) {\n                    throw ApiSymbols.AuthorizationFailure;\n                } else {\n                    console.log(\"Publish Grid Failure: \" + data.message);\n                    throw \"Publish Grid Failure: \" + data.message;\n                }\n            });\n        } else {\n            return Promise.resolve(null);\n        }\n    }\n\n    public publishPost(puzzle: Puzzle, gridUrl: string, status: PublishStatus): Promise<PublishPostResult> {\n        const credentials: Credentials = this.authService.getCredentials();\n        let content = this.getContent(puzzle, gridUrl);\n\n        return this.http.post(environment.apiRoot + \"PublishPost\", {\n            provider: puzzle.info.provider,\n            title: puzzle.info.title,\n            content,\n            username: credentials.username,\n            password: credentials.password,\n            status: status,\n            sandbox: this.settingsService.settings.sandbox,\n    })\n        .toPromise()\n        .then((data: PublishPostResponse) => {\n            if (data.success === ApiResponseStatus.OK) {\n                return data as PublishPostResult;\n            } else if (data.success === ApiResponseStatus.authorizationFailure) {\n                throw ApiSymbols.AuthorizationFailure;\n            } else {\n                console.log(\"Publish Post Failure: \" + data.message);\n                throw \"Publish Post Failure: \" + data.message;\n            }\n        });\n    }\n}\n","import { v4 as uuid } from \"uuid\";\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { PuzzleInfo } from '../model/puzzle-info';\r\nimport { LocalStorageService } from './local-storage.service';\r\nimport { Puzzle } from '../model/puzzle';\r\nimport { HttpPuzzleSourceService, PuzzleResponse } from './http-puzzle-source.service';\r\nimport { Clear } from './modifiers/clear';\r\nimport { IPuzzleModifier } from './modifiers/puzzle-modifier';\r\nimport { IPuzzle, QuillDelta, Base64Encoded } from '../model/interfaces';\r\nimport { PuzzleM } from './modifiers/mutable-model/puzzle-m';\r\nimport { AddPlaceholders } from './modifiers/add-placeholders';\r\nimport { OpenPuzzleParamters } from '../ui/services/app.service';\r\nimport { ApiResponseStatus, ApiSymbols } from './common';\r\nimport { UpdateInfo } from './modifiers/update-info';\r\nimport { Grid } from '../model/grid';\r\nimport { AddGrid } from './modifiers/add-grid';\r\n\r\n// Note: using abstract classes rather than interfaces to enable them to be used\r\n// as injection tokens in the Angular DI. Interfaces cannot be used directly as injection tokens.\r\n// Avoiding custom InjectionTokens keeps the injection into components simple and readable.\r\n\r\nexport abstract class IActivePuzzle {\r\n    abstract observe(): Observable<Puzzle>;\r\n    abstract get puzzle(): Puzzle;\r\n    abstract hasPuzzle: boolean;\r\n    abstract clear(id?: string);\r\n    abstract update(reducer: IPuzzleModifier): void;\r\n}\r\nexport abstract class IPuzzleManager {\r\n    // TO DO: rename these to make it clearer exactly what each one does\r\n    // at teh moment some of the name sound quite similar\r\n    abstract newPuzzle(reducer?: IPuzzleModifier): void;\r\n    abstract getPuzzleList(): Observable<PuzzleInfo[]>;\r\n    abstract openPuzzle(id: string): Promise<Puzzle>;\r\n    abstract openArchivePuzzle(params: OpenPuzzleParamters): Promise<Puzzle>;\r\n    abstract loadPuzzleFromPdf(pdf: Base64Encoded): Promise<string>;\r\n\r\n    abstract addPuzzle(Puzzle);\r\n    abstract deletePuzzle(id: string): Promise<void>;\r\n}\r\n\r\n@Injectable()\r\nexport class PuzzleManagementService implements IPuzzleManager, IActivePuzzle {\r\n\r\n    private bsList: BehaviorSubject<PuzzleInfo[]>;\r\n    private bsActive: BehaviorSubject<Puzzle>;\r\n\r\n    constructor(\r\n        private localStorageService: LocalStorageService,\r\n        private httpPuzzleService: HttpPuzzleSourceService,\r\n    ) {\r\n        this.bsList = new BehaviorSubject<PuzzleInfo[]>([]);\r\n        this.bsActive = new BehaviorSubject<Puzzle>(null);\r\n        this.refreshPuzzleList();\r\n    }\r\n\r\n    // TO DO\r\n    // Note on interfaces:\r\n    // This class is doing two things: providing management of the active puzzle\r\n    // and providing management of the stored puzzles. Some refactoring seems necessary.\r\n    //\r\n    // So far my attempts to split this into an ActivePuzzle and a \r\n    // PuzzleManager have resulted in cyclic dependencies.  Working around this\r\n    // has just resulted in moving the code-smell somewhere else.  The two functions\r\n    // operate as a pair.\r\n    //\r\n    // For example: the PuzzleManager needs to reference the ActivePuzzleManager whenver a new puzzle\r\n    // is loaded form storage; the ActivePuzzleManager needs to refernce the PuzzleManager to \r\n    // updated the stored puzzle when the active puzzle is modified (to permanently save changes).\r\n    //\r\n    // Note on behaviour subjects:\r\n    // The two behaviour subjects tend to be used independently, but their behaviour is not independent. Some actions\r\n    // cause just one bs to emit a new value, some cause both to emit.  Combining these\r\n    // into a single observable might make sense, but the individual application components typically only depend\r\n    // on one of these, not both. Observing a combined observable just result in unnecessary\r\n    // updates of the component when nothing they are using has changed.\r\n    //\r\n    // I have not run out of ideas yet, just paused this until I have more time to look at it again.\r\n    //\r\n    //  Next idea is to have the puzzle manager obsserve the active puzzle for changes.  Whenever a new active\r\n    //  puzzle is emitted the manager saves it. I am not sure  yet if this a good idea.\r\n    //\r\n    //  Another idea is to have the on or both of the classes reference an interface rather than the concrete class.  Perhaps\r\n    //  this will avoid the cyclic dependency.\r\n    //\r\n\r\n    //#region Active Puzzle interface\r\n\r\n    public observe(): Observable<Puzzle> {\r\n        return this.bsActive.asObservable();\r\n    }\r\n\r\n    public get puzzle(): Puzzle {\r\n        return this.bsActive.value;\r\n    }\r\n\r\n    public newPuzzle(reducer?: IPuzzleModifier): void {\r\n        let puzzle: PuzzleM = this.makeEmptyPuzzle();\r\n\r\n        if (reducer) {\r\n            reducer.exec(puzzle);\r\n        }\r\n\r\n        this.localStorageService.putPuzzle(puzzle);\r\n        this.refreshPuzzleList();\r\n        this.bsActive.next(new Puzzle(puzzle));\r\n    }\r\n\r\n    public get hasPuzzle(): boolean {\r\n        return !!(this.bsActive.value);\r\n    }\r\n\r\n    public clear(id?: string) {\r\n        let current = this.bsActive.value;\r\n\r\n        if (!id || (current && current.info.id === id)) {\r\n            this.bsActive.next(null);\r\n        }\r\n    }\r\n\r\n    public update(reducer: IPuzzleModifier) {\r\n        let puzzle = this.getMutableCopy(this.bsActive.value);\r\n\r\n        if (puzzle) {\r\n            reducer.exec(puzzle);\r\n            this.commit(puzzle);\r\n        }\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region General Puzzle management\r\n\r\n    public getPuzzleList(): Observable<PuzzleInfo[]> {\r\n        return this.bsList.asObservable();\r\n    }\r\n\r\n    public openPuzzle(id: string): Promise<Puzzle> {\r\n        return this.getSavedPuzzle(id)\r\n        .then((puzzle) => {\r\n            if (puzzle) {\r\n                this.usePuzzle(puzzle);\r\n            }\r\n            return puzzle;\r\n        });\r\n    }\r\n\r\n    public addPuzzle(puzzle: Puzzle) {\r\n        this.localStorageService.putPuzzle(puzzle);\r\n        this.refreshPuzzleList();\r\n        this.usePuzzle(puzzle);\r\n    }\r\n\r\n    public openArchivePuzzle(params: OpenPuzzleParamters): Promise<Puzzle> {\r\n        return this.httpPuzzleService.getPuzzle(params)\r\n        .then((response) => {\r\n            if (Array.isArray(response.warnings)) {\r\n                //response.warnings.forEach(warning => console.log(\"WARNING \" + JSON.stringify(warning))); \r\n            }\r\n\r\n            let puzzle = new Puzzle(response.puzzle);\r\n\r\n            // add some defaults\r\n            let puzzleM: PuzzleM = JSON.parse(JSON.stringify(puzzle));\r\n            new AddPlaceholders().exec(puzzleM);\r\n\r\n            this.localStorageService.putPuzzle(puzzleM);\r\n            this.usePuzzle(puzzleM);\r\n            this.refreshPuzzleList();\r\n\r\n            return this.bsActive.value;\r\n        })\r\n        .catch(error => {\r\n            throw error.message ? error.message : error.toString();\r\n        });\r\n    }\r\n\r\n    public deletePuzzle(id: string): Promise<void> {\r\n        return this.localStorageService.deletePuzzle(id)\r\n            .then(() => {\r\n                this.clear();\r\n                this.refreshPuzzleList();\r\n            });\r\n    }\r\n\r\n    public loadPuzzleFromPdf(pdf: Base64Encoded): Promise<string> {\r\n\r\n        return this.httpPuzzleService.getPdfExtract(pdf)\r\n        .then((result) => {\r\n\r\n            if (result.success === ApiResponseStatus.OK) {\r\n                this.newPuzzle();\r\n\r\n                this.update(new UpdateInfo({ source: result.text }));\r\n\r\n                if (result.grid) {\r\n                    let grid = new Grid(result.grid)\r\n                    this.update(new AddGrid({ grid }));\r\n                }\r\n                return \"ok\";\r\n            } else {\r\n                return \"error\";\r\n            }\r\n\r\n        })\r\n        .catch((error) => {\r\n            if (error === ApiSymbols.AuthorizationFailure) {\r\n                return \"authenticate\";\r\n            } else {\r\n                return \"error\";\r\n            }\r\n        });\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region Private methods\r\n\r\n    private refreshPuzzleList() {\r\n        let list = this.localStorageService.listPuzzles();\r\n        this.bsList.next(list);\r\n    }\r\n\r\n    private usePuzzle(puzzle: IPuzzle) {\r\n        // create a mutable copy\r\n        let puzzleM: PuzzleM = JSON.parse(JSON.stringify(puzzle));\r\n\r\n        // modify it\r\n        new Clear().exec(puzzleM);\r\n\r\n        // push a read-only version\r\n        this.bsActive.next(new Puzzle(puzzleM));\r\n    }\r\n\r\n    private getMutableCopy(puzzle: Puzzle): PuzzleM {\r\n        return JSON.parse(JSON.stringify(this.bsActive.value)) as PuzzleM;\r\n    }\r\n\r\n    private commit(puzzle: PuzzleM) {\r\n        puzzle.revision += 1;\r\n        \r\n        this.savePuzzle(puzzle);\r\n        this.bsActive.next(new Puzzle(puzzle));\r\n    }\r\n\r\n    private getSavedPuzzle(id: string): Promise<Puzzle> {\r\n        return this.localStorageService.getPuzzle(id)\r\n            .then((puzzle) => {\r\n                this.localStorageService.putPuzzle(puzzle);\r\n                return puzzle;\r\n            });\r\n    }\r\n\r\n    private savePuzzle(puzzle: IPuzzle): void {\r\n        this.localStorageService.putPuzzle(puzzle);\r\n        this.refreshPuzzleList();\r\n    }\r\n\r\n    private makeEmptyPuzzle(): PuzzleM {\r\n        return {\r\n            clues: [],\r\n            grid: null,\r\n            linked: false,\r\n            revision: 0,\r\n            info: {\r\n                id: uuid(),\r\n                title: \"untitled\",\r\n                puzzleDate: new Date(),\r\n                provider: \"text\",\r\n                setter: \"anon\", \r\n                wordpressId: null,\r\n                blogable: true,\r\n                solveable: false,\r\n                gridable: false,\r\n                source: null,\r\n            },\r\n            notes: {\r\n                header: new QuillDelta(),\r\n                body: new QuillDelta(),\r\n                footer: new QuillDelta(),\r\n            },\r\n            publishOptions: {\r\n                clueStyle: {\r\n                    color: \"#000000\",\r\n                    bold: false,\r\n                    italic: false,\r\n                    underline: false,\r\n                },\r\n                answerStyle: {\r\n                    color: \"#000000\",\r\n                    bold: false,\r\n                    italic: false,\r\n                    underline: false,\r\n                },\r\n                definitionStyle: {\r\n                    color: \"#000000\",\r\n                    bold: false,\r\n                    italic: false,\r\n                    underline: false,\r\n                },\r\n                includeGrid: false,\r\n                layout: \"table\",\r\n                spacing: \"small\",\r\n            },\r\n        };\r\n    }\r\n\r\n    //#endregion\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VpL2FwcC1nZW5lcmFsL2RpYXJ5L2RpYXJ5LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { DiaryService } from 'src/app/services/diary.service';\r\nimport { Subscription, combineLatest } from 'rxjs';\r\nimport { AppService } from '../../services/app.service';\r\nimport { AppSettingsService } from 'src/app/services/app-settings.service';\r\nimport { DiaryEntry } from 'src/app/model/diary-entry';\r\nimport { ApiSymbols } from 'src/app/services/common';\r\n\r\n@Component({\r\n    selector: 'app-diary',\r\n    templateUrl: './diary.component.html',\r\n    styleUrls: ['./diary.component.css']\r\n})\r\nexport class DiaryComponent implements OnInit, OnDestroy {\r\n    public entries: DiaryEntry[];\r\n    private subs: Subscription[] = [];\r\n\r\n    constructor(\r\n        private diaryService: DiaryService,\r\n        private appService: AppService,\r\n        private settingsService: AppSettingsService,\r\n    ) { }\r\n\r\n    public ngOnInit() {\r\n        let observable = combineLatest(this.diaryService.observe(), this.settingsService.observe());\r\n\r\n        this.subs.push(observable.subscribe(\r\n            result => {\r\n                let diary = result[0];\r\n                let settings = result[1];\r\n\r\n                if (settings) {\r\n                    if (diary) {\r\n                        this.appService.clear();\r\n                        let aliases = settings.diary.aliases;\r\n                        \r\n                        this.entries = [];\r\n                        diary.entries.forEach(entry => {\r\n                            if (settings.diary.showEverybody || \r\n                                aliases.find(alias => alias.replace(/[^a-z]/gi, \"\") === entry.solver.replace(/[^a-z]/gi, \"\"))) {\r\n                                    this.entries.push(entry);\r\n                            }\r\n                        });\r\n    \r\n                        this.entries.sort((a, b) => {\r\n                            if (a.solveDate > b.solveDate) {\r\n                                return 1;\r\n                            } else if (a.solveDate < b.solveDate) {\r\n                                return -1;\r\n                            }\r\n                            return 0;\r\n                        });\r\n\r\n                    } else {\r\n                        this.onRefresh();\r\n                    }\r\n                }\r\n            },\r\n            error => {\r\n                this.appService.clear();\r\n                if (error === ApiSymbols.AuthorizationFailure) {\r\n                    this.appService.setAlert(\"danger\", \"User not logged in.  Please login and try again.\");\r\n                } else {\r\n                    this.appService.setAlert(\"danger\", \"Failed to get Google diary.\");\r\n                }\r\n            }\r\n        ));\r\n    }\r\n\r\n    public ngOnDestroy() {\r\n        this.subs.forEach(sub => sub.unsubscribe());\r\n    }\r\n\r\n    public onRefresh() {\r\n        this.appService.clear();\r\n        this.appService.setBusy();\r\n        this.diaryService.refresh()\r\n        .then((result: Symbol) => {\r\n            this.appService.clear();\r\n            if (result === ApiSymbols.AuthorizationFailure) {\r\n                this.appService.setAlert(\"danger\", \"Not logged-in.  Please log in and try again.\");\r\n            } else if (result != ApiSymbols.OK) {\r\n                this.appService.setAlert(\"danger\", \"Failed to get Google diary.\");\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            this.appService.clear();\r\n            if (error === ApiSymbols.AuthorizationFailure) {\r\n                this.appService.setAlert(\"danger\", \"Not logged-in.  Please log in and try again.\");\r\n            } else {\r\n                this.appService.setAlert(\"danger\", \"Failed to get Google diary.\");\r\n            }\r\n        });\r\n    }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VpL2FwcC1nZW5lcmFsL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit, Output, EventEmitter, OnDestroy } from '@angular/core';\r\nimport { IPuzzleManager } from 'src/app/services/puzzle-management.service';\r\nimport { PuzzleInfo } from 'src/app/model/puzzle-info';\r\nimport { AppService, AppStatus } from 'src/app/ui/services/app.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService, Credentials } from 'src/app/services/auth.service';\r\nimport { NavService } from '../../navigation/nav.service';\r\nimport { AppTrackData, EditorType } from '../../navigation/tracks/app-track-data';\r\n\r\n@Component({\r\n    selector: 'app-home',\r\n    templateUrl: './home.component.html',\r\n    styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit, OnDestroy {\r\n    public puzzleList: PuzzleInfo[] = [];\r\n    public gridList: PuzzleInfo[] = [];\r\n    private subs: Subscription[] = [];\r\n    public appStatus: AppStatus;\r\n    public credentials: Credentials;\r\n\r\n    constructor(\r\n        private appService: AppService,\r\n        private navService: NavService<AppTrackData>,\r\n        private puzzleManagement: IPuzzleManager,\r\n        private authService: AuthService,\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.subs.push(this.appService.getObservable().subscribe(appStatus => this.appStatus = appStatus));\r\n        this.subs.push(this.authService.observe().subscribe(credentials => this.credentials = credentials));\r\n\r\n        this.subs.push(this.puzzleManagement.getPuzzleList().subscribe(\r\n            (list) => {\r\n                this.puzzleList = list.filter(p => (p.solveable || p.blogable));\r\n                this.gridList = list.filter(p => p.gridable && !(p.solveable || p.blogable));\r\n            },\r\n            (error) => this.appService.setAlert(\"danger\", error.toString())\r\n        ));\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.subs.forEach(s => s.unsubscribe());\r\n    }\r\n\r\n    public onOpenSaved(id: string) {\r\n        this.puzzleManagement.openPuzzle(id)\r\n        .then((puzzle) => {\r\n            if (puzzle) {\r\n                this.navService.beginTrack(\"solve\", new AppTrackData());\r\n            }\r\n        });\r\n    }\r\n\r\n    public onOpenSavedGrid(id: string) {\r\n        this.puzzleManagement.openPuzzle(id)\r\n        .then((puzzle) => {\r\n            if (puzzle) {\r\n                this.navService.beginTrack(\"create\", new AppTrackData(), \"grid-editor\");\r\n            }\r\n        });\r\n    }\r\n\r\n    public onDelete(id: string) {\r\n        this.puzzleManagement.deletePuzzle(id);\r\n    }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VpL2FwcC1nZW5lcmFsL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { AppService, AppStatus } from 'src/app/ui/services/app.service';\nimport { AppSettingsService } from 'src/app/services/app-settings.service';\nimport { AppSettings } from 'src/app/services/common';\nimport { NavService } from '../../navigation/nav.service';\nimport { AppTrackData } from '../../navigation/tracks/app-track-data';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n    public preview: string = \"\";\n    public appStatus: AppStatus;\n    public settings: AppSettings;\n\n    private subs: Subscription[] = [];\n\n    constructor(\n        private navService: NavService<AppTrackData>,\n        private appService: AppService,\n        public settingsService: AppSettingsService,\n        ) { \n            this.settings = this.settingsService.settings;\n        }\n\n    public ngOnInit() {\n        this.subs.push(this.appService.getObservable().subscribe(appStatus => this.appStatus = appStatus));\n    }\n\n    public ngOnDestroy() {\n        this.subs.forEach(sub => sub.unsubscribe());\n    }\n\n    public onLoginClose() {\n        if (this.appService.loginCallback) {\n            this.appService.loginCallback();\n        } else {\n            this.navService.goHome();\n        }\n    }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VpL2FwcC1nZW5lcmFsL3JlYWRtZS9yZWFkbWUuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-readme',\n  templateUrl: './readme.component.html',\n  styleUrls: ['./readme.component.css']\n})\nexport class ReadmeComponent implements OnInit {\n\n  constructor(private route: ActivatedRoute) { }\n\n  ngOnInit() {\n      //console.log(this.route.snapshot);\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VpL2FwcC1nZW5lcmFsL3NldHRpbmdzL3NldHRpbmdzLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { AppSettingsService } from 'src/app/services/app-settings.service';\nimport { FormBuilder, FormGroup, FormControl, FormArray } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { AppService } from 'src/app/ui/services/app.service';\nimport { AppSettings, BooleanSettingsGroupKey } from 'src/app/services/common';\nimport { NavService } from '../../navigation/nav.service';\nimport { AppTrackData } from '../../navigation/tracks/app-track-data';\n\n@Component({\n    selector: 'app-settings',\n    templateUrl: './settings.component.html',\n    styleUrls: ['./settings.component.css']\n})\nexport class SettingsComponent implements OnInit, OnDestroy {\n    public settings: AppSettings;\n\n    private subs: Subscription[] = [];\n    public form: FormGroup;\n\n    constructor(\n        private navService: NavService<AppTrackData>,\n        private appService: AppService,\n        private settingsService: AppSettingsService,\n        private formBuilder: FormBuilder,\n    ) { }\n\n    ngOnInit() {\n\n        this.settings = this.settingsService.settings;\n\n        this.form = this.formBuilder.group({\n            sandbox: [false],\n            footer: [\"\"],\n            general: this.formBuilder.group({}),\n            tips: this.formBuilder.group({}),\n        });\n\n        Object.keys(this.settings.general).forEach(key => {\n            (this.form.controls[\"general\"] as FormGroup).addControl(key, new FormControl(this.settings.general[key].enabled));\n        });\n\n        Object.keys(this.settings.tips).forEach(key => {\n            (this.form.controls[\"tips\"] as FormGroup).addControl(key, new FormControl(this.settings.tips[key].enabled));\n        });\n\n        this.subs.push(this.settingsService.observe().subscribe(settings => {\n            this.settings = settings;\n\n            this.form.patchValue({\n                sandbox: settings.sandbox,\n                footer: settings.footer,\n            });\n\n            Object.keys(this.settings.general).forEach(key => {\n                (this.form.get(\"general\") as FormGroup).controls[key].patchValue(settings.general[key].enabled);\n            });\n\n            Object.keys(this.settings.tips).forEach(key => {\n                (this.form.get(\"tips\") as FormGroup).controls[key].patchValue(settings.tips[key].enabled);\n            });\n        }));\n\n    }\n\n    public ngOnDestroy() {\n        this.subs.forEach(sub => sub.unsubscribe());\n    }\n\n    public onSave() {\n\n        let changes = {\n            sandbox: this.form.value.sandbox,\n            general: this.getChanges(\"general\"),\n            footer: this.form.value.footer,\n            tips: this.getChanges(\"tips\"),\n        }\n\n        this.settingsService.update(changes);\n        //this.navService.returnToSender();\n        this.navService.goHome();\n    }\n\n    public onCancel() {\n        //this.navService.returnToSender();\n        this.navService.goHome();\n    }\n\n    public get tipKeys() {\n        return Object.keys(this.settings.tips);\n    }\n\n    public get generalKeys() {\n        return Object.keys(this.settings.general);\n    }\n\n    public onReset() {\n        this.settingsService.factoryReset();\n        this.navService.goHome();\n        //this.navService.returnToSender();\n    }\n\n    private getChanges(groupKey: BooleanSettingsGroupKey): any {\n        let result = {};\n\n        Object.keys((this.form.controls[groupKey] as FormGroup).controls).forEach(key => {\n            result[key] = { enabled: this.form.value[groupKey][key] };\n        });\n        return result;\n    }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VpL2FwcC9hcHAuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit, OnDestroy, Inject } from '@angular/core';\r\nimport { Router, NavigationEnd, Event } from '@angular/router';\r\nimport { AppService, AppStatus } from 'src/app/ui/services/app.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { IActivePuzzle } from 'src/app/services/puzzle-management.service';\r\nimport { AuthService, Credentials } from 'src/app/services/auth.service';\r\nimport { NavService } from '../navigation/nav.service';\r\nimport { AppTrackData } from '../navigation/tracks/app-track-data';\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit, OnDestroy {\r\n    public appStatus: AppStatus;\r\n    public credentials: Credentials;\r\n    public isNavbarCollapsed: boolean;\r\n\r\n    private subs: Subscription[] = [];\r\n\r\n    public temp: string = \"undefined\";\r\n\r\n    constructor(\r\n        private navService: NavService<AppTrackData>,\r\n        private authService: AuthService,\r\n        private activePuzzle: IActivePuzzle,\r\n        private appService: AppService,\r\n        private router: Router,\r\n        ) {\r\n    }\r\n\r\n    public ngOnInit() {\r\n        \r\n        this.appService.clearBusy();\r\n        \r\n        this.subs.push(this.appService.getObservable().subscribe(appStatus => {\r\n            this.appStatus = appStatus;\r\n\r\n        }));\r\n        \r\n        this.subs.push(this.authService.observe().subscribe(credentials => {\r\n            this.credentials = credentials;\r\n        }));\r\n\r\n        this.subs.push(this.router.events.subscribe((event: Event) => {\r\n            if (event instanceof NavigationEnd) {\r\n                let context = this.navService.debugNavContext;\r\n\r\n                this.temp = context ? \r\n                `${context.track.name}:${context.currentNode.name}` : \r\n                \"none\";\r\n            };\r\n        }));\r\n    }\r\n\r\n    public ngOnDestroy() {\r\n        this.subs.forEach(s => s.unsubscribe());\r\n    }\r\n\r\n    public onArchive(provider: string) {\r\n        this.activePuzzle.clear();\r\n        this.appService.clear();\r\n        //this.appService.navContext.clear();\r\n        \r\n        if (provider === \"independent\" || provider === \"ios\") {\r\n            this.navService.gotoRoute([\"indy\"]);\r\n        \r\n        } else if (provider === \"special\" ) {\r\n            this.navService.beginTrack(\"create\", new AppTrackData());\r\n        \r\n        } else {\r\n            this.navService.gotoRoute([\"archive\", provider]);\r\n        }\r\n    }\r\n\r\n    public onGrid() {\r\n        this.activePuzzle.clear();\r\n        this.appService.clear();\r\n        this.navService.beginTrack(\"create\", new AppTrackData());\r\n    }\r\n\r\n    public onHome() {\r\n        this.navService.goHome();\r\n    }\r\n\r\n    public onGoTo(route: string) {\r\n        this.appService.clear();\r\n        this.navService.gotoRoute([route]);\r\n    }\r\n\r\n    public onLogout() {\r\n        this.authService.clearCredentials();\r\n        this.appService.clear();\r\n        this.navService.gotoRoute([\"login\"])\r\n    }\r\n}\r\n\r\n","export type AlertType = \"info\" | \"danger\";\r\n\r\nexport type TextStyleName = \"answerStyle\" | \"clueStyle\" | \"definitionStyle\";\r\n\r\nexport type NavAction = \"solve\" | \"login\";\r\n\r\nexport type UIResult = \"ok\" | \"cancel\" | \"back\";\r\n\r\nexport interface NavResult {\r\n    action: NavAction;\r\n    paramter: string;\r\n}\r\n\r\nexport class Alert {\r\n    constructor(public readonly type: AlertType, public readonly message: string) {}\r\n}\r\n\r\nexport class GridParameters {\r\n    public readonly cellSize = 33;\r\n    public readonly borderWidth = 1;\r\n    public readonly barWidth = 3;\r\n    public readonly gridPadding = 5;\r\n    public readonly cellPadding = 2;\r\n    public readonly captionFont = \"9px serif\";\r\n    public readonly textFont = \"20px sans-serif\";\r\n    public readonly gridColor = \"#000000\";\r\n    public readonly highlightColor = \"BurlyWood\";\r\n}\r\n\r\nexport interface GridControlOptions {\r\n    showShading?: boolean;\r\n    //enableTextEdit?: boolean;\r\n    editor?: Symbol;\r\n}\r\n\r\nexport const GridEditors = {\r\n    cellEditor: Symbol(\"CellEditor\"),\r\n    cellEditorFluid: Symbol(\"CellEditorFluid\"),\r\n    cellEditorEmptyFluid: Symbol(\"CellEditorEmptyFluid\"),\r\n    entryEditor: Symbol(\"EntryEditor\"),\r\n    entryEditorFluid: Symbol(\"EntryEditorFluid\"),\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VpL2NvbXBvbmVudHMvYWxlcnQvYWxlcnQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { AppStatus, AppService } from 'src/app/ui/services/app.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n    selector: 'app-alert',\n    templateUrl: './alert.component.html',\n    styleUrls: ['./alert.component.css']\n})\nexport class AlertComponent implements OnInit, OnDestroy {\n    public appStatus: AppStatus;\n    public subs: Subscription[] = [];\n\n    constructor(private appService: AppService) {\n    }\n\n    public ngOnInit() {\n        this.subs.push(this.appService.getObservable().subscribe(appStatus => this.appStatus = appStatus));\n    }\n\n    public ngOnDestroy() {\n        this.subs.forEach(s => s.unsubscribe);\n    }\n\n    public onClose() {\n        this.appService.clearAlerts();\n    }\n}\n","export default \".hidden {\\r\\n    display:none;\\r\\n}\\r\\n.spacey {\\r\\n    letter-spacing: 3px;\\r\\n}\\r\\n.spacey span {\\r\\n    display: inline-block;\\r\\n}\\r\\n.separator {\\r\\n    color: slategrey;\\r\\n    margin-left: 5px;\\r\\n    margin-right: 4px;\\r\\n}\\r\\n.placeholder {\\r\\n    color: slategrey;\\r\\n}\\r\\n.pointing {\\r\\n    color: slategrey;\\r\\n}\\r\\n.editorEntry {\\r\\n    color: black;\\r\\n}\\r\\n.gridEntry {\\r\\n    color: slategrey;\\r\\n}\\r\\n.clash {\\r\\n    color: orangered;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdWkvY29tcG9uZW50cy9jbHVlLWVkaXRvci9jbHVlLWVkaXRvci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtBQUNoQjtBQUNBO0lBQ0ksbUJBQW1CO0FBQ3ZCO0FBQ0E7SUFDSSxxQkFBcUI7QUFDekI7QUFFQTtJQUNJLGdCQUFnQjtJQUNoQixnQkFBZ0I7SUFDaEIsaUJBQWlCO0FBQ3JCO0FBQ0E7SUFDSSxnQkFBZ0I7QUFDcEI7QUFDQTtJQUNJLGdCQUFnQjtBQUNwQjtBQUNBO0lBQ0ksWUFBWTtBQUNoQjtBQUNBO0lBQ0ksZ0JBQWdCO0FBQ3BCO0FBQ0E7SUFDSSxnQkFBZ0I7QUFDcEIiLCJmaWxlIjoic3JjL2FwcC91aS9jb21wb25lbnRzL2NsdWUtZWRpdG9yL2NsdWUtZWRpdG9yLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaGlkZGVuIHtcclxuICAgIGRpc3BsYXk6bm9uZTtcclxufVxyXG4uc3BhY2V5IHtcclxuICAgIGxldHRlci1zcGFjaW5nOiAzcHg7XHJcbn1cclxuLnNwYWNleSBzcGFuIHtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxufVxyXG5cclxuLnNlcGFyYXRvciB7XHJcbiAgICBjb2xvcjogc2xhdGVncmV5O1xyXG4gICAgbWFyZ2luLWxlZnQ6IDVweDtcclxuICAgIG1hcmdpbi1yaWdodDogNHB4O1xyXG59XHJcbi5wbGFjZWhvbGRlciB7XHJcbiAgICBjb2xvcjogc2xhdGVncmV5O1xyXG59XHJcbi5wb2ludGluZyB7XHJcbiAgICBjb2xvcjogc2xhdGVncmV5O1xyXG59XHJcbi5lZGl0b3JFbnRyeSB7XHJcbiAgICBjb2xvcjogYmxhY2s7XHJcbn1cclxuLmdyaWRFbnRyeSB7XHJcbiAgICBjb2xvcjogc2xhdGVncmV5O1xyXG59XHJcbi5jbGFzaCB7XHJcbiAgICBjb2xvcjogb3JhbmdlcmVkO1xyXG59Il19 */\"","import { Component, OnInit, Input, OnDestroy, Output, EventEmitter } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Clue } from 'src/app/model/clue';\r\nimport { Subscription } from 'rxjs';\r\nimport { ClueTextChunk } from '../clue-text-control/clue-text-control.component';\r\nimport { UpdateClue } from 'src/app/services/modifiers/update-clue';\r\nimport { IActivePuzzle } from 'src/app/services/puzzle-management.service';\r\nimport { AppSettingsService } from 'src/app/services/app-settings.service';\r\nimport { TipInstance, TipStatus } from '../tip/tip-instance';\r\nimport { Clear } from 'src/app/services/modifiers/clear';\r\nimport { ClueValidationWarning, QuillDelta } from 'src/app/model/interfaces';\r\nimport { TextChunk } from 'src/app/model/clue-text-chunk';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ConfirmModalComponent } from '../confirm-modal/confirm-modal.component';\r\nimport { Puzzle } from 'src/app/model/puzzle';\r\nimport { PuzzleM } from 'src/app/services/modifiers/mutable-model/puzzle-m';\r\nimport { AppSettings } from 'src/app/services/common';\r\n\r\ntype AnswerTextKlass = \"editorEntry\" | \"gridEntry\" | \"placeholder\" | \"pointing\" | \"separator\" | \"clash\";\r\n\r\nclass AnswerTextChunk {\r\n    constructor(\r\n        public readonly letter: string,\r\n        public readonly klass: AnswerTextKlass,\r\n    ) {}\r\n\r\n    public toString(): string {\r\n        return this.letter;\r\n    }\r\n}\r\n\r\n@Component({\r\n    selector: 'app-clue-editor',\r\n    templateUrl: './clue-editor.component.html',\r\n    styleUrls: ['./clue-editor.component.css']\r\n})\r\nexport class ClueEditorComponent implements OnInit, OnDestroy {\r\n    @Input() clueId: string;\r\n    @Input() starterText: string;\r\n\r\n    @Output() close = new EventEmitter<string>();\r\n\r\n    public clue: Clue;\r\n    public form: FormGroup;\r\n    public appSettings: AppSettings;\r\n    public tipInstance: TipInstance;\r\n    public tipStatus: TipStatus = new TipStatus(false, false, false);\r\n    public warnings: ClueValidationWarning[] = [];\r\n    public showAnnotation: boolean = false;\r\n    public latestAnswer: AnswerTextChunk[] = [];\r\n\r\n    //private puzzle: Puzzle;\r\n    private shadowPuzzle: Puzzle;\r\n    private subs: Subscription[] = [];\r\n\r\n    constructor(\r\n        private activePuzzle: IActivePuzzle,\r\n        private appSettingsService: AppSettingsService,\r\n        private formBuilder: FormBuilder,\r\n        private modalService: NgbModal,\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.form = this.formBuilder.group({\r\n            answer: [\"\"],\r\n            comment: [\"\"],\r\n            chunks: [[]],\r\n        });\r\n\r\n        this.subs.push(\r\n            this.activePuzzle.observe().subscribe(\r\n                (puzzle) => {\r\n                    if (puzzle) {\r\n                        this.shadowPuzzle = this.makeShadowPuzzle(puzzle, this.clueId);\r\n\r\n                        this.clue = puzzle.clues.find((c) => c.id === this.clueId);\r\n\r\n                        this.form.patchValue({\r\n                            comment: this.clue.comment,\r\n                            answer: this.starterText ? this.starterText : this.clue.answer,\r\n                            chunks: this.clue.chunks,\r\n                        });\r\n                        this.warnings = [];\r\n                        this.clue.warnings.forEach(warning => this.warnings.push(warning));\r\n\r\n                        this.setLatestAnswer();\r\n                    }\r\n                }\r\n            )\r\n        );\r\n\r\n        this.subs.push(\r\n            this.appSettingsService.observe().subscribe(settings => {\r\n                this.appSettings = settings;\r\n            }));\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.subs.forEach(s => s.unsubscribe());\r\n        if (this.tipInstance) {\r\n            this.tipInstance.destroy();\r\n        }\r\n    }\r\n\r\n    public onClearDefinition() {\r\n        this.form.patchValue({\r\n            chunks: [new ClueTextChunk(0, this.clue.text, false)]\r\n        });\r\n        this.warnings = this.validate();\r\n    }\r\n\r\n    public hasDefinition(): boolean {\r\n        let definitionCount = 0;\r\n        this.form.value.chunks.forEach((chunk: ClueTextChunk) => {\r\n            if (chunk.isDefinition) {\r\n                definitionCount++;\r\n            }\r\n        });\r\n        return definitionCount > 0;\r\n    }\r\n\r\n    public onSave() {\r\n\r\n        if (this.appSettings.general.showCommentEditor.enabled &&\r\n            this.appSettings.tips.definitionWarning.enabled &&\r\n            !this.tipStatus.show &&\r\n            this.form.value.chunks.length < 2) {\r\n\r\n            this.tipInstance.activated = true;\r\n\r\n        } else {\r\n            let answer = this.clean(this.form.value.answer);\r\n\r\n            if (answer && answer.length !== this.clue.lengthAvailable) {\r\n                this.showSaveWarning(\"Warning: the answer does not fit the space available\");\r\n\r\n            } else if (this.clue.solution && answer !== this.clean(this.clue.solution)) {\r\n                this.showSaveWarning(\"Warning: the answer does match the publsihed solution\");\r\n\r\n            } else {\r\n                this.closeEditor(true);\r\n            }\r\n        }\r\n    }\r\n\r\n    public onTipInstance(instance: TipInstance) {\r\n        this.tipInstance = instance;\r\n        this.tipInstance.activated = false;\r\n        this.tipInstance.observe().subscribe(ts => this.tipStatus = ts);\r\n    }\r\n\r\n    public onCancel() {\r\n        this.closeEditor(false);\r\n    }\r\n\r\n    public onToggleComment() {\r\n        this.appSettingsService.toggleCommentEditor();\r\n    }\r\n\r\n    public onCheat() {\r\n        this.form.patchValue({\r\n            answer: this.clue.solution,\r\n        });\r\n        this.warnings = this.validate();\r\n        this.setLatestAnswer();\r\n    }\r\n\r\n    public onAnnotation() {\r\n        this.showAnnotation = !this.showAnnotation;\r\n    }\r\n\r\n    public onChange() {\r\n        this.warnings = this.validate();\r\n        this.setLatestAnswer();\r\n    }\r\n\r\n    public get showTextWarning() {\r\n        return this.appSettings.general.showCommentEditor.enabled &&\r\n            this.appSettings.general.showCommentValidation.enabled &&\r\n            this.warnings.length &&\r\n            !this.clue.redirect;\r\n    }\r\n\r\n    private showSaveWarning(message: string) {\r\n        let lengthDialog = this.modalService.open(ConfirmModalComponent);\r\n        lengthDialog.componentInstance.message = message;\r\n        \r\n        lengthDialog.result.then((result) => { \r\n            if (result) {\r\n                this.closeEditor(true);\r\n            }\r\n        })\r\n        .catch();\r\n    }\r\n\r\n    private closeEditor(save: boolean) {\r\n        if (save) {\r\n            this.activePuzzle.update(new UpdateClue(\r\n                this.clueId,\r\n                this.form.value.answer,\r\n                this.form.value.comment,\r\n                this.form.value.chunks,\r\n                this.warnings,\r\n            ));\r\n        }\r\n        this.activePuzzle.update(new Clear());\r\n        this.close.emit(save? \"save\" : \"cancel\");\r\n    }\r\n\r\n    private validate(): ClueValidationWarning[] {\r\n        let warnings: ClueValidationWarning[] = [];\r\n\r\n        let answer: string = this.form.value.answer;\r\n        let comment: QuillDelta = this.form.value.comment;\r\n        let chunks: readonly TextChunk[] = this.form.value.chunks;\r\n\r\n        if (!answer || answer.trim().length === 0) {\r\n            warnings.push(\"missing answer\");\r\n        }\r\n\r\n        let commentOK = false;\r\n\r\n        if (comment && comment.ops && Array.isArray(comment.ops)) {\r\n            let text = \"\";\r\n\r\n            comment.ops.forEach(op => {\r\n                if (op.insert) {\r\n                    text += op.insert;\r\n                }\r\n            });\r\n            commentOK = text.trim().length > 0;\r\n        }\r\n\r\n        if (!commentOK) {\r\n            warnings.push(\"missing comment\");\r\n        }\r\n\r\n\r\n        let definitionCount = 0;\r\n        chunks.forEach(chunk => {\r\n            if (chunk.isDefinition) {\r\n                definitionCount++;\r\n            }\r\n        })\r\n\r\n        if (definitionCount === 0) {\r\n            warnings.push(\"missing definition\");\r\n        }\r\n\r\n        return warnings;\r\n    }\r\n\r\n    private clean(answer: string): string {\r\n        return answer ?\r\n            answer.toUpperCase().replace(/[^A-Z]/g, \"\") :\r\n            \"\";\r\n    }\r\n\r\n    private setLatestAnswer(): void {\r\n        let result: AnswerTextChunk[] = [];\r\n        let answer: AnswerTextChunk[] = this.getLatestAnswer();\r\n        let format = this.clue.format;\r\n        let formatIndex = 0;\r\n        let answerIndex = 0;\r\n\r\n        while (formatIndex < format.length) {\r\n            if (format[formatIndex] === \",\") {\r\n                if (answerIndex < answer.length) {\r\n                    result.push(answer[answerIndex]);\r\n                    answerIndex++;\r\n                } else {\r\n                    result.push(new AnswerTextChunk(\"_\", \"placeholder\"));\r\n                }\r\n            } else {\r\n                result.push(new AnswerTextChunk(format[formatIndex], \"separator\"));\r\n            }\r\n            formatIndex++;\r\n        }\r\n\r\n        while (answerIndex < answer.length) {\r\n            result.push(answer[answerIndex]);\r\n            answerIndex++;\r\n        }\r\n\r\n        this.latestAnswer = result;\r\n    }\r\n\r\n    private getLatestAnswer(): AnswerTextChunk[] {\r\n        let result: AnswerTextChunk[] = [];\r\n        let answer = this.clean(this.form.value.answer);\r\n        let index = 0;\r\n\r\n        this.clue.entries.forEach((entry) => {\r\n            entry.cellIds.forEach((id) => {\r\n                let cell = this.shadowPuzzle.grid.cells.find((cell) => cell.id === id);\r\n\r\n                // choose in order of preference:\r\n                //     - a letter from the answer\r\n                //     - a letter from the grid\r\n                //     - a placeholder\r\n\r\n                let letter = \"_\";\r\n                let klass: AnswerTextKlass = \"placeholder\";\r\n\r\n                let gridEntry = cell.content && cell.content.trim().length > 0 ? cell.content : null;\r\n                let editorEntry = answer.length > index ? answer.charAt(index) : null;\r\n\r\n                if (!gridEntry) {\r\n                    if (editorEntry) {\r\n                        letter = editorEntry;\r\n                        klass = \"editorEntry\";\r\n                    }\r\n                } else {\r\n                    if (editorEntry && gridEntry !== editorEntry) {\r\n                        letter = editorEntry;\r\n                        klass = \"clash\";\r\n                    } else {\r\n                        letter = gridEntry;\r\n                        klass = \"gridEntry\";\r\n                    }\r\n                }\r\n\r\n                result.push(new AnswerTextChunk(letter, klass));\r\n                index++;\r\n            })\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    // this function takes the model and creates a copy set to the state the original would have been\r\n    // if the current clue had not yet been attempted\r\n    private makeShadowPuzzle(original: Puzzle, clueId: string): Puzzle {\r\n        let puzzle = JSON.parse(JSON.stringify(original)) as PuzzleM;\r\n\r\n        if (puzzle.grid) {\r\n\r\n            // clear the grid\r\n            puzzle.grid.cells.forEach(cell => cell.content = \"\");\r\n\r\n            puzzle.clues.forEach((clue) => {\r\n                let answer = null;\r\n                let index = 0;\r\n\r\n                if (clue.id !== clueId) {\r\n                    answer = clue.answer.toUpperCase().replace(/[^A-Z]/g, \"\");\r\n                }\r\n\r\n                if (answer) {\r\n                    clue.entries.forEach((entry) => {\r\n                        entry.cellIds.forEach((id) => {\r\n                            let cell = puzzle.grid.cells.find(c => c.id === id);\r\n                            if (index < answer.length) {\r\n                                cell.content = answer.charAt(index);\r\n                            }\r\n                            index++;\r\n                        });\r\n                    });\r\n                }\r\n            });\r\n        }\r\n\r\n        return new Puzzle(puzzle);\r\n    }\r\n}\r\n","export default \".highlight {\\r\\n    background-color: burlywood;\\r\\n}\\r\\n.solved {\\r\\n    color: silver;\\r\\n}\\r\\n.highlight.solved {\\r\\n    color: inherit;\\r\\n}\\r\\n.caption {\\r\\n    font-weight: bold;\\r\\n}\\r\\ntd {\\r\\n    vertical-align: top;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdWkvY29tcG9uZW50cy9jbHVlLWxpc3QtaXRlbS9jbHVlLWxpc3QtaXRlbS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksMkJBQTJCO0FBQy9CO0FBQ0E7SUFDSSxhQUFhO0FBQ2pCO0FBQ0E7SUFDSSxjQUFjO0FBQ2xCO0FBQ0E7SUFDSSxpQkFBaUI7QUFDckI7QUFDQTtJQUNJLG1CQUFtQjtBQUN2QiIsImZpbGUiOiJzcmMvYXBwL3VpL2NvbXBvbmVudHMvY2x1ZS1saXN0LWl0ZW0vY2x1ZS1saXN0LWl0ZW0uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5oaWdobGlnaHQge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogYnVybHl3b29kO1xyXG59XHJcbi5zb2x2ZWQge1xyXG4gICAgY29sb3I6IHNpbHZlcjtcclxufVxyXG4uaGlnaGxpZ2h0LnNvbHZlZCB7XHJcbiAgICBjb2xvcjogaW5oZXJpdDtcclxufVxyXG4uY2FwdGlvbiB7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxufVxyXG50ZCB7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xyXG59Il19 */\"","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\nimport { Clue } from 'src/app/model/clue';\nimport { AppSettingsService } from 'src/app/services/app-settings.service';\nimport { Subscription } from 'rxjs';\nimport { AppSettings } from 'src/app/services/common';\n\n@Component({\n    selector: 'app-clue-list-item',\n    templateUrl: './clue-list-item.component.html',\n    styleUrls: ['./clue-list-item.component.css']\n})\nexport class ClueListItemComponent implements OnInit, OnDestroy {\n\n    @Input() public clue: Clue;\n    public klasses: string[];\n    private subs: Subscription[] = [];\n\n    constructor(private appSettings: AppSettingsService) { }\n\n    public ngOnInit() {\n        this.subs.push(this.appSettings.observe().subscribe(settings => {\n            const validationRequired: boolean = this.appSettings.settings.general.showCommentValidation.enabled;\n            const detailsRequired: boolean = this.appSettings.settings.general.showCommentEditor.enabled;\n            this.klasses = [];\n\n\n            if (this.clue.highlight) {\n                this.klasses.push(\"highlight\");\n            }\n    \n            if (validationRequired) {\n                let isSolved = detailsRequired ? \n                    this.clue.warnings.length === 0 :\n                    this.clue.answer.length > 0;\n    \n                if (isSolved) {\n                    this.klasses.push(\"solved\");\n                }\n            }\n        }));\n    }\n\n    ngOnDestroy(){\n        this.subs.forEach(sub => sub.unsubscribe());\n    }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VpL2NvbXBvbmVudHMvY2x1ZS1saXN0L2NsdWUtbGlzdC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { Direction } from 'src/app/model/interfaces';\r\nimport { Subscription } from 'rxjs';\r\nimport { Clue } from 'src/app/model/clue';\r\nimport { SelectClue } from 'src/app/services/modifiers/select-clue';\r\nimport { IActivePuzzle } from 'src/app/services/puzzle-management.service';\r\nimport { AppSettingsService } from 'src/app/services/app-settings.service';\r\nimport { AppSettings } from 'src/app/services/common';\r\n\r\n@Component({\r\n    selector: 'app-clue-list',\r\n    templateUrl: './clue-list.component.html',\r\n    styleUrls: ['./clue-list.component.css']\r\n})\r\nexport class ClueListComponent implements OnInit {\r\n    @Input() public direction: Direction;\r\n    @Output() public clueClick = new EventEmitter<Clue>();\r\n\r\n    private subs: Subscription[] = [];\r\n    public clues: Clue[] = [];\r\n    public appSettings: AppSettings;\r\n\r\n    constructor(\r\n        private appSettingsService: AppSettingsService,\r\n        private activePuzzle: IActivePuzzle,\r\n        ) { }\r\n\r\n    ngOnInit() {\r\n        this.appSettings = this.appSettingsService.settings;\r\n        this.subs.push(this.appSettingsService.observe().subscribe(settings => this.appSettings = settings));\r\n\r\n        this.subs.push(this.activePuzzle.observe().subscribe(\r\n            (puzzle) => {\r\n                if (puzzle && puzzle.clues) {\r\n                    this.clues = puzzle.clues.filter((clue) => clue.group === this.direction)\r\n                }\r\n            }\r\n        ));\r\n    }\r\n\r\n    public onClueClick(clue: Clue) {\r\n        if (clue.highlight) {\r\n            this.clueClick.emit(clue);\r\n        } else {\r\n            this.activePuzzle.update(new SelectClue(clue.id));\r\n        }\r\n    }\r\n}\r\n","export default \".definition {\\r\\n    color: skyblue;\\r\\n    text-decoration: underline;\\r\\n}\\r\\n.plain {\\r\\n    color:blue;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdWkvY29tcG9uZW50cy9jbHVlLXRleHQtY2h1bmsvY2x1ZS10ZXh0LWNodW5rLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxjQUFjO0lBQ2QsMEJBQTBCO0FBQzlCO0FBQ0E7SUFDSSxVQUFVO0FBQ2QiLCJmaWxlIjoic3JjL2FwcC91aS9jb21wb25lbnRzL2NsdWUtdGV4dC1jaHVuay9jbHVlLXRleHQtY2h1bmsuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5kZWZpbml0aW9uIHtcclxuICAgIGNvbG9yOiBza3libHVlO1xyXG4gICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XHJcbn1cclxuLnBsYWluIHtcclxuICAgIGNvbG9yOmJsdWU7XHJcbn0iXX0= */\"","import { Component, OnInit, Input, Output, EventEmitter, ContentChildren, QueryList, ElementRef, ViewChildren, ViewChild } from '@angular/core';\nimport { ClueTextChunk } from '../clue-text-control/clue-text-control.component';\n\n@Component({\n    selector: 'app-clue-text-chunk',\n    templateUrl: './clue-text-chunk.component.html',\n    styleUrls: ['./clue-text-chunk.component.css']\n})\nexport class ClueTextChunkComponent implements OnInit {\n    @Input() chunk: ClueTextChunk;\n    @Output()chunkMouseUp = new EventEmitter<any>();\n\n    @ViewChild(\"span\", { static: false}) spanElemnt: ElementRef;\n\n    constructor() { }\n\n    ngOnInit() {\n    }\n\n    public cssClass(): string {\n        return this.chunk.isDefinition ? \"definition\" : \"plain\";\n    };\n\n    public onMouseUp() {\n        this.chunkMouseUp.emit(this.chunk);\n    }\n\n    public containsDomElement(target: any): boolean {\n        let result = false;\n\n        let node = this.spanElemnt.nativeElement as Node;\n\n        if (node.contains(target)) {\n            result = true;\n        }\n\n        return result;\n    }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VpL2NvbXBvbmVudHMvY2x1ZS10ZXh0LWNvbnRyb2wvY2x1ZS10ZXh0LWNvbnRyb2wuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit, Input, Output, ViewChildren, QueryList, EventEmitter, OnChanges, forwardRef, HostListener } from '@angular/core';\nimport { ClueTextChunkComponent } from '../clue-text-chunk/clue-text-chunk.component';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { TextChunk } from 'src/app/model/clue-text-chunk';\n\n// ClueTextChunk is a ViewModel representing the definition mask string in a ui-friendly way \nexport class ClueTextChunk {\n    constructor (\n        public index: number,\n        public text: string,\n        public isDefinition: boolean,\n        public selectionStartOffset: number = null,\n        public selectionEndOffset: number = null,\n    ) {}\n}\n\n@Component({\n    selector: 'app-clue-text-control',\n    templateUrl: './clue-text-control.component.html',\n    styleUrls: ['./clue-text-control.component.css'],\n    providers: [    { \n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => ClueTextControlComponent),\n        multi: true\n    }],\n})\nexport class ClueTextControlComponent implements ControlValueAccessor, OnInit {\n\n    public chunks: ClueTextChunk[] = [];\n    public definition: string;\n\n    private propagateChange = (_: any) => { };\n\n    @ViewChildren(ClueTextChunkComponent) children: QueryList<ClueTextChunkComponent>;\n    @Output() change = new EventEmitter<void>();\n\n    constructor() {\n    }\n\n    writeValue(chunks: TextChunk[]) {\n        if (chunks !== undefined) {\n            this.chunks = [];\n            chunks.forEach((chunk, index) => this.chunks.push(\n                new ClueTextChunk(\n                    index,\n                    chunk.text,\n                    chunk.isDefinition\n                )\n            ));\n        }\n    }\n    registerOnChange(fn) {\n        this.propagateChange = fn;\n    }\n\n    registerOnTouched() {\n    }\n\n    ngOnInit() {\n    }\n\n    public onChunkMouseUp() {\n        if (window.getSelection) {\n            let selection = window.getSelection();\n\n            if (!selection.isCollapsed) {\n\n                // NOTE: focus and anchor nodes represent the place the user began the selection and\n                // the place the user ended the selection.  This selection might have been right-to-left\n                // or left-to-right, ie focus might come beofre or after the anchor in the text.\n\n\n                let fNode = selection.focusNode;\n                let fOffset: number = selection.focusOffset;\n\n                let aNode = selection.anchorNode;\n                let aOffset = selection.anchorOffset;\n\n                let aChunk: ClueTextChunk = null;\n                let fChunk: ClueTextChunk = null;\n\n                // find the chunks containing the anchor and focus\n                this.children.forEach((component) => {\n                    if (component.containsDomElement(aNode)) {\n                        aChunk = component.chunk;\n                    }\n                    if (component.containsDomElement(fNode)) {\n                        fChunk = component.chunk;\n                    }\n                });\n\n                // work out which chunk is the start of the selection and which is the end \n                let startChunk: ClueTextChunk;\n                let endChunk: ClueTextChunk;\n\n                if (aChunk && fChunk) {\n                    if (aChunk.index == fChunk.index) {\n                        // selection starts and ends in the same node\n                        startChunk = aChunk;\n                        endChunk = aChunk;\n                        startChunk.selectionStartOffset = Math.min(aOffset, fOffset);\n                        endChunk.selectionEndOffset = Math.max(aOffset, fOffset);\n                    } else if (aChunk.index < fChunk.index) {\n                        startChunk = aChunk;\n                        endChunk = fChunk;\n                        startChunk.selectionStartOffset = aOffset;\n                        endChunk.selectionEndOffset = fOffset;\n                    } else {\n                        startChunk = fChunk;\n                        endChunk = aChunk;\n                        startChunk.selectionStartOffset = fOffset;\n                        endChunk.selectionEndOffset = aOffset;\n                    }\n\n                    this.chunks = this.consolidateChunkArray();\n                    this.propagateChange(this.chunks);\n                    this.change.emit();\n               }\n            }\n            selection.removeAllRanges();\n        }\n    }\n\n    private consolidateChunkArray(): ClueTextChunk[] {\n        let result: ClueTextChunk[] = [];\n        let index = 0;\n        const indexBound = this.chunks.length;\n        let chunkCount = 0;\n\n        // copy up to, but not including, the first chunk in the selection\n        while (index < indexBound && this.chunks[index].selectionStartOffset === null) {\n            let oldChunk = this.chunks[index];\n\n            // copy the chunk across as-is\n            result.push(new ClueTextChunk(chunkCount, oldChunk.text, oldChunk.isDefinition, null, null));\n            chunkCount++;\n            index++;\n        }\n\n        // copy up to, but not including, the last chunk in the selection\n        while (index < indexBound && this.chunks[index].selectionEndOffset === null) {\n            let oldChunk = this.chunks[index];\n            \n            if (oldChunk.selectionStartOffset) {\n                // split the chunk into two parts, second becomes definition\n                result.push(new ClueTextChunk(chunkCount, oldChunk.text.substring(0, oldChunk.selectionStartOffset), oldChunk.isDefinition, null, null));\n                chunkCount++;\n                \n                result.push(new ClueTextChunk(chunkCount, oldChunk.text.substring(oldChunk.selectionStartOffset), true, null, null));\n                chunkCount++;\n            } else {\n                // copy the whole chunk as a definition\n                result.push(new ClueTextChunk(chunkCount, oldChunk.text, true, null, null));\n                chunkCount++;\n            }\n            index++;\n        }\n\n        // copy the remaining chunks\n        while (index < indexBound) {\n            let oldChunk = this.chunks[index];\n            \n            if (oldChunk.selectionStartOffset && oldChunk.selectionEndOffset) {\n                // split the chunk into three parts, middle part becomes definition\n                result.push(new ClueTextChunk(chunkCount, oldChunk.text.substring(0, oldChunk.selectionStartOffset), oldChunk.isDefinition, null, null));\n                chunkCount++;\n\n                result.push(new ClueTextChunk(chunkCount, oldChunk.text.substring(oldChunk.selectionStartOffset, oldChunk.selectionEndOffset), true, null, null));\n                chunkCount++;\n\n                result.push(new ClueTextChunk(chunkCount, oldChunk.text.substring(oldChunk.selectionEndOffset), oldChunk.isDefinition, null, null));\n                chunkCount++;\n            } else if (oldChunk.selectionEndOffset) {\n                // split the chunk into two parts, first becomes definition\n                result.push(new ClueTextChunk(chunkCount, oldChunk.text.substring(0, oldChunk.selectionEndOffset), true, null, null));\n                chunkCount++;\n\n                result.push(new ClueTextChunk(chunkCount, oldChunk.text.substring(oldChunk.selectionEndOffset), oldChunk.isDefinition, null, null));\n                chunkCount++;\n            } else {\n                // copy the chunk as-is\n                result.push(new ClueTextChunk(chunkCount, oldChunk.text, oldChunk.isDefinition, null, null));\n                chunkCount++;\n            }\n            index++;\n        }\n\n        return result;\n    }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VpL2NvbXBvbmVudHMvY2x1ZS10ZXh0L2NsdWUtdGV4dC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Clue } from 'src/app/model/clue';\nimport { TextStyle } from 'src/app/model/text-style';\nimport { TextChunk } from 'src/app/model/clue-text-chunk';\nimport { PublishOptions } from 'src/app/model/publish-options';\n\n@Component({\n    selector: 'app-clue-text',\n    templateUrl: './clue-text.component.html',\n    styleUrls: ['./clue-text.component.css']\n})\nexport class ClueTextComponent implements OnInit {\n    @Input() clue: Clue;\n    @Input() publishOptions: PublishOptions;\n\n    constructor() { }\n\n    ngOnInit() {\n    }\n\n    makeChunkStyle(chunk: TextChunk): any {\n        let result: any = {};\n        let textStyle: TextStyle = chunk.isDefinition ? \n            this.publishOptions.definitionStyle :\n            this.publishOptions.clueStyle;\n\n        result.color = textStyle.color;\n\n        result[\"text-decoration\"] = textStyle.underline ?  \"underline\": \"none\";\n        result[\"font-weight\"] = textStyle.bold ?  \"bold\": \"normal\";\n        result[\"font-style\"] = textStyle.italic ?  \"italic\": \"normal\";\n\n        return result;\n    }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VpL2NvbXBvbmVudHMvY2x1ZXMtcHJldmlldy9jbHVlcy1wcmV2aWV3LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Clue } from 'src/app/model/clue';\nimport { TextStyle } from 'src/app/model/text-style';\nimport { PublishOptions } from 'src/app/model/publish-options';\n\n@Component({\n  selector: 'app-clues-preview',\n  templateUrl: './clues-preview.component.html',\n  styleUrls: ['./clues-preview.component.css']\n})\nexport class CluesPreviewComponent implements OnInit {\n    public answerStyle: any = {};\n    public clueStyle: any = {};\n    public definitionStyle: any = {};\n\n    @Input() public clues: Clue[];\n    @Input() public publishOptions: PublishOptions;\n    @Input() public includeGrid: boolean;\n\n    constructor() { }\n\n    ngOnInit() {\n    }\n\n    public makeAnswerStyle(): any {\n        if (this.publishOptions) {\n            return this.makeStyle(this.publishOptions.answerStyle);\n        }\n        return {};\n    }\n\n    public makeClueStyle(): any {\n        if (this.publishOptions) {\n            return this.makeStyle(this.publishOptions.clueStyle);\n        }\n        return {};\n    }\n\n    public get tdClass(): string[] {\n        let result: any = [\"nopad\"];\n\n        switch (this.publishOptions.spacing) {\n            case \"small\":\n                result.push(\"pt-0\");\n                result.push(\"pb-0\");\n                break;\n            case \"medium\":\n                result.push(\"pt-1\");\n                result.push(\"pb-1\");\n                break;\n            case \"large\":\n                result.push(\"pt-2\");\n                result.push(\"pb-2\");\n                break;\n            default:\n                result.push(\"py-1\");\n                break;\n        }\n        return result;\n    }\n\n    private makeStyle(textStyle: TextStyle): any {\n        return {\n            \"color\": textStyle.color,\n            \"font-weight\": textStyle.bold ? \"bold\" : \"normal\",\n            \"font-style\": textStyle.italic ? \"italic\" : \"normal\",\n            \"text-decoration\": textStyle.underline ? \"underline\" : \"unset\",\n        }\n    }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VpL2NvbXBvbmVudHMvY29sb3ItY29udHJvbC9jb2xvci1jb250cm9sLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { cssNamedColors } from \"./colors\";\n\nclass ColorPickerOption {\n    public caption: string;\n    public value: string;\n}\n\n@Component({\n    selector: 'app-color-control',\n    templateUrl: './color-control.component.html',\n    styleUrls: ['./color-control.component.css'],\n    providers: [    { \n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => ColorControlComponent),\n        multi: true\n    }],\n})\nexport class ColorControlComponent implements ControlValueAccessor, OnInit {\n    public color: ColorPickerOption;\n    private propagateChange = (_: any) => { };\n    public options: ColorPickerOption[];\n\n    constructor() {\n        this.options = cssNamedColors;\n    }\n\n    public ngOnInit() {\n        this.color = this.options[0];\n    }\n\n    public writeValue(color: string) {\n        let option = color ? \n            this.options.find(opt => opt.value === color.toLowerCase().replace(\";\", \"\")) :\n            null;\n\n        if (option) {\n            this.color = option;\n        } else {\n            this.color = this.options[0];\n        }\n    }\n\n    public registerOnChange(fn) {\n        this.propagateChange = fn;\n    }\n\n    public registerOnTouched() {\n    }\n\n    public onColorChange() {\n        this.propagateChange(this.color.value);\n    }\n}\n","export const cssNamedColors = [\r\n{ caption:     \"aliceblue\", value:  \"#f0f8ff\" },\r\n{ caption:     \"antiquewhite\", value:  \"#faebd7\" },\r\n{ caption:     \"aqua\", value:  \"#00ffff\" },\r\n{ caption:     \"aquamarine\", value:  \"#7fffd4\" },\r\n{ caption:     \"azure\", value:  \"#f0ffff\" },\r\n{ caption:     \"beige\", value:  \"#f5f5dc\" },\r\n{ caption:     \"bisque\", value:  \"#ffe4c4\" },\r\n{ caption:     \"black\", value:  \"#000000\" },\r\n{ caption:     \"blanchedalmond\", value:  \"#ffebcd\" },\r\n{ caption:     \"blue\", value:  \"#0000ff\" },\r\n{ caption:     \"blueviolet\", value:  \"#8a2be2\" },\r\n{ caption:     \"brown\", value:  \"#a52a2a\" },\r\n{ caption:     \"burlywood\", value:  \"#deb887\" },\r\n{ caption:     \"cadetblue\", value:  \"#5f9ea0\" },\r\n{ caption:     \"chartreuse\", value:  \"#7fff00\" },\r\n{ caption:     \"chocolate\", value:  \"#d2691e\" },\r\n{ caption:     \"coral\", value:  \"#ff7f50\" },\r\n{ caption:     \"cornflowerblue\", value:  \"#6495ed\" },\r\n{ caption:     \"cornsilk\", value:  \"#fff8dc\" },\r\n{ caption:     \"crimson\", value:  \"#dc143c\" },\r\n{ caption:     \"cyan\", value:  \"#00ffff\" },\r\n{ caption:     \"darkblue\", value:  \"#00008b\" },\r\n{ caption:     \"darkcyan\", value:  \"#008b8b\" },\r\n{ caption:     \"darkgoldenrod\", value:  \"#b8860b\" },\r\n{ caption:     \"darkgray\", value:  \"#a9a9a9\" },\r\n{ caption:     \"darkgreen\", value:  \"#006400\" },\r\n{ caption:     \"darkgrey\", value:  \"#a9a9a9\" },\r\n{ caption:     \"darkkhaki\", value:  \"#bdb76b\" },\r\n{ caption:     \"darkmagenta\", value:  \"#8b008b\" },\r\n{ caption:     \"darkolivegreen\", value:  \"#556b2f\" },\r\n{ caption:     \"darkorange\", value:  \"#ff8c00\" },\r\n{ caption:     \"darkorchid\", value:  \"#9932cc\" },\r\n{ caption:     \"darkred\", value:  \"#8b0000\" },\r\n{ caption:     \"darksalmon\", value:  \"#e9967a\" },\r\n{ caption:     \"darkseagreen\", value:  \"#8fbc8f\" },\r\n{ caption:     \"darkslateblue\", value:  \"#483d8b\" },\r\n{ caption:     \"darkslategray\", value:  \"#2f4f4f\" },\r\n{ caption:     \"darkslategrey\", value:  \"#2f4f4f\" },\r\n{ caption:     \"darkturquoise\", value:  \"#00ced1\" },\r\n{ caption:     \"darkviolet\", value:  \"#9400d3\" },\r\n{ caption:     \"deeppink\", value:  \"#ff1493\" },\r\n{ caption:     \"deepskyblue\", value:  \"#00bfff\" },\r\n{ caption:     \"dimgray\", value:  \"#696969\" },\r\n{ caption:     \"dimgrey\", value:  \"#696969\" },\r\n{ caption:     \"dodgerblue\", value:  \"#1e90ff\" },\r\n{ caption:     \"firebrick\", value:  \"#b22222\" },\r\n{ caption:     \"floralwhite\", value:  \"#fffaf0\" },\r\n{ caption:     \"forestgreen\", value:  \"#228b22\" },\r\n{ caption:     \"fuchsia\", value:  \"#ff00ff\" },\r\n{ caption:     \"gainsboro\", value:  \"#dcdcdc\" },\r\n{ caption:     \"ghostwhite\", value:  \"#f8f8ff\" },\r\n{ caption:     \"goldenrod\", value:  \"#daa520\" },\r\n{ caption:     \"gold\", value:  \"#ffd700\" },\r\n{ caption:     \"gray\", value:  \"#808080\" },\r\n{ caption:     \"green\", value:  \"#008000\" },\r\n{ caption:     \"greenyellow\", value:  \"#adff2f\" },\r\n{ caption:     \"grey\", value:  \"#808080\" },\r\n{ caption:     \"honeydew\", value:  \"#f0fff0\" },\r\n{ caption:     \"hotpink\", value:  \"#ff69b4\" },\r\n{ caption:     \"indianred\", value:  \"#cd5c5c\" },\r\n{ caption:     \"indigo\", value:  \"#4b0082\" },\r\n{ caption:     \"ivory\", value:  \"#fffff0\" },\r\n{ caption:     \"khaki\", value:  \"#f0e68c\" },\r\n{ caption:     \"lavenderblush\", value:  \"#fff0f5\" },\r\n{ caption:     \"lavender\", value:  \"#e6e6fa\" },\r\n{ caption:     \"lawngreen\", value:  \"#7cfc00\" },\r\n{ caption:     \"lemonchiffon\", value:  \"#fffacd\" },\r\n{ caption:     \"lightblue\", value:  \"#add8e6\" },\r\n{ caption:     \"lightcoral\", value:  \"#f08080\" },\r\n{ caption:     \"lightcyan\", value:  \"#e0ffff\" },\r\n{ caption:     \"lightgoldenrodyellow\", value:  \"#fafad2\" },\r\n{ caption:     \"lightgray\", value:  \"#d3d3d3\" },\r\n{ caption:     \"lightgreen\", value:  \"#90ee90\" },\r\n{ caption:     \"lightgrey\", value:  \"#d3d3d3\" },\r\n{ caption:     \"lightpink\", value:  \"#ffb6c1\" },\r\n{ caption:     \"lightsalmon\", value:  \"#ffa07a\" },\r\n{ caption:     \"lightseagreen\", value:  \"#20b2aa\" },\r\n{ caption:     \"lightskyblue\", value:  \"#87cefa\" },\r\n{ caption:     \"lightslategray\", value:  \"#778899\" },\r\n{ caption:     \"lightslategrey\", value:  \"#778899\" },\r\n{ caption:     \"lightsteelblue\", value:  \"#b0c4de\" },\r\n{ caption:     \"lightyellow\", value:  \"#ffffe0\" },\r\n{ caption:     \"lime\", value:  \"#00ff00\" },\r\n{ caption:     \"limegreen\", value:  \"#32cd32\" },\r\n{ caption:     \"linen\", value:  \"#faf0e6\" },\r\n{ caption:     \"magenta\", value:  \"#ff00ff\" },\r\n{ caption:     \"maroon\", value:  \"#800000\" },\r\n{ caption:     \"mediumaquamarine\", value:  \"#66cdaa\" },\r\n{ caption:     \"mediumblue\", value:  \"#0000cd\" },\r\n{ caption:     \"mediumorchid\", value:  \"#ba55d3\" },\r\n{ caption:     \"mediumpurple\", value:  \"#9370db\" },\r\n{ caption:     \"mediumseagreen\", value:  \"#3cb371\" },\r\n{ caption:     \"mediumslateblue\", value:  \"#7b68ee\" },\r\n{ caption:     \"mediumspringgreen\", value:  \"#00fa9a\" },\r\n{ caption:     \"mediumturquoise\", value:  \"#48d1cc\" },\r\n{ caption:     \"mediumvioletred\", value:  \"#c71585\" },\r\n{ caption:     \"midnightblue\", value:  \"#191970\" },\r\n{ caption:     \"mintcream\", value:  \"#f5fffa\" },\r\n{ caption:     \"mistyrose\", value:  \"#ffe4e1\" },\r\n{ caption:     \"moccasin\", value:  \"#ffe4b5\" },\r\n{ caption:     \"navajowhite\", value:  \"#ffdead\" },\r\n{ caption:     \"navy\", value:  \"#000080\" },\r\n{ caption:     \"oldlace\", value:  \"#fdf5e6\" },\r\n{ caption:     \"olive\", value:  \"#808000\" },\r\n{ caption:     \"olivedrab\", value:  \"#6b8e23\" },\r\n{ caption:     \"orange\", value:  \"#ffa500\" },\r\n{ caption:     \"orangered\", value:  \"#ff4500\" },\r\n{ caption:     \"orchid\", value:  \"#da70d6\" },\r\n{ caption:     \"palegoldenrod\", value:  \"#eee8aa\" },\r\n{ caption:     \"palegreen\", value:  \"#98fb98\" },\r\n{ caption:     \"paleturquoise\", value:  \"#afeeee\" },\r\n{ caption:     \"palevioletred\", value:  \"#db7093\" },\r\n{ caption:     \"papayawhip\", value:  \"#ffefd5\" },\r\n{ caption:     \"peachpuff\", value:  \"#ffdab9\" },\r\n{ caption:     \"peru\", value:  \"#cd853f\" },\r\n{ caption:     \"pink\", value:  \"#ffc0cb\" },\r\n{ caption:     \"plum\", value:  \"#dda0dd\" },\r\n{ caption:     \"powderblue\", value:  \"#b0e0e6\" },\r\n{ caption:     \"purple\", value:  \"#800080\" },\r\n{ caption:     \"rebeccapurple\", value:  \"#663399\" },\r\n{ caption:     \"red\", value:  \"#ff0000\" },\r\n{ caption:     \"rosybrown\", value:  \"#bc8f8f\" },\r\n{ caption:     \"royalblue\", value:  \"#4169e1\" },\r\n{ caption:     \"saddlebrown\", value:  \"#8b4513\" },\r\n{ caption:     \"salmon\", value:  \"#fa8072\" },\r\n{ caption:     \"sandybrown\", value:  \"#f4a460\" },\r\n{ caption:     \"seagreen\", value:  \"#2e8b57\" },\r\n{ caption:     \"seashell\", value:  \"#fff5ee\" },\r\n{ caption:     \"sienna\", value:  \"#a0522d\" },\r\n{ caption:     \"silver\", value:  \"#c0c0c0\" },\r\n{ caption:     \"skyblue\", value:  \"#87ceeb\" },\r\n{ caption:     \"slateblue\", value:  \"#6a5acd\" },\r\n{ caption:     \"slategray\", value:  \"#708090\" },\r\n{ caption:     \"slategrey\", value:  \"#708090\" },\r\n{ caption:     \"snow\", value:  \"#fffafa\" },\r\n{ caption:     \"springgreen\", value:  \"#00ff7f\" },\r\n{ caption:     \"steelblue\", value:  \"#4682b4\" },\r\n{ caption:     \"tan\", value:  \"#d2b48c\" },\r\n{ caption:     \"teal\", value:  \"#008080\" },\r\n{ caption:     \"thistle\", value:  \"#d8bfd8\" },\r\n{ caption:     \"tomato\", value:  \"#ff6347\" },\r\n{ caption:     \"turquoise\", value:  \"#40e0d0\" },\r\n{ caption:     \"violet\", value:  \"#ee82ee\" },\r\n{ caption:     \"wheat\", value:  \"#f5deb3\" },\r\n{ caption:     \"white\", value:  \"#ffffff\" },\r\n{ caption:     \"whitesmoke\", value:  \"#f5f5f5\" },\r\n{ caption:     \"yellow\", value:  \"#ffff00\" },\r\n{ caption:     \"yellowgreen\", value:  \"#9acd32\" },\r\n];\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VpL2NvbXBvbmVudHMvY29uZmlybS1tb2RhbC9jb25maXJtLW1vZGFsLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n    selector: 'app-confirm-modal',\n    templateUrl: './confirm-modal.component.html',\n    styleUrls: ['./confirm-modal.component.css']\n})\nexport class ConfirmModalComponent implements OnInit {\n\n    @Input() message: string;\n\n    constructor(public activeModal: NgbActiveModal) {}\n\n    ngOnInit() {\n    }\n\n    public onClose(result: boolean) {\n        this.activeModal.close(result);\n    }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VpL2NvbXBvbmVudHMvY29udGVudC1wcmV2aWV3L2NvbnRlbnQtcHJldmlldy5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n    selector: 'app-content-preview',\n    templateUrl: './content-preview.component.html',\n    styleUrls: ['./content-preview.component.css'],\n})\nexport class ContentPreviewComponent implements OnInit {\n\n    @Input() content: any;\n\n    constructor() { }\n\n    ngOnInit() \n    {\n    }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VpL2NvbXBvbmVudHMvZGlhcnktYWxpYXMtY29udHJvbC9kaWFyeS1hbGlhcy1jb250cm9sLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, Input, Output, EventEmitter, forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nexport interface DiaryAliasEvent {\n    id: number,\n    text: string,\n}\n\n@Component({\n  selector: 'app-diary-alias-control',\n  templateUrl: './diary-alias-control.component.html',\n  styleUrls: ['./diary-alias-control.component.css'],\n})\nexport class DiaryAliasControlComponent implements OnInit {\n\n    @Input() public text: string;\n    @Input() public id: number;\n    @Input() public editable: boolean;\n\n    @Output() public remove = new EventEmitter<DiaryAliasEvent>();\n    @Output() public save = new EventEmitter<DiaryAliasEvent>();\n\n    constructor() { }\n\n    public ngOnInit() {\n    }\n\n    public onRemove() {\n        this.remove.emit({ \n            id: this.id,\n            text: this.text,\n        });\n    }\n\n    public onSave() {\n        this.save.emit({ \n            id: this.id,\n            text: this.text,\n        });\n    }\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VpL2NvbXBvbmVudHMvZGlhcnktc2V0dGluZ3MtZWRpdG9yL2RpYXJ5LXNldHRpbmdzLWVkaXRvci5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit, OnDestroy, Output, EventEmitter } from '@angular/core';\nimport { AppSettingsService } from 'src/app/services/app-settings.service';\nimport { Subscription } from 'rxjs';\nimport { AppService } from 'src/app/ui/services/app.service';\nimport { AppSettings } from 'src/app/services/common';\nimport { DiaryAliasEvent } from '../diary-alias-control/diary-alias-control.component';\n\nclass AliasControl {\n    constructor(\n        public text: string,\n        public editable: boolean,\n        public id: number,\n    ){}\n}\n\n@Component({\n  selector: 'app-diary-settings-editor',\n  templateUrl: './diary-settings-editor.component.html',\n  styleUrls: ['./diary-settings-editor.component.css']\n})\nexport class DiarySettingsEditorComponent implements OnInit, OnDestroy {\n    public settings: AppSettings;\n    public aliasControls: AliasControl[] = [];\n    public checked: boolean;\n\n    private subs: Subscription[] = [];\n\n    constructor(\n        private appService: AppService,\n        private settingsService: AppSettingsService,\n    ) { }\n\n    ngOnInit() {\n\n        this.settings = this.settingsService.settings;\n\n        this.subs.push(this.settingsService.observe().subscribe(settings => {\n            this.settings = settings;\n            this.aliasControls = [];\n            this.settings.diary.aliases.forEach((alias, index) => this.aliasControls.push(new AliasControl(alias, false, index)));\n            this.checked = settings.diary.showEverybody;\n        }));\n\n    }\n\n    public ngOnDestroy() {\n        this.subs.forEach(sub => sub.unsubscribe());\n    }\n\n    public onShowEverybodyChange() {\n        this.checked = !this.checked;\n        this.save();\n    }\n\n    public onAddAlias() {\n        this.aliasControls.push(new AliasControl(\"\", true, this.aliasControls.length));\n    }\n\n    public onRemoveAlias(event: DiaryAliasEvent) {\n        this.aliasControls.splice(event.id, 1);\n        this.save();\n    }\n\n    public onSaveAlias(event: DiaryAliasEvent) {\n        this.aliasControls[event.id].text = event.text;\n        this.save();\n    }\n\n    private save() {\n        let aliases = [];\n        this.aliasControls.forEach(control => aliases.push(control.text));\n\n        let changes = {\n            diary: { \n                showEverybody: this.checked,\n                aliases: aliases,\n            },\n        }\n\n        this.settingsService.update(changes);\n    }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VpL2NvbXBvbmVudHMvZG93bmxvYWQtYnV0dG9uL2Rvd25sb2FkLWJ1dHRvbi5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit, Output, EventEmitter, AfterViewInit, ViewChild, ElementRef } from '@angular/core';\nimport { AppService } from '../../services/app.service';\n\nexport interface DownloadInstance {\n    download(filename: string, dataUrl: string): void;\n}\n\n@Component({\n    selector: 'app-download-button',\n    templateUrl: './download-button.component.html',\n    styleUrls: ['./download-button.component.css']\n})\nexport class DownloadButtonComponent implements AfterViewInit {\n    public dataUrl: string;\n    public filename: string;\n    public enabled: boolean;\n\n    @Output() download = new EventEmitter<DownloadInstance>();\n\n    @ViewChild(\"downloadLink\", { static: false }) downloadLink: ElementRef;\n\n    constructor(private appService: AppService) { }\n\n    public ngAfterViewInit() {\n        setTimeout(()=> { this.enabled = typeof this.downloadLink.nativeElement.download !== \"undefined\"; }, 0);\n    }\n\n    public onClick(event: Event) {\n        this.download.emit({\n            download: (filename: string, dataUrl: string) => {\n                this.dataUrl = dataUrl;\n                this.filename = filename;\n                setTimeout(() => this.downloadLink.nativeElement.click(), 0);\n                this.appService.setAlert(\"info\", \"The image has been created.  Check the downloads folder in your browser.\");\n            }\n        });\n        event.preventDefault();\n    }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VpL2NvbXBvbmVudHMvZ3JpZC1wcm9wZXJ0aWVzLWVkaXRvci9ncmlkLXByb3BlcnRpZXMtZWRpdG9yLmNvbXBvbmVudC5jc3MifQ== */\"","import { OnInit, Output, EventEmitter, Component, Input, OnDestroy } from '@angular/core';\nimport { AppStatus, AppService } from '../../services/app.service';\nimport { Subscription } from 'rxjs';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { GridStyles } from 'src/app/model/interfaces';\nimport { GridProperties } from 'src/app/model/grid-properties';\n\n@Component({\n  selector: 'app-grid-properties-editor',\n  templateUrl: './grid-properties-editor.component.html',\n  styleUrls: ['./grid-properties-editor.component.css']\n})\nexport class GridPropertiesEditorComponent implements OnInit, OnDestroy {\n    public readonly minCellsAcross = 1;\n    public readonly minCellsDown = 1;\n    public readonly maxCellsAcross = 25;\n    public readonly maxCellsDown = 25;   \n    public appStatus: AppStatus;\n    public form: FormGroup;\n\n    private subs: Subscription[] = [];\n\n    @Input() public data: GridProperties;\n    @Output() public close:EventEmitter<GridProperties> = new EventEmitter();\n\n    constructor(\n        private appService: AppService,\n        private formBuilder: FormBuilder,\n    ) { }\n\n    public ngOnInit() {\n\n        this.form = this.formBuilder.group({\n            gridStyle: [\n                this.data ? this.data.style : GridStyles.standard, \n                [Validators.required]],\n\n            cellsAcross: [\n                this.data ? this.data.size.across : 15, \n                [Validators.required, Validators.max(this.maxCellsAcross), Validators.min(this.minCellsAcross)]],\n\n            cellsDown: [\n                this.data ? this.data.size.down : 15, \n                [Validators.required, Validators.max(this.maxCellsDown), Validators.min(this.minCellsDown)]],\n\n            symmetrical : [\n                this.data ? this.data.symmetrical : true,\n                [Validators.required],\n            ]\n        });\n\n        this.subs.push(this.appService.getObservable().subscribe(s => this.appStatus = s));\n        this.appService.clearAlerts();\n    }\n\n    ngOnDestroy() {\n        this.subs.forEach(s => s.unsubscribe());\n    }\n\n    public onContinue() {\n        this.close.emit({\n            style: this.form.value.gridStyle,\n            size: {\n                across: this.form.value.cellsAcross,\n                down: this.form.value.cellsDown,\n            },\n            symmetrical: this.form.value.symmetrical,\n        });\n    }\n\n    public onCancel() {\n        this.close.emit(null);\n    }\n\n\n}\n","export default \".canvasContainer {\\r\\n    border: 0;\\r\\n    padding: 0;\\r\\n    position: relative;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n}\\r\\n.gridCanvas {\\r\\n    border: 0;\\r\\n    padding: 0;\\r\\n}\\r\\ninput {\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdWkvY29tcG9uZW50cy9ncmlkL2dyaWQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFNBQVM7SUFDVCxVQUFVO0lBQ1Ysa0JBQWtCO0lBQ2xCLE1BQU07SUFDTixPQUFPO0FBQ1g7QUFDQTtJQUNJLFNBQVM7SUFDVCxVQUFVO0FBQ2Q7QUFDQTtJQUNJLGtCQUFrQjtJQUNsQixNQUFNO0lBQ04sT0FBTztBQUNYIiwiZmlsZSI6InNyYy9hcHAvdWkvY29tcG9uZW50cy9ncmlkL2dyaWQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jYW52YXNDb250YWluZXIge1xyXG4gICAgYm9yZGVyOiAwO1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIHRvcDogMDtcclxuICAgIGxlZnQ6IDA7XHJcbn1cclxuLmdyaWRDYW52YXMge1xyXG4gICAgYm9yZGVyOiAwO1xyXG4gICAgcGFkZGluZzogMDtcclxufVxyXG5pbnB1dCB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDA7XHJcbiAgICBsZWZ0OiAwO1xyXG59Il19 */\"","import { Component, OnInit, Input, ViewChild, ElementRef, AfterViewInit, Output, EventEmitter } from '@angular/core';\r\nimport { Puzzle } from 'src/app/model/puzzle';\r\nimport { Subscription } from 'rxjs';\r\nimport { GridCell } from 'src/app/model/grid-cell';\r\nimport { IActivePuzzle } from 'src/app/services/puzzle-management.service';\r\nimport { GridParameters, GridControlOptions } from '../../common';\r\nimport { GridPainterService } from '../../services/grid-painter.service';\r\nimport { GridNavigation, WritingDirection } from 'src/app/model/interfaces';\r\n\r\nexport type BarClickEvent = {cell: GridCell, bar: \"rightBar\" | \"bottomBar\" };\r\n\r\n\r\nexport type GridTextEvent = { \r\n    text: string,\r\n    writingDirection: WritingDirection,\r\n}\r\n\r\nexport type GridNavigationEvent = { \r\n    navigation: GridNavigation,\r\n}\r\n\r\ntype GridInput = { \r\n    text: string,\r\n    style: { \r\n        display: string,\r\n        top: string,\r\n        left: string,\r\n        height: string,\r\n        width: string,\r\n        border: string,\r\n    }, \r\n}\r\nconst editBorderWidth = 2;\r\n\r\nconst gridInputDefaults: GridInput = { \r\n    text: \"\", \r\n    style: {\r\n        display: \"none\",\r\n        top: \"0px\",\r\n        left: \"0px\",\r\n        height: \"50px\",\r\n        width: \"50px\",\r\n        border: `${editBorderWidth}px gold solid`,\r\n    }\r\n};\r\n\r\n@Component({\r\n    selector: 'app-grid',\r\n    templateUrl: './grid.component.html',\r\n    styleUrls: ['./grid.component.css']\r\n})\r\nexport class GridComponent implements OnInit, AfterViewInit {\r\n\r\n    @Input() options: GridControlOptions;\r\n\r\n    @Output() cellClick = new EventEmitter<GridCell>();\r\n    @Output() barClick = new EventEmitter<BarClickEvent>();\r\n    @Output() gridText = new EventEmitter<GridTextEvent>();\r\n    @Output() gridNavigation = new EventEmitter<GridNavigationEvent>();\r\n\r\n    @ViewChild('gridCanvas', { static: false }) canvas: ElementRef;\r\n    @ViewChild('editor', { static: false }) editor: ElementRef;\r\n\r\n    public canvasHeight: number = 0;\r\n    public canvasWidth: number = 0;\r\n    public puzzle: Puzzle;\r\n    public source: string = \"\";\r\n    public err: any;\r\n    public model: GridInput = gridInputDefaults;\r\n\r\n    private gridParams: GridParameters;\r\n    private viewInitiated = false;\r\n    private subs: Subscription[] = [];\r\n\r\n    constructor(\r\n        private activePuzzle: IActivePuzzle,\r\n        private gridPainter: GridPainterService) {\r\n    }\r\n\r\n    public ngOnInit() {\r\n        this.gridParams = new GridParameters();\r\n\r\n        this.subs.push(\r\n            this.activePuzzle.observe().subscribe(\r\n                (puzzle) => {\r\n\r\n                    if (puzzle) {\r\n                        this.puzzle = puzzle;\r\n                        this.canvasWidth = this.gridParams.cellSize * this.puzzle.grid.properties.size.across + this.gridParams.gridPadding * 2;\r\n                        this.canvasHeight = this.gridParams.cellSize * this.puzzle.grid.properties.size.down + this.gridParams.gridPadding * 2;\r\n                        this.model.style.display = \"none\";\r\n\r\n                        let cell = this.puzzle.grid.cells.find(c => c.edit);\r\n\r\n                        if (cell) {\r\n                            this.openEditor(cell);\r\n                        }\r\n\r\n                        // don't draw the grid until the native canvas has had a chance to resize\r\n                        setTimeout(() => this.drawGrid() , 0);\r\n                    }\r\n                },\r\n                (err) => {\r\n                    this.err = err;\r\n                }\r\n            )\r\n        );\r\n    }\r\n\r\n    public ngOnDestroy() {\r\n        this.subs.forEach((s) => s.unsubscribe());\r\n    }\r\n\r\n    public ngAfterViewInit() {\r\n        this.viewInitiated = true;\r\n        this.drawGrid()\r\n    }\r\n\r\n    public onCanvasClick(params: any) {\r\n        const cellSize = this.gridParams.cellSize;\r\n        const tolerance = cellSize / 5;\r\n\r\n        const bounds = this.canvas.nativeElement.getBoundingClientRect();\r\n        let xOffsetInGrid = params.clientX - bounds.left - this.gridParams.gridPadding;\r\n        let yOffsetInGrid = params.clientY - bounds.top - this.gridParams.gridPadding;\r\n\r\n        // i,j represent the cell number in the model eg 3 cells across and two cells down\r\n        const i = Math.floor(xOffsetInGrid / cellSize);\r\n        const j = Math.floor(yOffsetInGrid / cellSize);\r\n\r\n        // x,y represent the offset (in pixels) of the mouse click from the top-left corner of cell i,j\r\n        let x = xOffsetInGrid % cellSize;\r\n        let y = yOffsetInGrid % cellSize;\r\n\r\n        let cell: GridCell = this.puzzle.grid.cellAt(i, j);\r\n        if (cell) {\r\n            // for all grids emit an event to say a cell has been clicked\r\n            this.cellClick.emit(cell);\r\n\r\n            // For barred grids emit the barClick event only if the click is on a bar area, these are areas\r\n            // near to an edge of the cell but not in a corner. Edges that form the outside of the grid\r\n            // cannot have bars and in these cases the barClick is not fired.\r\n            if (x < tolerance && y < tolerance) {\r\n                // in a corner, do nothing\r\n            } else if (x < tolerance && cellSize - y < tolerance) {\r\n                // in a corner, do nothing\r\n            } else if (cellSize - x < tolerance && y < tolerance) {\r\n                // in a corner, do nothing\r\n            } else if (cellSize - x < tolerance && cellSize - y < tolerance) {\r\n                // in a corner, do nothing\r\n            } else if (i < this.puzzle.grid.properties.size.across - 1 && cellSize - x <= tolerance) {\r\n                // click is near right edge\r\n                this.barClick.emit({ cell, bar: \"rightBar\"});\r\n            } else if (j < this.puzzle.grid.properties.size.down - 1 && cellSize - y <= tolerance) {\r\n                // click is near bottom edge\r\n                this.barClick.emit({ cell, bar: \"bottomBar\"});\r\n            } else if (i > 0 && x < tolerance) {\r\n                // click is near left edge of this cell, so right edge of previous cell\r\n                this.barClick.emit({ cell: this.puzzle.grid.cellAt(i - 1, j), bar: \"rightBar\"});\r\n            } else if (j > 0 && y < tolerance) {\r\n                // click is near top edge of this cell, so bottom edge of previous cell\r\n                this.barClick.emit({ cell: this.puzzle.grid.cellAt(i, j - 1), bar: \"bottomBar\"});\r\n            }\r\n        }\r\n    }\r\n\r\n    public onInput(event: KeyboardEvent) {\r\n\r\n        if (RegExp(\"^[A-Z ]$\", \"i\").test(event.key)) {\r\n            let key = event.key.trim().toUpperCase()\r\n            this.gridText.emit({ text: event.key.toUpperCase(), writingDirection: \"forward\" });\r\n\r\n        } else if (event.key === \"Backspace\") {\r\n            this.gridText.emit({ text: \"\", writingDirection: \"backward\" });\r\n\r\n        } else if (event.key === \"Delete\") {\r\n            this.gridText.emit({ text: \"\", writingDirection: \"static\"});\r\n\r\n        } else if (event.key === \"ArrowRight\") {\r\n            this.gridNavigation.emit({ navigation: \"right\"});\r\n\r\n        } else if (event.key === \"ArrowLeft\") {\r\n            this.gridNavigation.emit({ navigation: \"left\" });\r\n\r\n        } else if (event.key === \"ArrowUp\") {\r\n            this.gridNavigation.emit({ navigation: \"up\" });\r\n\r\n        } else if (event.key === \"ArrowDown\") {\r\n            this.gridNavigation.emit({ navigation: \"down\" });\r\n\r\n        } else if (event.key === \"Enter\" || event.key === \"Escape\" || event.key === \"Tab\") {\r\n            this.gridNavigation.emit({ navigation: null });\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n    public getDataUrl(): string {\r\n        const canvas: HTMLCanvasElement = this.canvas.nativeElement;\r\n        const context = canvas.getContext('2d');\r\n        this.gridPainter.drawGrid(context, this.puzzle.grid, this.options);\r\n\r\n        return canvas.toDataURL();\r\n    }\r\n\r\n\r\n    private drawGrid(): void {\r\n        if (this.viewInitiated && this.canvas) {\r\n            const canvasEl = <HTMLCanvasElement>this.canvas.nativeElement;\r\n            const context = canvasEl.getContext('2d');\r\n            this.gridPainter.drawGrid(context, this.puzzle.grid, this.options);\r\n        }\r\n    }\r\n\r\n    private openEditor(cell: GridCell) {\r\n        const canvasEl = <HTMLCanvasElement>this.canvas.nativeElement;\r\n        const context = canvasEl.getContext('2d');\r\n\r\n        let cellInfo = this.gridPainter.getCellInfo(context, this.puzzle.grid, cell.id);\r\n\r\n        let top = cellInfo.top - editBorderWidth;\r\n        let left = cellInfo.left - editBorderWidth;\r\n        let height = cellInfo.height + 2 * editBorderWidth;\r\n        let width = cellInfo.width + 2 * editBorderWidth;\r\n\r\n        if (cellInfo) {\r\n            this.model.text = cell.content;\r\n            this.model.style.top = top.toString() + cellInfo.unit;\r\n            this.model.style.left = left.toString() + cellInfo.unit;\r\n            this.model.style.height = height.toString() + cellInfo.unit;\r\n            this.model.style.width = width.toString() + cellInfo.unit;\r\n            this.model.style.display = \"block\";\r\n\r\n            setTimeout(() => {\r\n                this.editor.nativeElement.focus();\r\n            }, 0); \r\n        } else {\r\n            this.model.style.display = \"none\";\r\n        }\r\n    }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VpL2NvbXBvbmVudHMvbG9naW4tY29udHJvbC9sb2dpbi1jb250cm9sLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, Output, EventEmitter, OnDestroy, Input } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { AppService, AppStatus } from 'src/app/ui/services/app.service';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { ApiSymbols, AppSettings } from 'src/app/services/common';\nimport { Subscription } from 'rxjs';\nimport { UIResult } from '../../common';\nimport { AppSettingsService } from 'src/app/services/app-settings.service';\n\nexport interface LoginControlOptions {\n    continueButtonText: string;\n    cancelButtonText: string;\n}\n\n@Component({\n    selector: 'app-login-control',\n    templateUrl: './login-control.component.html',\n    styleUrls: ['./login-control.component.css']\n})\nexport class LoginControlComponent implements OnInit, OnDestroy {\n    public form: FormGroup;\n    public appStatus: AppStatus;\n    public appSettings: AppSettings;\n    private subs: Subscription[] = [];\n\n    @Input() public options: LoginControlOptions;\n    @Output() public close:EventEmitter<UIResult> = new EventEmitter();\n\n    constructor(\n        private appService: AppService,\n        private authService: AuthService,\n        private builder: FormBuilder,\n        private settingsService: AppSettingsService,\n    ) { }\n\n    public ngOnInit() {\n\n        this.form = this.builder.group({\n            'username': [\"\", Validators.required],\n            'password': [\"\", Validators.required],\n        });\n\n        this.subs.push(this.appService.getObservable().subscribe(s => this.appStatus = s));\n        this.appService.clearAlerts();\n\n        this.subs.push(this.settingsService.observe().subscribe(settings => {\n            this.appSettings = settings;\n            this.form.patchValue({username: settings.username});\n        }));\n\n    }\n\n    public onLogin() {\n        this.appService.setBusy();\n        this.appService.clearAlerts();\n        \n        this.authService.authenticate(\n            this.form.value.username,\n            this.form.value.password)\n        .then(() => {\n            this.appService.clearBusy();\n            this.close.emit(\"ok\");\n        })\n        .catch((error) => {\n            this.appService.clearBusy();\n            if (error === ApiSymbols.AuthorizationFailure) {\n                this.appService.setAlert(\"danger\", \"Username or password is incorrect\");\n            } else {\n                this.appService.setAlert(\"danger\", \"Failed to connect to fifteensquared to verify the username and password\");\n            }\n        });\n    }\n\n    public ngOnDestroy() {\n        this.subs.forEach(sub => sub.unsubscribe());\n    }\n\n    public onCancel() {\n        this.close.emit(\"cancel\");\n    }\n\n    public get continueButtonText() {\n        if (this.options && this.options.continueButtonText) {\n            return this.options.continueButtonText;\n        }\n        return \"Continue\";\n    }\n\n    public get cancelButtonText() {\n        if (this.options && this.options.cancelButtonText) {\n            return this.options.cancelButtonText;\n        }\n        return \"Cancel\";\n    }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VpL2NvbXBvbmVudHMvcGFyc2UtZXJyb3ItaGludC9wYXJzZS1lcnJvci1oaW50LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { TextParsingErrorCode, TextParsingError } from 'src/app/services/parsing/text/text-parsing-context';\n\n@Component({\n    selector: 'app-parse-error-hint',\n    templateUrl: './parse-error-hint.component.html',\n    styleUrls: ['./parse-error-hint.component.css']\n})\nexport class ParseErrorHintComponent implements OnInit {\n    @Input() public error: TextParsingError;\n\n    public code: TextParsingErrorCode;\n\n    constructor() { }\n\n    ngOnInit() {\n        if (this.error) {\n            this.code = this.error.code;\n        }\n    }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VpL2NvbXBvbmVudHMvcGFyc2UtcmVzdWx0L3BhcnNlLXJlc3VsdC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { IParseContext } from 'src/app/services/parsing/text/text-parsing-context';\n\n@Component({\n    selector: 'app-parse-result',\n    templateUrl: './parse-result.component.html',\n    styleUrls: ['./parse-result.component.css']\n})\nexport class ParseResultComponent implements OnInit {\n    @Input() public result: IParseContext = null;\n    \n    constructor() { }\n\n    ngOnInit() {\n\n// TO DO: convert the errors to hints here...\n\n    }\n\n}\n","export default \"select {\\r\\n    width: 100px\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdWkvY29tcG9uZW50cy90ZXh0LXN0eWxlL3RleHQtc3R5bGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJO0FBQ0oiLCJmaWxlIjoic3JjL2FwcC91aS9jb21wb25lbnRzL3RleHQtc3R5bGUvdGV4dC1zdHlsZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsic2VsZWN0IHtcclxuICAgIHdpZHRoOiAxMDBweFxyXG59Il19 */\"","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { TextStyleName } from '../../common';\r\nimport { Subscription, combineLatest } from 'rxjs';\r\nimport { AppService, AppStatus } from 'src/app/ui/services/app.service';\r\nimport { Puzzle } from 'src/app/model/puzzle';\r\nimport { UpdatePublsihOptionTextStyle } from 'src/app/services/modifiers/update-publish-option-text-style';\r\nimport { IActivePuzzle } from 'src/app/services/puzzle-management.service';\r\n\r\n@Component({\r\n    selector: 'app-text-style',\r\n    templateUrl: './text-style.component.html',\r\n    styleUrls: ['./text-style.component.css']\r\n})\r\nexport class TextStyleComponent implements OnInit, OnDestroy {\r\n    public form: FormGroup;\r\n    public appStatus: AppStatus;\r\n    public puzzle: Puzzle;\r\n\r\n    private subs: Subscription[] = [];\r\n\r\n    @Input() textStyleName: TextStyleName;\r\n    @Input() caption: string;\r\n\r\n    constructor(\r\n        private appService: AppService,\r\n        private activePuzzle: IActivePuzzle,\r\n        private formBuilder: FormBuilder\r\n        ) { }\r\n\r\n    ngOnInit() {\r\n\r\n        this.form = this.formBuilder.group({\r\n            color: null,\r\n            bold: false,\r\n            italic: false,\r\n            underline: false\r\n        });\r\n\r\n        this.subs.push(this.form.valueChanges.subscribe((val) => {\r\n            if (this.puzzle && this.appStatus) {\r\n\r\n                this.activePuzzle.update(new UpdatePublsihOptionTextStyle(\r\n                    this.textStyleName,\r\n                    val.color,\r\n                    val.bold,\r\n                    val.italic,\r\n                    val.underline));\r\n            }\r\n        }));\r\n\r\n        let latest = combineLatest(this.appService.getObservable(), this.activePuzzle.observe());\r\n\r\n        this.subs.push(latest.subscribe((result) => {\r\n            this.appStatus = result[0];\r\n            this.puzzle = result[1];\r\n\r\n            if (this.puzzle && this.appStatus) {\r\n                if(this.appStatus.busy) {\r\n                    this.form.disable({emitEvent: false});\r\n                } else {\r\n                    this.form.enable({emitEvent: false});\r\n                }\r\n\r\n                let ts = this.puzzle.publishOptions[this.textStyleName];\r\n\r\n                this.form.controls[\"bold\"].patchValue(ts.bold, { emitEvent: false});\r\n                this.form.controls[\"italic\"].patchValue(ts.italic, { emitEvent: false});\r\n                this.form.controls[\"underline\"].patchValue(ts.underline, { emitEvent: false});\r\n                this.form.controls[\"color\"].patchValue(ts.color, { emitEvent: false});\r\n            }\r\n        }));\r\n\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.subs.forEach(sub => sub.unsubscribe());\r\n    }\r\n}\r\n","import { BehaviorSubject, Observable, Subscription } from 'rxjs';\r\nimport { AppSettingsService } from 'src/app/services/app-settings.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { TipKey } from 'src/app/services/common';\r\n\r\nexport class TipStatus {\r\n    constructor(\r\n        public readonly enabled: boolean,\r\n        public readonly active: boolean,\r\n        public readonly activationCountExceeded: boolean, \r\n    ) {}\r\n\r\n    public get show(): boolean {\r\n        return this.enabled && this.active  && !this.activationCountExceeded;\r\n    }\r\n}\r\n\r\nexport class TipInstance {\r\n    private bs: BehaviorSubject<TipStatus>;\r\n    private activationCounter: number = 0;\r\n    private subs: Subscription[] = [];\r\n\r\n    constructor(\r\n        settingsService: AppSettingsService, \r\n        private key: TipKey,\r\n        private maxActivations: number,\r\n    ) {\r\n        this.bs = new BehaviorSubject<TipStatus>(new TipStatus(false, true, false));\r\n\r\n        this.subs.push(settingsService.observe().subscribe((settings) => {\r\n            const current = this.bs.value;\r\n            let tipSetting = settings.tips[this.key]; \r\n            \r\n            this.bs.next(new TipStatus(\r\n                tipSetting ? tipSetting.enabled : true, \r\n                current.active, \r\n                this.activationCounter > this.maxActivations));\r\n        }));\r\n    }\r\n\r\n    public observe(): Observable<TipStatus> {\r\n        return this.bs.asObservable();\r\n    }\r\n\r\n    public set activated(active: boolean) {\r\n        const current = this.bs.value;\r\n\r\n        if (!current.active && active) {\r\n            this.activationCounter++;\r\n        }\r\n        this.bs.next(new TipStatus(\r\n            current.enabled, \r\n            active, \r\n            this.activationCounter > this.maxActivations));\r\n    };\r\n\r\n    public destroy() {\r\n        this.subs.forEach(s => s.unsubscribe());\r\n    }\r\n}\r\n\r\n@Injectable()\r\nexport class TipInstanceFactory {\r\n    constructor(private appSettingsService: AppSettingsService) \r\n    {}\r\n\r\n    public newInstance(key: TipKey, maxAxtivations: number): TipInstance {\r\n        return new TipInstance(this.appSettingsService, key, maxAxtivations);\r\n    }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VpL2NvbXBvbmVudHMvdGlwL3RpcC5jb21wb25lbnQuY3NzIn0= */\"","/*\n*   Tips can be shown using the tip control:\n* \n*       <app-tip> Your text goes here... </app-tip>\n*\n*   Tips can be disabled by the user by clicking the don't show again checkbox. To control\n*   which tips are disabled provide a key for the tip.  If no key is specified the key will be \"general\".\n*   Any tip with that key will no longer be shown (see AppSettingsService for more information on settings keys).\n* \n*       <app-tip key=\"validationWarnings\"> Your text goes here... </app-tip>\n*\n*   If the user closes the tip with the close buton (X in the top left corner) the tip will not be visible.  This will not prevent\n*   the tip reappearing again if it is reactivated (eg if the tip is shown whenever a validation failure occurs).  To prevent this becoming\n*   annoying you can set a limit to the number of times a specific instance of a tip will be shown:\n*\n*      <app-tip maxActivations=\"1\"> Your text goes here... </app-tip>\n*\n*   If you need to control the behaviour of a particular tip programatically (eg stop only this instance of the tip showing)\n*   capture the tip instance in your component using the instance event.  \n* \n*       <app-tip (instance)=\"rtmInit($event)\"> <em>read the manual</em> </app-tip>\n*\n*   And in your code:\n*\n*       private rtmTip: TipInstance;\n*\n*       public rtmInit(instance: TipInstance) {\n*           this.rtmTip = instance;\n*       }\n*\n*       this.rtmTip.activated = false;\n*\n*   The state of the tip (eg if it is currently enabled or currently visible) can be observed:\n*\n*       private rtmStatus: TipStatus;\n*\n*       this.rtmTip.observe().subscribe(ts => this.rtmStatus = ts);\n*\n*/\n\nimport { Component, OnInit, Input, Output, EventEmitter, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { AppSettingsService } from 'src/app/services/app-settings.service';\nimport { TipInstance, TipStatus, TipInstanceFactory } from './tip-instance';\nimport { TipKey } from 'src/app/services/common';\n\n@Component({\n    selector: 'app-tip',\n    templateUrl: './tip.component.html',\n    styleUrls: ['./tip.component.css'],\n})\nexport class TipComponent implements OnInit, OnDestroy {\n    @Input() key: TipKey = \"general\";\n    @Input() maxShowings: number = NaN;\n    @Input() suppressable: boolean = true;\n    @Output() instance = new EventEmitter<TipInstance>();\n\n    public status: TipStatus;\n\n    private subs: Subscription[] = [];\n    private tipInstance: TipInstance;\n\n    constructor(\n        private appSettingsService: AppSettingsService,\n        private tipInstanceFactory: TipInstanceFactory)\n    {}\n\n    public ngOnInit() {\n        this.tipInstance = this.tipInstanceFactory.newInstance(this.key, this.maxShowings)\n        this.subs.push(this.tipInstance.observe().subscribe((status) => {\n            this.status = status;\n        }));\n        this.instance.emit(this.tipInstance);\n    }\n\n    public ngOnDestroy() {\n        this.subs.forEach(s => s.unsubscribe());\n        if (this.tipInstance){\n            this.tipInstance.destroy();\n        }\n    }\n\n    public onDontShowAgain(event: any) {\n        let tips = {};\n        tips[this.key] = { enabled: false };\n        this.appSettingsService.update({ tips });\n    }\n\n    public onClose() {\n        this.tipInstance.activated = false;\n    }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VpL2NvbXBvbmVudHMvdmFsaWRhdGlvbi1tZXNzYWdlL3ZhbGlkYXRpb24tbWVzc2FnZS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n    selector: 'app-validation-message',\n    templateUrl: './validation-message.component.html',\n    styleUrls: ['./validation-message.component.css']\n})\nexport class ValidationMessageComponent implements OnInit {\n    @Input() control: FormControl;\n    constructor() { }\n\n    ngOnInit() {\n    }\n\n}\n","import { Injectable, InjectionToken, Inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NavTrack, NavTrackNode, NavContext, NavProcessor } from './interfaces';\nimport { ActionSequence } from 'protractor';\n\nclass _NavContext<T> implements NavContext {\n    public track: NavTrack;\n    public currentNode: NavTrackNode;\n\n    constructor() {\n        this.track = null;\n        this.currentNode = null;\n    }\n}\n\nexport const NAV_TRACKS = new InjectionToken<ReadonlyArray<NavTrack>>(\"Navigation Tracks\");\nexport const NAV_PROCESSOR = new InjectionToken<NavProcessor<any>>(\"Navigation Processes\");\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class NavService<T> {\n    private callStack: _NavContext<T>[] = [];\n    private _appData: T;\n\n    constructor(\n        private router: Router,\n        @Inject(NAV_TRACKS) private tracks: ReadonlyArray<NavTrack>,\n        @Inject(NAV_PROCESSOR) private processor: NavProcessor<T>\n        ) { }\n\n    public get debugNavContext(): NavContext {\n        return this.callStack.length > 0 ? this.callStack[this.callStack.length - 1] : null;\n    }\n\n    public get appData(): T {\n        return this._appData;\n    }\n\n    /*\n    Used as an entry check on each page to deal with the situation where the\n    user has jumped into the middle of a track via he browser history or something\n    */\n    public validateRoute(): void {\n\n    // TO DO: check that the route matched the navigation state\n    }\n\n    /*\n    Start a new track, if we have a current track then abandon it\n    */\n   public beginTrack(track: string, data: T, start?: string) {\n        this._appData = data;\n\n        while(this.callStack.length > 0) {\n            this.callStack.pop();\n        }\n        this.callTrack(track, start);\n    }\n\n    /*\n    Move to the next node on the track.\n    */\n    public async navigate(action: string): Promise<void> {\n        let result = Promise.resolve();\n\n        //console.log(\"NAVIGATE \" + action);\n\n        if (this.callStack.length > 0) {\n            let context = this.callStack[this.callStack.length - 1];\n\n            if(context.currentNode) {\n                if (Object.keys(context.currentNode.actions).length === 0) {\n                    // there are no actions specified, finish here\n                    this.goHome();\n\n                } else {\n                    let nextNodeName = context.currentNode.actions[action];\n                    let nextNode = context.track.nodes.find(n => n.name === nextNodeName);\n    \n                    if (nextNode) {\n                        result = this.invokeNode(nextNode, context);\n                    } else {\n                        result = Promise.reject(`Cannot find a node ${nextNodeName} for the action ${action}`);\n                    }\n                }\n            } else {\n                // TO DO: what situation does this represent?\n                // is it always an error?\n            }\n        } else {\n            // we have no more graphs to work with, bail out\n            this.goHome();\n        }\n\n        return result;\n    }\n\n    /*\n    Go directly to the page named, abandon any current track.\n    */\n   public gotoRoute(route: string[]) {\n        while(this.callStack.length > 0) {\n            this.callStack.pop();\n        }\n        this.router.navigate(route);\n    }\n\n    /*\n    Go to the home page, abandon any current track.\n    */\n    public goHome() {\n        this.gotoRoute([\"/home\"]);\n    }\n\npublic async invokeNode(node: NavTrackNode, context: _NavContext<T>): Promise<void> {\n    let result = Promise.resolve();\n    let action: string;\n\n    //console.log(\"INVOKING \" + node.name);\n\n    switch (node.type) {\n        case \"route\":\n            context.currentNode = node;\n            this.router.navigate([node.route]);\n            break;\n        case \"call\":\n            context.currentNode = node;\n            this.callTrack(node.call.track, node.call.start);\n            break;\n        case \"return\":\n            action = node.return;\n            this.callStack.pop();\n            result = this.navigate(action);\n            break;\n        case \"process\":\n            action = await this.processor.exec(node.process, this._appData);\n            context.currentNode = node;\n            result = this.navigate(action);\n            break;\n        case \"exit\":\n            this.goHome();\n            break;\n    }\n    return result;\n}\n\n    private callTrack(trackName: string, start: string) {\n\n        let track = this.tracks.find(t => t.name === trackName);\n\n        if (track) {\n            const nodeName = start || track.start;\n            let startNode = track.nodes.find(n => n.name === nodeName);\n\n            if (startNode) {\n                let context = new _NavContext();\n                context.track = track;\n                context.currentNode = startNode;\n                this.callStack.push(context);\n                this.invokeNode(startNode, context);\n            } else {\n                throw \"Navigation Error - could not find start node\";\n            }\n        } else {\n            throw \"Navigation Error - could not find track with name \" + trackName;\n        }\n}\n\n}\n","export type EditorType = \"blogger\" | \"solver\";\r\n\r\nexport class AppTrackData {\r\n    constructor(\r\n        //public editor?: EditorType,\r\n    ) {}\r\n}\r\n","import { NavTrack } from '../interfaces';\r\n\r\n/*\r\nThis track is for creating a new puzzle or amending an existing puzzle\r\n\r\nEdit refers to the role of a crossword editor, both a comissioner and a modifier of puzzles\r\n*/\r\n\r\nexport const createTrack: NavTrack = {\r\n    name: \"create\",\r\n    start: \"special\",\r\n    nodes: [\r\n        {\r\n            name: \"open\",\r\n            type: \"route\",\r\n            route: \"/open-puzzle\",\r\n            actions: {\r\n                \"continue\": \"solve\",\r\n            }\r\n        },\r\n        {\r\n            name: \"special\",\r\n            type: \"route\",\r\n            route: \"/special\",\r\n            actions: {\r\n                \"pdf\": \"pdf-start\",\r\n                \"grid\": \"grid-start\",\r\n                \"clues\": \"special-text\",\r\n            }\r\n        },\r\n        {\r\n            name: \"pdf-start\",\r\n            type: \"route\",\r\n            route: \"/special-pdf\",\r\n            actions: {\r\n                \"continue\": \"pdf-extract\",\r\n            }\r\n        },\r\n        {\r\n            name: \"grid-start\",\r\n            type: \"route\",\r\n            route: \"/grid-start\",\r\n            actions: {\r\n                \"continue\": \"edit-grid-1\",\r\n            }\r\n        },\r\n        {\r\n            name: \"edit-grid-1\",\r\n            type: \"route\",\r\n            route: \"/grid-editor\",\r\n            actions: {\r\n                \"continue\": \"clues-start\",\r\n            }\r\n        },\r\n        {\r\n            name: \"clues-start\",\r\n            type: \"route\",\r\n            route: \"/clues-start\",\r\n            actions: {\r\n                \"auto\": \"make-clues\",\r\n                \"text\": \"special-text\",\r\n            }\r\n        },\r\n        {\r\n            name: \"special-text\",\r\n            type: \"route\",\r\n            route: \"/special-text\",\r\n            actions: {\r\n                \"continue\": \"parser\",\r\n            }\r\n        },\r\n        {\r\n            name: \"pdf-extract\",\r\n            type: \"process\",\r\n            process: \"pdf-extract\",\r\n            actions: {\r\n                \"ok\": \"parser\",\r\n                \"authenticate\": \"login\",\r\n                \"error\": \"error\",\r\n            }\r\n        },\r\n        {\r\n            name: \"login\",\r\n            type: \"route\",\r\n            route: \"/special-login\",\r\n            actions: {\r\n                \"ok\": \"pdf-extract\",\r\n                \"cancel\": \"abandon\",\r\n                \"back\": \"special-pdf\",\r\n            }\r\n        },\r\n        {\r\n            name: \"parser\",\r\n            type: \"process\",\r\n            process: \"parse\",\r\n            actions: {\r\n                \"ok\": \"linker\",\r\n                \"error\": \"error\",\r\n            }\r\n        },\r\n        {\r\n            name: \"make-clues\",\r\n            type: \"process\",\r\n            process: \"make-clues\",\r\n            actions: {\r\n                \"ok\": \"linker\",\r\n            }\r\n        },\r\n        {\r\n            name: \"linker\",\r\n            type: \"process\",\r\n            process: \"link\",\r\n            actions: {\r\n                \"ok\": \"validator\",\r\n                \"error\": \"link-error\",\r\n            }\r\n        },\r\n        {\r\n            name: \"link-error\",\r\n            type: \"route\",\r\n            route: \"/link-error\",\r\n            actions: {\r\n                \"grid\": \"edit-grid-2\",\r\n                \"clues\": \"edit-clues\",\r\n            }\r\n        },\r\n        {\r\n            name: \"validator\",\r\n            type: \"process\",\r\n            process: \"validate\",\r\n            actions: {\r\n                \"ok\": \"solve\",\r\n                \"error\": \"link-error\",\r\n            }\r\n        },\r\n        {\r\n            name: \"validation-error\",\r\n            type: \"route\",\r\n            route: \"/validate-puzzle\",\r\n            actions: {\r\n                \"grid\": \"edit-grid-2\",\r\n                \"clues\": \"edit-clues\",\r\n            }\r\n        },\r\n        {\r\n            name: \"edit-grid\",\r\n            type: \"route\",\r\n            route: \"/grid-editor\",\r\n            actions: {\r\n                \"continue\": \"linker\",\r\n            }\r\n        },\r\n        {\r\n            name: \"edit-clues\",\r\n            type: \"route\",\r\n            route: \"/clues-editor\",\r\n            actions: {\r\n                \"continue\": \"linker\",\r\n            }\r\n        },\r\n        {\r\n            name: \"error\",\r\n            type: \"route\",\r\n            route: \"/nav-error\",\r\n            actions: {\r\n                \"continue\": \"abandon\"\r\n            }\r\n        },\r\n        {\r\n            name: \"solve\",\r\n            type: \"call\",\r\n            call: {\r\n                track: \"solve\"\r\n            },\r\n            actions: {}\r\n        },\r\n        {\r\n            name: \"abandon\",\r\n            type: \"exit\",\r\n            actions: {}\r\n        },\r\n    ],\r\n}\r\n","import { NavTrack } from '../interfaces';\r\n\r\nexport const publishGridTrack: NavTrack = {\r\n    name: \"publish-grid\",\r\n    start: \"publish-grid\",\r\n    nodes: [\r\n        {\r\n            name: \"publish-grid\",\r\n            type: \"route\",\r\n            route: \"/publish-grid\",\r\n            actions: {\r\n                \"continue\": \"publish\",\r\n                \"authenticate\": \"publish-login\",\r\n            }\r\n        },\r\n        {\r\n            name: \"publish-login\",\r\n            type: \"route\",\r\n            route: \"/publish-login\",\r\n            actions: {\r\n                \"continue\": \"publish\",\r\n                \"back\": \"publish-grid\",\r\n            }\r\n        },\r\n        {\r\n            name: \"publish\",\r\n            type: \"route\",\r\n            route: \"/publish\",\r\n            actions: {\r\n                \"authenticate\": \"publish-login\",\r\n                \"continue\": \"publish-complete\",\r\n                \"back\": \"publish-grid\",\r\n            }\r\n        },\r\n        {\r\n            name: \"publish-complete\",\r\n            type: \"route\",\r\n            route: \"/publish-complete\",\r\n            actions: {}\r\n        },\r\n\r\n    ],\r\n}\r\n","import { NavTrack } from '../interfaces';\r\n\r\nexport const publishPostTrack: NavTrack = {\r\n    name: \"publish-post\",\r\n    start: \"publish-options\",\r\n    nodes: [\r\n        {\r\n            name: \"exit\",\r\n            type: \"return\",\r\n            return: \"edit\",\r\n            actions: {}\r\n        },\r\n        {\r\n            name: \"publish-options\",\r\n            type: \"route\",\r\n            route: \"/publish-options\",\r\n            actions: {\r\n                \"continue\": \"publish-preamble\",\r\n                \"grid\": \"publish-grid\",\r\n                \"back\": \"exit\",\r\n            }\r\n        },\r\n        {\r\n            name: \"publish-grid\",\r\n            type: \"route\",\r\n            route: \"/publish-grid\",\r\n            actions: {\r\n                \"continue\": \"publish-preamble\",\r\n                \"back\": \"publish-options\",\r\n            }\r\n        },\r\n        {\r\n            name: \"publish-preamble\",\r\n            type: \"route\",\r\n            route: \"/publish-preamble\",\r\n            actions: {\r\n                \"continue\": \"publish\",\r\n                \"authenticate\": \"publish-login\",\r\n                \"back\": \"publish-options\",\r\n            }\r\n        },\r\n        {\r\n            name: \"publish-login\",\r\n            type: \"route\",\r\n            route: \"/publish-login\",\r\n            actions: {\r\n                \"continue\": \"publish\",\r\n                \"back\": \"publish-preamble\",\r\n            }\r\n        },\r\n        {\r\n            name: \"publish\",\r\n            type: \"route\",\r\n            route: \"/publish\",\r\n            actions: {\r\n                \"authenticate\": \"publish-login\",\r\n                \"continue\": \"publish-complete\",\r\n                \"back\": \"publish-preamble\",\r\n            }\r\n        },\r\n        {\r\n            name: \"publish-complete\",\r\n            type: \"route\",\r\n            route: \"/publish-complete\",\r\n            actions: {}\r\n        },\r\n    ],\r\n}\r\n","import { NavTrack } from '../interfaces';\r\n\r\nexport const solveTrack: NavTrack = {\r\n    name: \"solve\",\r\n    start: \"editor\",\r\n    nodes: [\r\n        {\r\n            name: \"editor\",\r\n            type: \"process\",\r\n            process: \"editor-select\",\r\n            actions: {\r\n                \"solve\": \"solver\",\r\n                \"blog\": \"blogger\",\r\n            }\r\n        },\r\n        {\r\n            name: \"solver\",\r\n            type: \"route\",\r\n            route: \"/solver\",\r\n            actions: {\r\n                \"continue\": \"publish\",\r\n                \"blog\": \"blogger\",\r\n                \"back\": \"exit\",\r\n            }\r\n        },\r\n        {\r\n            name: \"blogger\",\r\n            type: \"route\",\r\n            route: \"/blogger\",\r\n            actions: {\r\n                \"continue\": \"publish\",\r\n                \"solve\": \"solver\",\r\n                \"edit\": \"edit-clues\",\r\n                \"back\": \"exit\",\r\n            }\r\n        },\r\n        {\r\n            name: \"publish\",\r\n            type: \"call\",\r\n            call: {\r\n                track: \"publish-post\",\r\n            },\r\n            actions: {\r\n                \"edit\": \"editor\",\r\n            }\r\n        },\r\n        {\r\n            name: \"edit-clues\",\r\n            type: \"call\",\r\n            call: {\r\n                track: \"create\",\r\n                start: \"edit-clues\"\r\n            },\r\n            actions: {}\r\n        },\r\n        {\r\n            name: \"exit\",\r\n            type: \"exit\",\r\n            actions: {}\r\n        }\r\n    ],\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { NavProcessor } from './interfaces';\nimport { AppTrackData } from './tracks/app-track-data';\nimport { AppService } from '../services/app.service';\nimport { IActivePuzzle, IPuzzleManager } from 'src/app/services/puzzle-management.service';\nimport { ParseData } from 'src/app/services/parsing/text/parse-data';\nimport { AddClues } from 'src/app/services/modifiers/add-clues';\nimport { LinkCluesToGrid } from 'src/app/services/modifiers/link-clues-to-grid';\nimport { ParseText } from 'src/app/services/modifiers/parse-text';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UIProcessService implements NavProcessor<AppTrackData> {\n    \n    constructor(\n        private appService: AppService,\n        private activePuzzle: IActivePuzzle,\n        private puzzleManager: IPuzzleManager,\n        private textParser: ParseText,\n    ) {}\n\n    async exec(processName: string, appData: AppTrackData): Promise<string> {\n        let action: Promise<string>;\n\n        switch (processName) {\n            case \"make-clues\":\n                action = Promise.resolve(\"ok\");\n                break;\n\n            case \"pdf-extract\":\n                action = this.puzzleManager.loadPuzzleFromPdf(this.appService.openPuzzleParameters.sourceDataB64);\n                break; \n\n            case \"parse\":\n                action = this.parse();\n                break;\n\n            case \"link\":\n                try {\n                    this.activePuzzle.update(new LinkCluesToGrid());\n                    action = Promise.resolve(\"ok\");\n                } catch (error) {\n                    action = Promise.resolve(\"error\");\n                }\n                break;\n\n            case \"validate\":\n                action = this.validate();\n                break;\n\n            case \"editor-select\":\n                action = this.activePuzzle.puzzle.linked ?\n                    Promise.resolve(\"solve\") :\n                    Promise.resolve(\"blog\");\n                    break;\n\n            default:\n                action = Promise.reject(\"Could not find navivgation process with name \" + processName);\n        }\n\n        return action;\n    }\n\n    private parse(): Promise<string> {\n        let action = \"error\";\n\n        try {\n            this.activePuzzle.update(this.textParser);\n            action = \"ok\";\n        } catch(error) {\n            action = \"error\";\n            this.appService.setAlert(\"danger\", \"Parsing Error :\" + error);\n        }\n\n        return Promise.resolve(action);\n    }\n\n    private validate(): Promise<string> {\n        return Promise.resolve(\"ok\");\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Pipe({ name: 'htmlAsIs', pure: false })\r\nexport class HtmlAsIsPipe implements PipeTransform {\r\n    constructor(private sanitizer: DomSanitizer) {\r\n    }\r\n\r\n    transform(content) {\r\n        return this.sanitizer.bypassSecurityTrustHtml(content);\r\n    }\r\n}","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'provider', pure: false })\r\nexport class ProviderPipe implements PipeTransform {\r\n    constructor() {\r\n    }\r\n\r\n    transform(content: string) {\r\n        let result: string = content;\r\n\r\n        switch (content) {\r\n            case \"ft\":\r\n            case \"ftb\":\r\n                result = \"Financial Times\";\r\n                break;\r\n            case \"cryptic\":\r\n                result = \"Guardian\";\r\n                break;\r\n            case \"prize\":\r\n                result = \"Guardian Prize\";\r\n                break;\r\n            case \"quiptic\":\r\n                result = \"Quiptic\";\r\n                break;\r\n            case \"independent\":\r\n                result = \"Independent\";\r\n                break;\r\n            case \"ios\":\r\n                result = \"Independent on Sunday\";\r\n                break;\r\n            case \"everyman\":\r\n                result = \"Everyman\";\r\n                break;\r\n            case \"azed\":\r\n                result = \"Azed\";\r\n                break;\r\n        };\r\n\r\n        return result;\r\n    }\r\n}","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'wordpressId'\n})\nexport class WordpressIdPipe implements PipeTransform {\n\n    transform(content: string) {\n        return content ? \"Published\" : \"\";\n    }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VpL3B1enpsZS1lZGl0aW5nL2FyY2hpdmUvYXJjaGl2ZS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport moment from \"moment\";\r\n\r\nimport { ArchiveItem } from 'src/app/model/archive-item';\r\nimport { AppStatus, AppService, OpenPuzzleParamters } from 'src/app/ui/services/app.service';\r\nimport { ArchiveService } from 'src/app/services/archive-source.service';\r\nimport { Archive } from 'src/app/model/archive';\r\nimport { PuzzleProvider } from 'src/app/model/interfaces';\r\nimport { NavService } from '../../navigation/nav.service';\r\nimport { AppTrackData } from '../../navigation/tracks/app-track-data';\r\n\r\n@Component({\r\n    selector: 'app-archive',\r\n    templateUrl: './archive.component.html',\r\n    styleUrls: ['./archive.component.css']\r\n})\r\nexport class ArchiveComponent implements OnInit, OnDestroy {\r\n    public appStatus: AppStatus;\r\n    public archive: Archive;\r\n    public provider: PuzzleProvider;\r\n    public form: FormGroup;\r\n\r\n    private subs: Subscription[] = [];\r\n\r\n    constructor(\r\n        private navService: NavService<AppTrackData>,\r\n        private appService: AppService,\r\n        private archiveService: ArchiveService,\r\n        private activeRoute: ActivatedRoute,\r\n        private formBuilder: FormBuilder,\r\n\r\n    ) { }\r\n\r\n    public ngOnInit() {\r\n\r\n        this.form = this.formBuilder.group({\r\n            date: [\"\", Validators.required], \r\n        });\r\n\r\n        this.appService.clearAlerts();\r\n\r\n        this.subs.push(this.appService.getObservable().subscribe(appStatus => this.appStatus = appStatus));\r\n\r\n        this.subs.push(this.archiveService.observe().subscribe(archive => {\r\n            this.archive = archive;\r\n        }));\r\n\r\n        this.subs.push(this.activeRoute.params.subscribe((params) => {\r\n\r\n            this.provider = params.provider;\r\n            this.appService.setBusy();\r\n\r\n            this.archiveService.getList(params.provider)\r\n            .catch((error) => {\r\n                this.appService.setAlert(\"danger\", error);\r\n            })\r\n            .finally(() => this.appService.clearBusy());\r\n        }));\r\n    }\r\n\r\n    public ngOnDestroy() {\r\n        this.subs.forEach(sub => sub.unsubscribe());\r\n    }\r\n\r\n    public get showDate(): boolean {\r\n        return this.provider &&\r\n            (this.provider === 'independent' || this.provider === 'ios');\r\n    }\r\n\r\n    public openPuzzle(item: ArchiveItem) {\r\n        this.appService.clear();\r\n        \r\n        this.appService.setOpenPuzzleParams({\r\n            provider: item.provider,\r\n            sourceUrl: item.url,\r\n            serialNumber: item.serialNumber,\r\n            date: item.date,\r\n            setter: item.setter});\r\n\r\n        this.appService.clearBusy();\r\n        this.appService.clearAlerts();\r\n        \r\n        this.navService.beginTrack(\"create\", new AppTrackData(), \"open\");\r\n    }\r\n\r\n    public get latest(): ArchiveItem {\r\n        let result = null;\r\n\r\n        if (this.archive && this.provider) {\r\n            const index = this.archive.getIndex(this.provider);\r\n            if (index && index.items.length > 0) {\r\n                result = index.items[0]; \r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    public get archiveItems(): ReadonlyArray<ArchiveItem> {\r\n        let items: ReadonlyArray<ArchiveItem> = [];\r\n\r\n        if (this.archive && this.provider) {\r\n            const index = this.archive.getIndex(this.provider);\r\n            if (index && index.items.length > 1) {\r\n                items = index.items.slice(1) as ReadonlyArray<ArchiveItem>; \r\n            }\r\n        }\r\n\r\n        return items;\r\n    }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VpL3B1enpsZS1lZGl0aW5nL2NsdWVzLWVkaXRvci9jbHVlcy1lZGl0b3IuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit, HostListener, OnDestroy } from '@angular/core';\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\nimport { ClueEditorComponent } from '../../components/clue-editor/clue-editor.component';\nimport { Subscription } from 'rxjs';\nimport { Clue } from 'src/app/model/clue';\nimport { GridCell } from 'src/app/model/grid-cell';\nimport { Puzzle } from 'src/app/model/puzzle';\nimport { IActivePuzzle } from 'src/app/services/puzzle-management.service';\nimport { SelectClueByCell } from 'src/app/services/modifiers/select-clue-by-cell';\nimport { Clear } from 'src/app/services/modifiers/clear';\nimport { NavService } from '../../navigation/nav.service';\nimport { AppTrackData } from '../../navigation/tracks/app-track-data';\n\n@Component({\n    selector: 'app-clues-editor',\n    templateUrl: './clues-editor.component.html',\n    styleUrls: ['./clues-editor.component.css']\n})\nexport class CluesEditorComponent implements OnInit, OnDestroy {\n    private modalRef: NgbModalRef = null;\n    public puzzle: Puzzle = null;\n    private subs: Subscription[] = [];\n\n    constructor(\n        private navService: NavService<AppTrackData>,\n        private activePuzzle: IActivePuzzle,\n        private modalService: NgbModal,\n    ) { }\n\n    ngOnInit() {\n\n        if (!this.activePuzzle.hasPuzzle) {\n            this.navService.goHome();\n        } else {\n            this.subs.push(\n                this.activePuzzle.observe().subscribe(\n                    (puzzle) => {\n                        if (puzzle) {\n                            if (!puzzle.info.solveable) {\n                                this.navService.goHome();\n                            }\n                            this.puzzle = puzzle;\n                            //console.log(\"CLUES_EDITOR \" + JSON.stringify(puzzle));\n                        }\n                    }\n                ));\n        }\n    }\n\n    ngOnDestroy() {\n        this.subs.forEach(sub => sub.unsubscribe());\n    }\n\n    onContinue() {\n        this.activePuzzle.update(new Clear());\n        this.navService.navigate(\"continue\");\n    }\n\n    onClueClick(clue: Clue) {\n        //this.openEditor(clue, null);\n    }\n\n    // private openEditor(clue, starterText: string) {\n    //     if (!clue.redirect) {\n    //         setTimeout(\n    //             () => {\n    //                 this.modalRef = this.modalService.open(ClueEditorComponent, { backdrop: \"static\" });\n    //                 this.modalRef.componentInstance.clueId = clue.id;\n    //                 this.modalRef.componentInstance.starterText = starterText;\n    //                 this.subs.push(this.modalRef.componentInstance.close.subscribe((result) => {\n    //                     this.modalRef.close();\n    //                     this.modalRef = null;\n    //                 }));\n    //                 // this.modalRef.result.finally(() => this.modalRef = null);\n    //             },\n    //             0\n    //         );\n    //     }\n    // }\n}\n\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VpL3B1enpsZS1lZGl0aW5nL2NsdWVzLXN0YXJ0L2NsdWVzLXN0YXJ0LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-clues-start',\n  templateUrl: './clues-start.component.html',\n  styleUrls: ['./clues-start.component.css']\n})\nexport class CluesStartComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VpL3B1enpsZS1lZGl0aW5nL2NyZWF0ZS1wdXp6bGUvY3JlYXRlLXB1enpsZS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { NavService } from '../../navigation/nav.service';\nimport { AppTrackData } from '../../navigation/tracks/app-track-data';\nimport { AppService } from '../../services/app.service';\nimport { IActivePuzzle, IPuzzleManager } from 'src/app/services/puzzle-management.service';\nimport { TextParsingService } from 'src/app/services/parsing/text/text-parsing-service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { UpdateInfo } from 'src/app/services/modifiers/update-info';\n\n@Component({\n    selector: 'app-create-puzzle',\n    templateUrl: './create-puzzle.component.html',\n    styleUrls: ['./create-puzzle.component.css']\n})\nexport class CreatePuzzleComponent implements OnInit {\n    public form: FormGroup;\n\n    constructor(\n        private navService: NavService<AppTrackData>,\n        private puzzleManager: IPuzzleManager,\n        private formBuilder: FormBuilder,\n\n    ) { }\n\n    ngOnInit() {\n        this.form = this.formBuilder.group({\n            title: [\"\", [Validators.required]],\n        });\n    }\n\n    public onContinue() {\n        this.puzzleManager.newPuzzle(new UpdateInfo({ title: this.form.value.title }));\n        this.navService.navigate(\"continue\");\n    }\n\n    public onCancel() {\n        this.navService.goHome();\n    }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VpL3B1enpsZS1lZGl0aW5nL2dyaWQtZWRpdG9yL2dyaWQtZWRpdG9yLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { GridCell } from 'src/app/model/grid-cell';\nimport { Puzzle } from 'src/app/model/puzzle';\nimport { IActivePuzzle } from 'src/app/services/puzzle-management.service';\nimport { Clear } from 'src/app/services/modifiers/clear';\nimport { UpdateCell } from 'src/app/services/modifiers/update-cell';\nimport { BarClickEvent, GridTextEvent, GridNavigationEvent, GridComponent } from '../../components/grid/grid.component';\nimport { RenumberGid } from 'src/app/services/modifiers/renumber-grid';\nimport { NgbTabChangeEvent } from '@ng-bootstrap/ng-bootstrap';\nimport { UpdateGridProperties } from 'src/app/services/modifiers/updare-grid-properties';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { UpdateInfo } from 'src/app/services/modifiers/update-info';\nimport { GridControlOptions, GridEditors } from '../../common';\nimport { GridEditor } from '../../services/grid-editors/grid-editor';\nimport { GridEditorService } from '../../services/grid-editors/grid-editor.service';\nimport { ClearShading } from 'src/app/services/modifiers/clear-shading';\nimport { AppService } from '../../services/app.service';\nimport { DownloadInstance } from '../../components/download-button/download-button.component';\nimport { NavService } from '../../navigation/nav.service';\nimport { AppTrackData } from '../../navigation/tracks/app-track-data';\n\ntype ToolType = \"grid\" | \"text\" | \"color\" | \"properties\";\n\n@Component({\n    selector: 'app-grid-editor',\n    templateUrl: './grid-editor.component.html',\n    styleUrls: ['./grid-editor.component.css']\n})\nexport class GridEditorComponent implements OnInit, OnDestroy {\n    public puzzle: Puzzle = null;\n    public form: FormGroup;\n    public symmetrical: boolean = true;\n    public options: GridControlOptions = { editor: GridEditors.cellEditor, showShading: false };\n    public gridEditors = GridEditors;\n    public shadingColor: string;\n\n    @ViewChild(GridComponent, { static: false }) \n    public gridControl: GridComponent;\n\n    private subs: Subscription[] = [];\n    private tool: ToolType = \"grid\";\n\n    private gridEditor: GridEditor;\n\n    constructor(\n        private navService: NavService<AppTrackData>,\n        private appService: AppService,\n        private activePuzzle: IActivePuzzle,\n        private formBuilder: FormBuilder,\n        private gridEditorService: GridEditorService,\n    ) { }\n\n    public ngOnInit() {\n\n        this.form = this.formBuilder.group({\n            title: [\"\", Validators.required],\n        });\n\n        // TO DO: record preferences for next time\n        this.shadingColor = \"#ffebcd\";\n\n        this.gridEditor = this.gridEditorService.getEditor(this.options.editor);\n\n        if (!this.activePuzzle.hasPuzzle) {\n            this.navService.goHome();\n        } else {\n            this.subs.push(\n                this.activePuzzle.observe().subscribe(\n                    (puzzle) => {\n                        if (!puzzle.info.gridable) {\n                            this.navService.goHome();\n                        }\n                        this.form.patchValue({title: puzzle.info.title});\n                        this.symmetrical = puzzle.grid.properties.symmetrical;\n                        this.puzzle = puzzle;\n                    }\n                ));\n        }\n    }\n\n    public ngOnDestroy() {\n        this.subs.forEach(sub => sub.unsubscribe());\n    }\n\n    public get barred(): boolean {\n        let result = false;\n\n        if (this.puzzle && this.puzzle.grid.properties.style === \"barred\") {\n            result = true;\n        }\n        return result;\n    }\n\n    // @HostListener('document:keypress', ['$event'])\n    // handleKeyboardEvent(event: KeyboardEvent) {\n    //     if (this.puzzle && !this.modalRef) {\n    //         if (event.key === \"Enter\") {\n    //             event.stopPropagation();\n    //             let clue = this.puzzle.getSelectedClue();\n    //             if (clue) {\n    //                 this.openEditor(clue, null);\n    //             }\n    //         } else if (/[a-zA-Z]/.test(event.key)) {\n    //             event.stopPropagation();\n    //             let clue = this.puzzle.getSelectedClue();\n    //             if (clue) {\n    //                 this.openEditor(clue, event.key);\n    //             }\n    //         }\n    //     }\n    // }\n\n    public onTabChange(event: NgbTabChangeEvent) {\n        this.appService.clear();\n        this.tool = event.nextId as ToolType;\n        this.options.showShading = event.nextId === \"color\";\n        this.activePuzzle.update(new Clear());\n    }\n\n    public onContinue() {\n        this.appService.clear();\n        this.activePuzzle.update(new Clear());\n        this.navService.navigate(\"continue\");\n    }\n\n    public onClose() {\n        this.activePuzzle.update(new Clear());\n        this.navService.goHome();\n    }\n\n    public onSubmit() {\n        this.appService.clear();\n        this.activePuzzle.update(new UpdateInfo({\n            title: this.form.value.title\n        }));\n    }\n\n    public onSymmetrical(val: boolean) {\n        this.appService.clear();\n        this.activePuzzle.update(new UpdateGridProperties({\n            symmetrical: val,\n        }));\n    }\n\n    public onCellClick(cell: GridCell) {\n        this.appService.clear();\n        switch(this.tool) {\n            case \"grid\":\n                const symCell = this.getSymCell(cell);\n                if (this.puzzle.grid.properties.style === \"standard\") {\n                    this.activePuzzle.update(new UpdateCell(cell.id, { light: !cell.light }));\n                    if (symCell) {\n                        this.activePuzzle.update(new UpdateCell(symCell.id, { light: !cell.light }));\n                    }\n                    this.activePuzzle.update(new RenumberGid());\n                }\n                break;\n\n            case \"text\":\n                if (cell.light) {\n                    if (cell.highlight) {\n                        // cell is already part of a text edit\n                        let updates = this.gridEditor.onGridNavigation(this.puzzle, \"absolute\", { x: cell.x, y: cell.y});\n                        updates.forEach(update => this.activePuzzle.update(update));\n                    } else {\n                        // this is a new edit\n                        let updates = this.gridEditor.startEdit(this.puzzle, cell);\n                        updates.forEach(update => this.activePuzzle.update(update));\n                    }\n\n                } else {\n                    this.activePuzzle.update(new Clear());\n                }\n                break;\n                \n            case \"color\":\n                let color: string = cell.shading && cell.shading === this.shadingColor ? null : this.shadingColor;\n                this.activePuzzle.update(new UpdateCell(cell.id, { shading: color }));\n                break;\n                        \n            default:\n                // do nothing\n                break;\n        }\n    }\n\n    public onBarClick(event: BarClickEvent) {\n        this.appService.clear();\n\n        if (this.tool === \"grid\" && this.puzzle.grid.properties.style === \"barred\") {\n            if (event.bar === \"rightBar\") {\n                this.activePuzzle.update(new UpdateCell(event.cell.id, { rightBar: !event.cell.rightBar }));\n            } else {\n                this.activePuzzle.update(new UpdateCell(event.cell.id, { bottomBar: !event.cell.bottomBar }));\n            }\n            this.activePuzzle.update(new RenumberGid());\n        }\n    }\n\n    public onOptionChange() {\n        this.appService.clear();\n\n        this.activePuzzle.update(new Clear());\n        this.gridEditor = this.gridEditorService.getEditor(this.options.editor);\n    }\n\n    public onGridText(event: GridTextEvent) {\n        this.appService.clear();\n\n        let updates = this.gridEditor.onGridText(this.puzzle, event.text, event.writingDirection);\n        updates.forEach(update => this.activePuzzle.update(update));\n    }\n\n    public onGridNavigation(event: GridNavigationEvent) {\n        this.appService.clear();\n\n        let updates = this.gridEditor.onGridNavigation(this.puzzle, event.navigation);\n        updates.forEach(update => this.activePuzzle.update(update));\n    }\n\n    public onClearAll() {\n        this.appService.clear();\n\n        this.activePuzzle.update(new ClearShading());\n    }\n\n    public onDownload(instance: DownloadInstance) {\n        this.appService.clear();\n        instance.download(\"grid-image.png\", this.gridControl.getDataUrl());\n    }\n\n    private getSymCell(cell: GridCell): GridCell {\n        let result: GridCell = null;\n\n        if (this.puzzle.grid.properties.symmetrical) {\n            // rotational symmetry\n\n            // TO DO: allow for other types of symmetry\n            // use matricies and transformations?\n\n            result = this.puzzle.grid.cellAt(\n                this.puzzle.grid.properties.size.across - 1 - cell.x, \n                this.puzzle.grid.properties.size.down -  1- cell.y, \n            );\n        }\n\n        return result;\n    }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VpL3B1enpsZS1lZGl0aW5nL2dyaWQtc3RhcnQvZ3JpZC1zdGFydC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Puzzle } from 'src/app/model/puzzle';\nimport { GridCellM } from 'src/app/services/modifiers/mutable-model/grid-cell-m';\nimport { IActivePuzzle } from 'src/app/services/puzzle-management.service';\nimport { NavService } from '../../navigation/nav.service';\nimport { AppTrackData } from '../../navigation/tracks/app-track-data';\nimport { Subscription } from 'rxjs';\nimport { AddGrid } from 'src/app/services/modifiers/add-grid';\nimport { Grid } from 'src/app/model/grid';\nimport { GridProperties } from 'src/app/model/grid-properties';\n\n@Component({\n    selector: 'app-grid-start',\n    templateUrl: './grid-start.component.html',\n    styleUrls: ['./grid-start.component.css']\n})\nexport class GridStartComponent implements OnInit, OnDestroy {\n    public puzzle: Puzzle;\n\n    private subs: Subscription[] = [];\n\n    constructor(\n        private activePuzzle: IActivePuzzle,\n        private navService: NavService<AppTrackData>,\n    ) { }\n\n    ngOnInit() {\n        this.subs.push(\n            this.activePuzzle.observe().subscribe(\n                (puzzle) => {\n                    this.puzzle = puzzle;\n                }\n        ));\n    }\n\n    public ngOnDestroy(){\n        this.subs.forEach(sub => sub.unsubscribe());\n    }\n\n    public onClose(result: GridProperties) {\n        if (result) {\n            let grid = this.createGrid(result);\n            this.activePuzzle.update(new AddGrid({ grid }));\n            this.navService.navigate(\"continue\");\n        } else {\n            this.navService.goHome();\n        }\n    }\n\n    private createGrid(params: GridProperties): Grid {\n        let cells: GridCellM[] = [];\n        const cellsAcross = params.size.across;\n        const cellsDown = params.size.down;\n\n        for(let x = 0; x < cellsAcross; x++) {\n            for(let y = 0; y < cellsDown; y++) {\n                let cell: GridCellM = {\n                    id: `cell-${x}-${y}`,\n                    x,\n                    y,\n                    caption: \"\",\n                    content: \"\",\n                    light: true,\n                    rightBar: false,\n                    bottomBar: false,\n                    highlight: false,\n                    shading: null,\n                    edit: false,\n                };\n                cells.push(cell);\n            }\n        }\n\n        return new Grid({\n            properties: params,\n            cells: cells,\n        });\n    }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VpL3B1enpsZS1lZGl0aW5nL2luZHkvaW5keS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport moment from \"moment\";\r\nimport { AppStatus, AppService, OpenPuzzleParamters } from 'src/app/ui/services/app.service';\r\nimport { PuzzleProvider } from 'src/app/model/interfaces';\r\nimport { NavService } from '../../navigation/nav.service';\r\nimport { AppTrackData } from '../../navigation/tracks/app-track-data';\r\n\r\nconst Sunday = 0;\r\n\r\n@Component({\r\n    selector: 'app-indy',\r\n    templateUrl: './indy.component.html',\r\n    styleUrls: ['./indy.component.css']\r\n  })\r\n  export class IndyComponent implements OnInit, OnDestroy {\r\n    public appStatus: AppStatus;\r\n    public form: FormGroup;\r\n    public provider: PuzzleProvider;\r\n    public today: Date;\r\n\r\n    private subs: Subscription[] = [];\r\n\r\n    constructor(\r\n        private navService: NavService<AppTrackData>,\r\n        private appService: AppService,\r\n        private formBuilder: FormBuilder,\r\n    ) {\r\n        this.provider = moment().day() === Sunday ? \"ios\" : \"independent\";\r\n        this.today = new Date();\r\n    }\r\n\r\n    public ngOnInit() {\r\n\r\n        this.form = this.formBuilder.group({\r\n            date: [\"\", Validators.required], \r\n        });\r\n\r\n        this.appService.clearAlerts();\r\n        this.subs.push(this.appService.getObservable().subscribe(appStatus => this.appStatus = appStatus));\r\n    }\r\n\r\n    public ngOnDestroy() {\r\n        this.subs.forEach(sub => sub.unsubscribe());\r\n    }\r\n\r\n    public openLatest() {\r\n        this.openPuzzle(this.provider, this.today);\r\n    }\r\n\r\n    public openPuzzleByDate() {\r\n        const date = moment(this.form.value.date).toDate();\r\n        const provider = date.getDay() === Sunday ? \"ios\" : \"independent\";\r\n\r\n        this.openPuzzle(provider, date);\r\n    }\r\n\r\n    private openPuzzle(provider: PuzzleProvider, date: Date) {\r\n        this.appService.clear();\r\n        this.appService.setOpenPuzzleParams({ provider, date});\r\n        this.navService.beginTrack(\"create\", new AppTrackData(), \"open\");\r\n    }\r\n}\r\n\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VpL3B1enpsZS1lZGl0aW5nL2xpbmstZXJyb3IvbGluay1lcnJvci5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-link-error',\n  templateUrl: './link-error.component.html',\n  styleUrls: ['./link-error.component.css']\n})\nexport class LinkErrorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VpL3B1enpsZS1lZGl0aW5nL25hdi1lcnJvci9uYXYtZXJyb3IuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav-error',\n  templateUrl: './nav-error.component.html',\n  styleUrls: ['./nav-error.component.css']\n})\nexport class NavErrorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VpL3B1enpsZS1lZGl0aW5nL29wZW4tcHV6emxlL29wZW4tcHV6emxlLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { AppService, OpenPuzzleParamters } from '../../services/app.service';\r\nimport { AuthService, Credentials } from 'src/app/services/auth.service';\r\nimport { PuzzleManagementService } from 'src/app/services/puzzle-management.service';\r\nimport { ApiSymbols } from 'src/app/services/common';\r\nimport { UIResult } from '../../common';\r\nimport { NavService } from '../../navigation/nav.service';\r\nimport { AppTrackData, EditorType } from '../../navigation/tracks/app-track-data';\r\n\r\n@Component({\r\n  selector: 'app-open-puzzle',\r\n  templateUrl: './open-puzzle.component.html',\r\n  styleUrls: ['./open-puzzle.component.css']\r\n})\r\nexport class OpenPuzzleComponent implements OnInit, OnDestroy {\r\n    public credentials: Credentials;\r\n\r\n    private subs: Subscription[] = [];\r\n\r\n    constructor(\r\n        private navService: NavService<AppTrackData>,\r\n        private appService: AppService,\r\n        private authService: AuthService,\r\n        private puzzleManagementService: PuzzleManagementService,\r\n        ) { }\r\n\r\n    public ngOnInit() {\r\n        this.appService.clear();\r\n\r\n        let params = this.appService.openPuzzleParameters;\r\n\r\n        if (!params) {\r\n            this.navService.goHome();\r\n        }\r\n        \r\n        this.subs.push(this.authService.observe().subscribe(credentials => {\r\n            this.credentials = credentials;\r\n            if (credentials.authenticated) {\r\n                this.openPuzzle(params);\r\n            }\r\n        }));\r\n    }\r\n\r\n    public onLoginClose(result: UIResult) {\r\n        if (result !== \"ok\") {\r\n            this.navService.goHome();\r\n        }\r\n    }\r\n\r\n    public ngOnDestroy() {\r\n        this.subs.forEach(sub => sub.unsubscribe());\r\n    }\r\n\r\n    private openPuzzle(params: OpenPuzzleParamters) {\r\n        this.appService.setBusy();\r\n\r\n        this.puzzleManagementService.openArchivePuzzle(params).then((puzzle) => {\r\n            this.appService.clear();\r\n            this.appService.clearOpenPuzzleParams();\r\n\r\n            this.navService.navigate(\"continue\");\r\n        })\r\n        .catch((error) => {\r\n            if (error === ApiSymbols.AuthorizationFailure) {\r\n                this.appService.clear();\r\n                this.authService.clearCredentials();\r\n                this.appService.setAlert(\"danger\", \"Username or password is incorrect.  Please try to login again.\");\r\n            } else {\r\n                this.appService.clear();\r\n                this.appService.setAlert(\"danger\", error && error.message ? error.message : error.toString());\r\n            }\r\n        });\r\n    }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VpL3B1enpsZS1lZGl0aW5nL3NwZWNpYWwtbG9naW4vc3BlY2lhbC1sb2dpbi5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { AppStatus, AppService } from '../../services/app.service';\nimport { AppSettings } from 'src/app/services/common';\nimport { Subscription } from 'rxjs';\nimport { NavService } from '../../navigation/nav.service';\nimport { AppTrackData } from '../../navigation/tracks/app-track-data';\nimport { AppSettingsService } from 'src/app/services/app-settings.service';\nimport { UIResult } from '../../common';\n\n@Component({\n  selector: 'app-special-login',\n  templateUrl: './special-login.component.html',\n  styleUrls: ['./special-login.component.css']\n})\nexport class SpecialLoginComponent implements OnInit {\n    public preview: string = \"\";\n    public appStatus: AppStatus;\n    public settings: AppSettings;\n\n    private subs: Subscription[] = [];\n\n    constructor(\n        private navService: NavService<AppTrackData>,\n        private appService: AppService,\n        public settingsService: AppSettingsService,\n        ) { \n            this.settings = this.settingsService.settings;\n        }\n\n    public ngOnInit() {\n        this.subs.push(this.appService.getObservable().subscribe(appStatus => this.appStatus = appStatus));\n    }\n\n    public ngOnDestroy() {\n        this.subs.forEach(sub => sub.unsubscribe());\n    }\n\n    public onLoginClose(result: UIResult) {\n        this.navService.navigate(result);\n    }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VpL3B1enpsZS1lZGl0aW5nL3NwZWNpYWwtcGRmL3NwZWNpYWwtcGRmLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { AppService, OpenPuzzleParamters } from '../../services/app.service';\r\nimport { NavService } from '../../navigation/nav.service';\r\nimport { AppTrackData } from '../../navigation/tracks/app-track-data';\r\n\r\n@Component({\r\n    selector: 'app-special-pdf',\r\n    templateUrl: './special-pdf.component.html',\r\n    styleUrls: ['./special-pdf.component.css']\r\n})\r\nexport class SpecialPdfComponent implements OnInit {\r\n    public form: FormGroup;\r\n\r\n    private content: string = null;\r\n\r\n    constructor(\r\n        private navService: NavService<AppTrackData>,\r\n        private appService: AppService,\r\n    ) { }\r\n\r\n    public ngOnInit() {\r\n        this.appService.clear();\r\n    }\r\n\r\n    public onFileChange(files: any[]) {\r\n        this.appService.clear();\r\n\r\n        if (files && files.length) {\r\n            let mimeType = files[0].type;\r\n\r\n            if (mimeType.match(/pdf\\/*/) === null) {\r\n                this.appService.setAlert(\"danger\", \"Only pdf files are supported.\");\r\n\r\n            } else {\r\n                let reader = new FileReader();\r\n                reader.readAsBinaryString(files[0]);\r\n\r\n                reader.onload = () => {\r\n                    this.content = btoa(reader.result as string);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public onOpenPdf() {\r\n        this.appService.clear();\r\n        this.appService.setOpenPuzzleParams({ provider: \"pdf\", sourceDataB64: this.content })\r\n        this.navService.navigate(\"continue\");\r\n    }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VpL3B1enpsZS1lZGl0aW5nL3NwZWNpYWwtdGV4dC9zcGVjaWFsLXRleHQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { AppService } from '../../services/app.service';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { TextParsingService } from 'src/app/services/parsing/text/text-parsing-service';\r\nimport { ParseData } from 'src/app/services/parsing/text/parse-data';\r\nimport { IParseContext } from 'src/app/services/parsing/text/text-parsing-context';\r\nimport { Puzzle } from 'src/app/model/puzzle';\r\nimport { IPuzzleManager, IActivePuzzle } from 'src/app/services/puzzle-management.service';\r\nimport { NavService } from '../../navigation/nav.service';\r\nimport { AppTrackData } from '../../navigation/tracks/app-track-data';\r\nimport { Subscription } from 'rxjs';\r\nimport { AddClues } from 'src/app/services/modifiers/add-clues';\r\nimport { UpdateInfo } from 'src/app/services/modifiers/update-info';\r\n\r\nconst defaultText: string = \"ACROSS\\n1 This is an across clue (5)\\nDOWN\\n2 This is a down clue (7)\";\r\n\r\n@Component({\r\n    selector: 'app-special-text',\r\n    templateUrl: './special-text.component.html',\r\n    styleUrls: ['./special-text.component.css']\r\n})\r\nexport class SpecialTextComponent implements OnInit, OnDestroy {\r\n    public puzzle: Puzzle = null;\r\n    private subs: Subscription[] = [];\r\n    public form: FormGroup;\r\n    public parseResult: IParseContext = null;\r\n\r\n    constructor(\r\n        private navService: NavService<AppTrackData>,\r\n        private appService: AppService,\r\n        private activePuzzle: IActivePuzzle,\r\n        private textParsingService: TextParsingService,\r\n        private puzzleManager: IPuzzleManager,\r\n        private fb: FormBuilder,\r\n    ) { }\r\n\r\n    public ngOnInit() {\r\n        this.form = this.fb.group({\r\n            title: [\"\", Validators.required],\r\n            text: [defaultText, Validators.required],\r\n        });\r\n\r\n        this.subs.push(\r\n            this.activePuzzle.observe().subscribe(\r\n                (puzzle) => {\r\n                    this.puzzle = puzzle;\r\n                    if (puzzle) {\r\n                        this.form.patchValue({ \r\n                            title: puzzle.info.title,\r\n                            text: puzzle.info.source\r\n                        });\r\n                    }\r\n                }\r\n        ));\r\n\r\n    }\r\n\r\n    public ngOnDestroy(){\r\n        this.subs.forEach(sub => sub.unsubscribe());\r\n    }\r\n\r\n    public onParse() {\r\n        this.appService.clear();\r\n\r\n        try {\r\n            this.activePuzzle.update(new UpdateInfo({ source: this.form.value.text }))\r\n            this.parseResult = this.parse(this.form.value.text);\r\n\r\n            if (!this.parseResult.error) {\r\n                //patch puzzle\r\n                this.activePuzzle.update(new AddClues({ clues: this.parseResult.clues }));\r\n\r\n                this.navService.navigate(\"blog\");\r\n            } else {\r\n                this.appService.setAlert(\"danger\", \"Parsing Error :\" + this.parseResult.error.message);\r\n            }\r\n        } catch(error) {\r\n            this.appService.setAlert(\"danger\", \"ERROR :\" + error.message)\r\n        }\r\n    }\r\n\r\n    public onCancel() {\r\n        this.navService.goHome();\r\n    }\r\n\r\n    public onAmend() {\r\n        this.parseResult = null;\r\n    }\r\n\r\n    public onKeyDown(event: KeyboardEvent) {\r\n        // to stop errors from LastPass and other browser add-ons that attach listeners to this control\r\n        event.stopPropagation();\r\n    }\r\n\r\n    private parse(text: string): IParseContext {\r\n        let parseData = new ParseData();\r\n        parseData.clueDataType = \"text\";\r\n        parseData.rawData = text;\r\n\r\n        let parser = this.textParsingService.parser(parseData, null);\r\n        let context = parser.next();\r\n\r\n        while(!context.done) {\r\n            context = parser.next();\r\n        }\r\n    \r\n        return context.value as IParseContext;\r\n    }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VpL3B1enpsZS1lZGl0aW5nL3NwZWNpYWwvc3BlY2lhbC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { NavService } from '../../navigation/nav.service';\nimport { AppTrackData } from '../../navigation/tracks/app-track-data';\nimport { IPuzzleManager } from 'src/app/services/puzzle-management.service';\n\n@Component({\n    selector: 'app-special',\n    templateUrl: './special.component.html',\n    styleUrls: ['./special.component.css']\n})\nexport class SpecialComponent implements OnInit {\n\n    constructor(\n        private puzzleManager: IPuzzleManager,\n        private navService: NavService<AppTrackData>,\n    ) { }\n\n    ngOnInit() {\n    }\n\n    public onPdf() {\n        this.navService.navigate(\"pdf\");\n    }\n\n    public onText() {\n        this.puzzleManager.newPuzzle();\n        this.navService.navigate(\"clues\");\n    }\n\n    public onGridText() {\n        this.puzzleManager.newPuzzle();\n        this.navService.navigate(\"grid\");\n    }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VpL3B1enpsZS1lZGl0aW5nL3ZhbGlkYXRlLXB1enpsZS92YWxpZGF0ZS1wdXp6bGUuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-validate-puzzle',\n    templateUrl: './validate-puzzle.component.html',\n    styleUrls: ['./validate-puzzle.component.css']\n})\nexport class ValidatePuzzleComponent implements OnInit {\n\n    constructor() { }\n\n    ngOnInit() {\n    }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VpL3B1enpsZS1wdWJsaXNoaW5nL3B1Ymxpc2gtY29tcGxldGUvcHVibGlzaC1jb21wbGV0ZS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit, OnDestroy, Inject } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { PublicationService } from 'src/app/services/publication.service';\r\nimport { IActivePuzzle } from 'src/app/services/puzzle-management.service';\r\nimport { AppService } from '../../services/app.service';\r\nimport { NavService } from '../../navigation/nav.service';\r\nimport { AppTrackData } from '../../navigation/tracks/app-track-data';\r\n\r\n@Component({\r\n    selector: 'app-publish-complete',\r\n    templateUrl: './publish-complete.component.html',\r\n    styleUrls: ['./publish-complete.component.css']\r\n})\r\nexport class PublishCompleteComponent implements OnInit, OnDestroy {\r\n    public puzzle = null;\r\n    public username: string;\r\n    public password: string;\r\n\r\n    private subs: Subscription[] = [];\r\n\r\n    constructor(\r\n        private navService: NavService<AppTrackData>,\r\n        private appService: AppService,\r\n        private activePuzzle: IActivePuzzle\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        if (!this.activePuzzle.hasPuzzle) {\r\n            this.navService.goHome();\r\n        }\r\n    }\r\n    \r\n    ngOnDestroy() {\r\n        this.subs.forEach(sub => sub.unsubscribe());\r\n    }\r\n\r\n    onContinue() {\r\n        this.navService.goHome();\r\n    }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VpL3B1enpsZS1wdWJsaXNoaW5nL3B1Ymxpc2gtZ3JpZC9wdWJsaXNoLWdyaWQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Puzzle } from 'src/app/model/puzzle';\nimport { Subscription } from 'rxjs';\nimport { IActivePuzzle } from 'src/app/services/puzzle-management.service';\nimport { Router, ChildActivationStart } from '@angular/router';\nimport { GridCell } from 'src/app/model/grid-cell';\nimport { UpdateCell } from 'src/app/services/modifiers/update-cell';\nimport { ClearShading } from 'src/app/services/modifiers/clear-shading';\nimport { DownloadInstance } from '../../components/download-button/download-button.component';\nimport { AppService } from '../../services/app.service';\nimport { GridComponent } from '../../components/grid/grid.component';\nimport { NavService } from '../../navigation/nav.service';\nimport { AppTrackData } from '../../navigation/tracks/app-track-data';\n\n@Component({\n  selector: 'app-publish-grid',\n  templateUrl: './publish-grid.component.html',\n  styleUrls: ['./publish-grid.component.css']\n})\nexport class PublishGridComponent implements OnInit {\n    public puzzle: Puzzle = null;\n    private subs: Subscription[] = [];\n    public color: string;\n\n    @ViewChild(GridComponent, { static: false }) \n    public gridControl: GridComponent;\n\n    constructor(\n        private navService: NavService<AppTrackData>,\n        private appService: AppService,\n        private activePuzzle: IActivePuzzle, \n    ) { }\n\n    public ngOnInit() {\n        // TO DO: record preferences for next time\n        this.color = \"#ffebcd\";\n\n        if (!this.activePuzzle.hasPuzzle) {\n            this.navService.goHome();\n        } else {\n            this.subs.push(\n                this.activePuzzle.observe().subscribe(\n                    (puzzle) => {\n                        this.puzzle = puzzle;\n                    }\n            ));\n        }\n    }\n\n    public ngOnDestroy(){\n        this.subs.forEach(sub => sub.unsubscribe());\n    }\n\n    public onCellClick(cell: GridCell) {\n        this.appService.clear();\n        // overwrite if a new color, clear if the same color\n        let color: string = cell.shading && cell.shading === this.color ? null : this.color;\n        this.activePuzzle.update(new UpdateCell(cell.id, { shading: color }));\n    }\n\n    public onContinue() {\n        this.appService.clear();\n        this.navService.navigate(\"continue\");\n    }\n\n    public onBack() {\n        this.appService.clear();\n        this.navService.navigate(\"back\");\n    }\n\n    public onClearAll() {\n        this.appService.clear();\n        this.activePuzzle.update(new ClearShading());\n    }\n\n    public onDownload(instance: DownloadInstance) {\n        this.appService.clear();\n        instance.download(\"grid-image.png\", this.gridControl.getDataUrl());\n    }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VpL3B1enpsZS1wdWJsaXNoaW5nL3B1Ymxpc2gtbG9naW4vcHVibGlzaC1sb2dpbi5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { AppService, AppStatus } from 'src/app/ui/services/app.service';\nimport { IActivePuzzle } from 'src/app/services/puzzle-management.service';\nimport { Router } from '@angular/router';\nimport { UIResult } from '../../common';\nimport { AppSettingsService } from 'src/app/services/app-settings.service';\nimport { AppSettings } from 'src/app/services/common';\nimport { NavService } from '../../navigation/nav.service';\nimport { AppTrackData } from '../../navigation/tracks/app-track-data';\n\n@Component({\n    selector: 'app-publish-login',\n    templateUrl: './publish-login.component.html',\n    styleUrls: ['./publish-login.component.css']\n})\nexport class PublishLoginComponent implements OnInit {\n    private subs: Subscription[] = [];\n    public appStatus: AppStatus;\n    public settings: AppSettings;\n\n    constructor(\n        private navService: NavService<AppTrackData>,\n        private activePuzzle: IActivePuzzle,\n        private appService: AppService,\n        private settingsService: AppSettingsService,\n    ) { }\n\n    ngOnInit() {\n        if (!this.activePuzzle.hasPuzzle) {\n            this.navService.goHome();\n        } else {\n            this.settings = this.settingsService.settings;\n            this.subs.push(this.appService.getObservable().subscribe(s => this.appStatus = s));\n        }\n    }\n\n    public onClose(result: UIResult) {\n        const puzzle = this.activePuzzle.puzzle;\n\n        this.appService.clear();\n        if (result === \"cancel\" || result===\"back\") {\n            this.navService.navigate(\"back\");\n        } else {\n            this.navService.navigate(\"continue\");\n        }\n    }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VpL3B1enpsZS1wdWJsaXNoaW5nL3B1Ymxpc2gtb3B0aW9ucy9wdWJsaXNoLW9wdGlvbnMuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { AppService, AppStatus } from 'src/app/ui/services/app.service';\r\nimport { TextStyle } from 'src/app/model/text-style';\r\nimport { IActivePuzzle } from 'src/app/services/puzzle-management.service';\r\nimport { Clue } from 'src/app/model/clue';\r\nimport { Puzzle } from 'src/app/model/puzzle';\r\nimport { UpdatePublsihOptions } from 'src/app/services/modifiers/update-publish-options';\r\nimport { PublishOptionsM } from 'src/app/services/modifiers/mutable-model/publish-options-m';\r\nimport { NavService } from '../../navigation/nav.service';\r\nimport { AppTrackData } from '../../navigation/tracks/app-track-data';\r\n\r\n@Component({\r\n    selector: 'app-publish-options',\r\n    templateUrl: './publish-options.component.html',\r\n    styleUrls: ['./publish-options.component.css']\r\n})\r\nexport class PublishOptionsComponent implements OnInit, OnDestroy {\r\n    public puzzle: Puzzle = null;\r\n    public appStatus: AppStatus;\r\n    public sample: Clue[];\r\n    public publishOptions: PublishOptionsM = null;\r\n    \r\n    private subs: Subscription[] = [];\r\n\r\n    constructor(\r\n        private navService: NavService<AppTrackData>,\r\n        private appService: AppService,\r\n        private activePuzzle: IActivePuzzle,\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n\r\n        this.subs.push(this.appService.getObservable().subscribe(appStatus => this.appStatus = appStatus));\r\n\r\n        if (!this.activePuzzle.hasPuzzle) {\r\n            this.navService.goHome();\r\n        } else {\r\n\r\n            this.subs.push(\r\n                this.activePuzzle.observe().subscribe(\r\n                    (puzzle) => {\r\n                        if (puzzle) {\r\n                            this.puzzle = puzzle;\r\n                            this.sample = this.puzzle.clues.filter((c, i) => i < 3);\r\n                            this.publishOptions = this.puzzle.publishOptions;\r\n                        }\r\n                    }\r\n                ));\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.subs.forEach(sub => sub.unsubscribe());\r\n    }\r\n\r\n    onContinue() {\r\n        this.activePuzzle.update(new UpdatePublsihOptions(this.publishOptions));\r\n        this.navService.navigate(\"continue\");\r\n    }\r\n\r\n    onBack() {\r\n        this.activePuzzle.update(new UpdatePublsihOptions(this.publishOptions));\r\n        this.navService.navigate(\"back\");\r\n    }\r\n\r\n    onGrid() {\r\n        this.activePuzzle.update(new UpdatePublsihOptions(this.publishOptions));\r\n        this.navService.navigate(\"grid\");\r\n    }\r\n\r\n}\r\n","export default \".title {\\r\\n    color: #0b6d90;\\r\\n    font-weight: bold;\\r\\n    font-size:  x-large;\\r\\n  }\\r\\n\\r\\n.mug-shot {\\r\\n    border: 1px solid;\\r\\n    padding: 8px;\\r\\n}\\r\\n\\r\\n.mug-shot img {\\r\\n    height: 100px;\\r\\n    width: 80px;\\r\\n}\\r\\n\\r\\n.anchor-like {\\r\\n    font-weight: bolder;\\r\\n    color: #0b6d90;\\r\\n    padding: 15px;\\r\\n}\\r\\n\\r\\n.anchor-like:hover {\\r\\n    text-decoration: underline;\\r\\n}\\r\\n\\r\\n.body-top {\\r\\n    border-bottom: 1px black dashed;\\r\\n    padding-bottom: 1px;\\r\\n    margin-bottom: 0px;\\r\\n}\\r\\n\\r\\n.smaller {\\r\\n    font-size: smaller;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdWkvcHV6emxlLXB1Ymxpc2hpbmcvcHVibGlzaC1wcmVhbWJsZS9wdWJsaXNoLXByZWFtYmxlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxjQUFjO0lBQ2QsaUJBQWlCO0lBQ2pCLG1CQUFtQjtFQUNyQjs7QUFFRjtJQUNJLGlCQUFpQjtJQUNqQixZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksYUFBYTtJQUNiLFdBQVc7QUFDZjs7QUFFQTtJQUNJLG1CQUFtQjtJQUNuQixjQUFjO0lBQ2QsYUFBYTtBQUNqQjs7QUFFQTtJQUNJLDBCQUEwQjtBQUM5Qjs7QUFFQTtJQUNJLCtCQUErQjtJQUMvQixtQkFBbUI7SUFDbkIsa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksa0JBQWtCO0FBQ3RCIiwiZmlsZSI6InNyYy9hcHAvdWkvcHV6emxlLXB1Ymxpc2hpbmcvcHVibGlzaC1wcmVhbWJsZS9wdWJsaXNoLXByZWFtYmxlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudGl0bGUge1xyXG4gICAgY29sb3I6ICMwYjZkOTA7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgIGZvbnQtc2l6ZTogIHgtbGFyZ2U7XHJcbiAgfVxyXG5cclxuLm11Zy1zaG90IHtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkO1xyXG4gICAgcGFkZGluZzogOHB4O1xyXG59XHJcblxyXG4ubXVnLXNob3QgaW1nIHtcclxuICAgIGhlaWdodDogMTAwcHg7XHJcbiAgICB3aWR0aDogODBweDtcclxufVxyXG5cclxuLmFuY2hvci1saWtlIHtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkZXI7XHJcbiAgICBjb2xvcjogIzBiNmQ5MDtcclxuICAgIHBhZGRpbmc6IDE1cHg7XHJcbn1cclxuXHJcbi5hbmNob3ItbGlrZTpob3ZlciB7XHJcbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcclxufVxyXG5cclxuLmJvZHktdG9wIHtcclxuICAgIGJvcmRlci1ib3R0b206IDFweCBibGFjayBkYXNoZWQ7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogMXB4O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMHB4O1xyXG59XHJcblxyXG4uc21hbGxlciB7XHJcbiAgICBmb250LXNpemU6IHNtYWxsZXI7XHJcbn1cclxuIl19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { AppStatus, AppService } from 'src/app/ui/services/app.service';\r\nimport { UpdatePreamble } from 'src/app/services/modifiers/update-preamble';\r\nimport { IActivePuzzle } from 'src/app/services/puzzle-management.service';\r\nimport { Clue } from 'src/app/model/clue';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { AppSettingsService } from 'src/app/services/app-settings.service';\r\nimport { AppSettings } from 'src/app/services/common';\r\nimport { NavService } from '../../navigation/nav.service';\r\nimport { AppTrackData } from '../../navigation/tracks/app-track-data';\r\n\r\n@Component({\r\n    selector: 'app-publish-preamble',\r\n    templateUrl: './publish-preamble.component.html',\r\n    styleUrls: ['./publish-preamble.component.css']\r\n})\r\nexport class PublishPreambleComponent implements OnInit {\r\n    public puzzle = null;\r\n    public form: FormGroup;\r\n    public appStatus: AppStatus;\r\n    public sample: Clue[];\r\n    public today = new Date();\r\n    public appSettings: AppSettings;\r\n\r\n    private subs: Subscription[] = [];\r\n\r\n    constructor(\r\n        private navService: NavService<AppTrackData>,\r\n        private appService: AppService,\r\n        private authService: AuthService,\r\n        private appSettingsService: AppSettingsService,\r\n        private activePuzzle: IActivePuzzle,\r\n        private formBuilder: FormBuilder) { }\r\n\r\n    ngOnInit() {\r\n        window.scrollTo(0, 0);\r\n        \r\n        this.subs.push(this.appService.getObservable().subscribe(appStatus => this.appStatus = appStatus));\r\n        this.subs.push(this.appSettingsService.observe().subscribe(settings => this.appSettings = settings));\r\n\r\n        if (!this.activePuzzle.hasPuzzle) {\r\n            this.navService.goHome();\r\n        } else {\r\n\r\n\r\n            this.form = this.formBuilder.group({\r\n                title: [\"\"],\r\n                header: { ops: [] },\r\n                body: { ops: [] }\r\n            });\r\n\r\n            this.subs.push(\r\n                this.activePuzzle.observe().subscribe(\r\n                    (puzzle) => {\r\n                        this.puzzle = puzzle;\r\n                        if (puzzle) {\r\n                            // this.header = puzzle.notes.header;\r\n                            this.sample = this.puzzle.clues.filter((c, i) => i < 3);\r\n                            this.form.patchValue(puzzle.notes);\r\n                            this.form.patchValue({ title: puzzle.info.title});\r\n                        }\r\n                    }\r\n                ));\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.subs.forEach(sub => sub.unsubscribe());\r\n    }\r\n\r\n    onContinue() {\r\n        this.activePuzzle.update(new UpdatePreamble(\r\n            this.form.value.title,\r\n            this.form.value.header,\r\n            this.form.value.body));\r\n\r\n        if (this.authService.getCredentials().authenticated) {\r\n            this.navService.navigate(\"continue\");\r\n        } else {\r\n            this.navService.navigate(\"authenticate\");\r\n        }\r\n    }\r\n\r\n    onBack() {\r\n        this.activePuzzle.update(new UpdatePreamble(\r\n            this.form.value.title,\r\n            this.form.value.header,\r\n            this.form.value.body));\r\n            \r\n            this.navService.navigate(\"back\");\r\n        }\r\n\r\n    public getUsername(): string {\r\n        return this.appSettings && this.appSettings.username ? \r\n            this.appSettings.username : \r\n            \"Somebody\"; \r\n    }\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VpL3B1enpsZS1wdWJsaXNoaW5nL3B1Ymxpc2gvcHVibGlzaC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit, OnDestroy, ViewChild, } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs/internal/Subscription';\r\nimport { PublicationService, PublishGridResult } from 'src/app/services/publication.service';\r\nimport { AppStatus, AppService } from 'src/app/ui/services/app.service';\r\nimport { IActivePuzzle } from 'src/app/services/puzzle-management.service';\r\nimport { Puzzle } from 'src/app/model/puzzle';\r\nimport { ApiSymbols, PublishStatus } from 'src/app/services/common';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { GridComponent } from '../../components/grid/grid.component';\r\nimport { NavService } from '../../navigation/nav.service';\r\nimport { AppTrackData } from '../../navigation/tracks/app-track-data';\r\nimport { UpdateInfo } from 'src/app/services/modifiers/update-info';\r\n\r\nexport type PublishActions = \"nothing\" | \"upload\" | \"publish\" | \"copy-post\" | \"copy-grid\" | \"replace-post\" | \"replace-grid\";\r\n\r\n@Component({\r\n    selector: 'app-publish',\r\n    templateUrl: './publish.component.html',\r\n    styleUrls: ['./publish.component.css']\r\n})\r\nexport class PublishComponent implements OnInit, OnDestroy {\r\n    public puzzle: Puzzle = null;\r\n    public appStatus: AppStatus;\r\n    public alreadyPublished = false;\r\n    public gridOnly = false;\r\n    public action: PublishActions = \"nothing\";\r\n\r\n    private subs: Subscription[] = [];\r\n\r\n    private gridControl: GridComponent;\r\n\r\n    @ViewChild(GridComponent, { static: true }) \r\n    set content(content: GridComponent) { this.gridControl = content };\r\n\r\n    constructor(\r\n        private navService: NavService<AppTrackData>,\r\n        private appService: AppService,\r\n        private authService: AuthService,\r\n        private activePuzzle: IActivePuzzle,\r\n        private publicationService: PublicationService\r\n        ) { }\r\n\r\n    public ngOnInit() {\r\n\r\n        if (!this.activePuzzle.hasPuzzle) {\r\n            this.navService.goHome();\r\n\r\n        } else if (!this.authService.getCredentials().authenticated) {\r\n            this.navService.navigate(\"authenticate\");\r\n\r\n        } else {\r\n            this.subs.push(this.appService.getObservable().subscribe(s => this.appStatus = s));\r\n\r\n            this.subs.push(\r\n                this.activePuzzle.observe().subscribe(\r\n                    (puzzle) => {\r\n                        if (puzzle) {\r\n                            this.puzzle = puzzle;\r\n                            this.alreadyPublished = !!puzzle.info.wordpressId;\r\n                            \r\n                            if (!this.alreadyPublished) {\r\n                                this.action = \"upload\";\r\n                            }\r\n    \r\n                            this.gridOnly = puzzle.grid && puzzle.clues === null;\r\n                            if (this.gridOnly) {\r\n                                this.action = \"copy-grid\";\r\n                            }\r\n                        }\r\n                    }\r\n                )\r\n            );\r\n        }\r\n    }\r\n\r\n    public ngOnDestroy() {\r\n        this.subs.forEach(sub => sub.unsubscribe());\r\n    }\r\n\r\n    public onContinue() {\r\n        this.appService.clear();\r\n\r\n        // TO DO: link the media on WP to the post id\r\n        // 1. first create a post with placeholder content, get back the post id\r\n        // 2. upload media with post id, get back url of image\r\n        // 3. update post with actual content incluidng the image url\r\n\r\n        switch (this.action) {\r\n            case \"upload\":\r\n                this.appService.setBusy();\r\n                this.publishPost(\"draft\");\r\n                break;\r\n            case \"publish\":\r\n                this.appService.setBusy();\r\n                this.publishPost(\"publish\");\r\n                break;\r\n            case \"copy-grid\":\r\n                this.appService.setBusy();\r\n                this.publishGrid();\r\n                break;\r\n            case \"copy-post\":\r\n                this.appService.setBusy();\r\n                this.publishPost(\"draft\");\r\n                break;\r\n            case \"replace-grid\":\r\n                this.appService.setAlert(\"info\", \"Sorry, this feature is still work in progress, we hope to have it finished soon.\")\r\n                break;\r\n            case \"replace-post\":\r\n                this.appService.setAlert(\"info\", \"Sorry, this feature is still work in progress, we hope to have it finished soon.\")\r\n                break;\r\n            default:\r\n                // do nothing\r\n                break;\r\n        }\r\n    }\r\n\r\n    public get hasCredentials(): boolean {\r\n        return this.authService.getCredentials() !== null;\r\n    }\r\n\r\n    public onBack() {\r\n        this.navService.navigate(\"back\");\r\n    }\r\n\r\n    private getGridImage(): string {\r\n        let result: string = null;\r\n\r\n        try {\r\n            result = this.gridControl.getDataUrl().replace(\"data:image/png;base64,\", \"\");\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    private publishPost(status: PublishStatus) {\r\n        let image = this.puzzle.publishOptions.includeGrid && this.puzzle.grid ?\r\n            this.getGridImage() :\r\n            null;\r\n\r\n        let promise: Promise<PublishGridResult> = image ?\r\n            this.publicationService.publishGrid(image, this.puzzle.info.title) :\r\n            Promise.resolve({ wordpressId: null, url: null }); \r\n        \r\n        promise.then((result) => {\r\n            return this.publicationService.publishPost(this.puzzle, result.url, status);\r\n        })\r\n        .then((result) => {\r\n            this.activePuzzle.update(new UpdateInfo({ wordPressId: result.wordpressId }));\r\n            this.appService.clearBusy();\r\n            this.navService.navigate(\"continue\");\r\n        })\r\n        .catch(error => {\r\n            if (error === ApiSymbols.AuthorizationFailure) {\r\n                this.appService.clear();\r\n                this.appService.setAlert(\"danger\", \"Username or password incorrect\");\r\n                this.authService.clearCredentials();\r\n                this.navService.navigate(\"authenticate\");\r\n            } else {\r\n                this.appService.clear();\r\n                this.appService.setAlert(\"danger\", \"ERROR: \" + error);\r\n            }\r\n        });\r\n    }\r\n\r\n    private publishGrid() {\r\n        let image = this.puzzle.grid ? this.getGridImage() : null;\r\n\r\n        if (image) {\r\n            this.publicationService.publishGrid(image, this.puzzle.info.title)\r\n            .then(() => {\r\n                this.appService.clearBusy();\r\n                this.navService.navigate(\"continue\");\r\n            })\r\n            .catch(error => {\r\n                if (error === ApiSymbols.AuthorizationFailure) {\r\n                    this.appService.clear();\r\n                    this.appService.setAlert(\"danger\", \"Username or password incorrect\");\r\n                    this.authService.clearCredentials();\r\n                    this.navService.navigate(\"authenticate\");\r\n                } else {\r\n                    this.appService.clear();\r\n                    this.appService.setAlert(\"danger\", \"ERROR: \" + error);\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n","export default \"table td {\\r\\n    padding: 0;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdWkvcHV6emxlLXNvbHZpbmcvYmxvZ2dlci9ibG9nZ2VyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxVQUFVO0FBQ2QiLCJmaWxlIjoic3JjL2FwcC91aS9wdXp6bGUtc29sdmluZy9ibG9nZ2VyL2Jsb2dnZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHRkIHtcclxuICAgIHBhZGRpbmc6IDA7XHJcbn0iXX0= */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { Clue } from 'src/app/model/clue';\r\nimport { Puzzle } from 'src/app/model/puzzle';\r\nimport { Clear } from 'src/app/services/modifiers/clear';\r\nimport { SelectClue } from 'src/app/services/modifiers/select-clue';\r\nimport { SelectNextClue } from 'src/app/services/modifiers/select-next-clue';\r\nimport { IActivePuzzle } from 'src/app/services/puzzle-management.service';\r\nimport { AppSettingsService } from 'src/app/services/app-settings.service';\r\nimport { AppService } from '../../services/app.service';\r\nimport { NavService } from '../../navigation/nav.service';\r\nimport { AppTrackData } from '../../navigation/tracks/app-track-data';\r\n\r\n@Component({\r\n  selector: 'app-blogger',\r\n  templateUrl: './blogger.component.html',\r\n  styleUrls: ['./blogger.component.css']\r\n})\r\nexport class BloggerComponent implements OnInit, OnDestroy {\r\n    public puzzle: Puzzle = null;\r\n    public appSettings;\r\n    private subs: Subscription[] = [];\r\n\r\n    constructor(\r\n        private navService: NavService<AppTrackData>,\r\n        private appService: AppService,\r\n        private activePuzzle: IActivePuzzle,\r\n        private appSettinsgService: AppSettingsService, \r\n    ) { }\r\n\r\n    ngOnInit() {\r\n\r\n        if (!this.activePuzzle.hasPuzzle) {\r\n            this.navService.goHome();\r\n        } else {\r\n            this.appSettings = this.appSettinsgService.settings;\r\n\r\n            this.subs.push(this.activePuzzle.observe().subscribe(puzzle => {\r\n                if (puzzle) {\r\n                    if (!puzzle.info.blogable) {\r\n                        this.navService.goHome();\r\n                    }\r\n                    this.puzzle = puzzle;\r\n\r\n                    //console.log(\"BLOGGER \" + JSON.stringify(puzzle.clues));\r\n                }\r\n            }));\r\n\r\n            this.subs.push(this.appSettinsgService.observe().subscribe(settings => this.appSettings = settings));\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(){\r\n        this.subs.forEach(sub => sub.unsubscribe());\r\n    }\r\n\r\n    onContinue() {\r\n        this.navService.navigate(\"continue\");\r\n    }\r\n\r\n    onBack() {\r\n        this.activePuzzle.update(new Clear());\r\n        this.navService.navigate(\"back\");\r\n    }\r\n\r\n    onSolver() {\r\n        this.navService.navigate(\"solve\");\r\n    }\r\n\r\n    onEditClues() {\r\n        this.navService.navigate(\"edit\");\r\n    }\r\n\r\n    onRowClick(clue: Clue) {\r\n        this.activePuzzle.update(new SelectClue(clue.id));\r\n    }\r\n\r\n    onEditorClose(clue: Clue, reason: string) {\r\n        if (reason === \"cancel\") {\r\n            this.activePuzzle.update(new Clear());\r\n        } else {\r\n            this.activePuzzle.update(new SelectNextClue(clue.id));\r\n        }\r\n    }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VpL3B1enpsZS1zb2x2aW5nL3NvbHZlci9zb2x2ZXIuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit, HostListener, OnDestroy } from '@angular/core';\r\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ClueEditorComponent } from '../../components/clue-editor/clue-editor.component';\r\nimport { Subscription } from 'rxjs';\r\nimport { Clue } from 'src/app/model/clue';\r\nimport { GridCell } from 'src/app/model/grid-cell';\r\nimport { Puzzle } from 'src/app/model/puzzle';\r\nimport { IActivePuzzle } from 'src/app/services/puzzle-management.service';\r\nimport { SelectClueByCell } from 'src/app/services/modifiers/select-clue-by-cell';\r\nimport { Clear } from 'src/app/services/modifiers/clear';\r\nimport { NavService } from '../../navigation/nav.service';\r\nimport { AppTrackData } from '../../navigation/tracks/app-track-data';\r\n\r\n@Component({\r\n    selector: 'app-solver',\r\n    templateUrl: './solver.component.html',\r\n    styleUrls: ['./solver.component.css']\r\n})\r\nexport class SolverComponent implements OnInit, OnDestroy {\r\n    private modalRef: NgbModalRef = null;\r\n    public puzzle: Puzzle = null;\r\n    private subs: Subscription[] = [];\r\n\r\n    constructor(\r\n        private navService: NavService<AppTrackData>,\r\n        private activePuzzle: IActivePuzzle, \r\n        private modalService: NgbModal,\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n\r\n        if (!this.activePuzzle.hasPuzzle) {\r\n            this.navService.goHome();\r\n        } else {\r\n            this.subs.push(\r\n                this.activePuzzle.observe().subscribe(\r\n                    (puzzle) => {\r\n                        if (puzzle) {\r\n                            if (!puzzle.info.solveable) {\r\n                                this.navService.goHome();\r\n                            }\r\n                             this.puzzle = puzzle;\r\n\r\n                            //console.log(\"SOLVER \" + JSON.stringify(puzzle));\r\n                        }\r\n                    }\r\n            ));\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(){\r\n        this.subs.forEach(sub => sub.unsubscribe());\r\n    }\r\n\r\n    @HostListener('document:keypress', ['$event'])\r\n    handleKeyboardEvent(event: KeyboardEvent) {\r\n        if (this.puzzle && !this.modalRef) {\r\n            if (event.key === \"Enter\") {\r\n                event.stopPropagation();\r\n                let clue = this.puzzle.getSelectedClue();\r\n                if (clue) { \r\n                    this.openEditor(clue, null);\r\n                }\r\n            } else if (/[a-zA-Z]/.test(event.key)) {\r\n                event.stopPropagation();\r\n                let clue = this.puzzle.getSelectedClue();\r\n                if (clue) {\r\n                    this.openEditor(clue, event.key);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    onContinue() {\r\n        this.activePuzzle.update(new Clear());\r\n        this.navService.navigate(\"continue\");\r\n    }\r\n\r\n    onBack() {\r\n        this.activePuzzle.update(new Clear());\r\n        this.navService.navigate(\"back\");\r\n    }\r\n\r\n    onBlogger() {\r\n        this.navService.navigate(\"blog\");\r\n    }\r\n\r\n    onClueClick(clue: Clue) {\r\n        this.openEditor(clue, null);\r\n    }\r\n\r\n    onCellClick(cell: GridCell) {\r\n\r\n        if (!cell.highlight) {\r\n            this.activePuzzle.update(new SelectClueByCell(cell));\r\n        } else {\r\n            let clue = this.puzzle.getSelectedClue();\r\n\r\n            if (clue) {\r\n                this.openEditor(clue, null);\r\n            }\r\n        }\r\n    }\r\n\r\n    private openEditor(clue, starterText: string) {\r\n        if (!clue.redirect) {\r\n            setTimeout(\r\n                () => {\r\n                    this.modalRef = this.modalService.open(ClueEditorComponent, { backdrop: \"static\"});\r\n                    this.modalRef.componentInstance.clueId = clue.id;\r\n                    this.modalRef.componentInstance.starterText = starterText;\r\n                    this.subs.push(this.modalRef.componentInstance.close.subscribe((result) => {\r\n                        this.modalRef.close();\r\n                        this.modalRef = null;\r\n                    }));\r\n                    // this.modalRef.result.finally(() => this.modalRef = null);\r\n                },\r\n                0\r\n            );\r\n        }\r\n    }\r\n}\r\n","\r\nimport { Injectable, OnDestroy, Type } from '@angular/core';\r\nimport { BehaviorSubject, Observable, timer, Subscription } from 'rxjs';\r\nimport { Alert, AlertType } from '../common';\r\nimport { PuzzleProvider, Base64Encoded } from 'src/app/model/interfaces';\r\n\r\n// TO DO: do we still need this?\r\nexport type LoginCallback = () => void;\r\n\r\nexport type OpenPuzzleAction = \"openByDate\" | \"openLatest\";\r\n\r\nexport class AppStatus {\r\n    constructor(\r\n        public readonly busy: boolean,\r\n        public readonly late: boolean,\r\n        public readonly alerts: readonly Alert[],\r\n    ) { }\r\n}\r\n\r\nexport interface OpenPuzzleParamters {\r\n    provider: PuzzleProvider,\r\n    username?: string;\r\n    password?: string;\r\n    title?: string,\r\n    sourceUrl?: string,\r\n    sourceText?: string,\r\n    sourceDataB64?: Base64Encoded,\r\n    serialNumber?: number,\r\n    date?: Date,\r\n    setter?: string,\r\n}\r\n\r\nclass ActivityMonitor {\r\n    public busy: boolean = false;\r\n    public late: boolean = false;\r\n    public busyCounter: number = 0;\r\n\r\n    public clear() {\r\n        this.busy = false;\r\n        this.late = false;\r\n        this.busyCounter = 0;\r\n    }\r\n\r\n    public setBusy() {\r\n        this.busy = true;\r\n        this.late = false;\r\n        this.busyCounter = 0;\r\n    }\r\n\r\n    public onTick(): boolean {\r\n        let emitEvent = false;\r\n\r\n        if (this.busy) {\r\n            this.busyCounter++;\r\n            if (this.busyCounter === 2) {\r\n                this.late = true;\r\n                emitEvent = true;\r\n            }\r\n        }\r\n        return emitEvent;\r\n    }\r\n}\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AppService implements OnDestroy {\r\n    private _activityMonitor: ActivityMonitor = new ActivityMonitor();\r\n    private alerts: Alert[] = [];\r\n    private _onLogin: LoginCallback = null;\r\n    private subs: Subscription[] = [];\r\n    private _openPuzzleParameters: OpenPuzzleParamters;\r\n\r\n    private bs: BehaviorSubject<AppStatus>;\r\n\r\n    constructor() {\r\n        this.bs = new BehaviorSubject<AppStatus>(\r\n            new AppStatus(\r\n                false,\r\n                false,\r\n                []));\r\n\r\n        // add a timer that records how long the app has been busy\r\n        // when this time passes a threshold mark the app as late\r\n        this.subs.push(timer(100, 100).subscribe((t) => {\r\n            if (this._activityMonitor.onTick()) {\r\n                this.emitNext();\r\n            }\r\n        }));\r\n    }\r\n\r\n    public ngOnDestroy() {\r\n        this.subs.forEach(s => s.unsubscribe());\r\n    }\r\n\r\n    public getObservable(): Observable<AppStatus> {\r\n        return this.bs.asObservable();\r\n    }\r\n\r\n    public get openPuzzleParameters(): OpenPuzzleParamters {\r\n        return this._openPuzzleParameters;\r\n    }\r\n\r\n    public get loginCallback(): LoginCallback {\r\n        return this._onLogin;\r\n    }\r\n\r\n    public clear() {\r\n        this.clearLoginCallback();\r\n        this.clearAlerts();\r\n        this.clearBusy();\r\n    }\r\n\r\n    public setOpenPuzzleParams(params: OpenPuzzleParamters) {\r\n        this._openPuzzleParameters = params;\r\n    }\r\n\r\n    public clearOpenPuzzleParams() {\r\n        this._openPuzzleParameters = null;\r\n    }\r\n\r\n    public setLoginCallback(fn: LoginCallback) {\r\n        this._onLogin = fn;\r\n    }\r\n\r\n    public clearLoginCallback() {\r\n        this._onLogin = null;\r\n    }\r\n\r\n    public setBusy() {\r\n        this._activityMonitor.setBusy();\r\n        this.emitNext();\r\n    }\r\n\r\n    public clearBusy() {\r\n        this._activityMonitor.clear();\r\n        this.emitNext();\r\n    }\r\n\r\n    public setAlert(type: AlertType, message: string) {\r\n        this.alerts.push(new Alert(type, message));\r\n        this.emitNext();\r\n    }\r\n\r\n    public clearAlerts() {\r\n        this.alerts = [];\r\n        this.emitNext();\r\n    }\r\n\r\n    private emitNext() {\r\n        let alerts = JSON.parse(JSON.stringify(this.alerts));\r\n        this.bs.next(new AppStatus(this._activityMonitor.busy, this._activityMonitor.late, alerts));\r\n    }\r\n\r\n}\r\n\r\n","import { WritingDirection, GridNavigation } from 'src/app/model/interfaces';\r\nimport { Puzzle } from 'src/app/model/puzzle';\r\nimport { IPuzzleModifier } from 'src/app/services/modifiers/puzzle-modifier';\r\nimport { UpdateCell } from 'src/app/services/modifiers/update-cell';\r\nimport { SelectCellsForEdit } from 'src/app/services/modifiers/select-cells-for-edit';\r\nimport { Clear } from 'src/app/services/modifiers/clear';\r\nimport { MakeCellEditable } from 'src/app/services/modifiers/make-cell-editable';\r\nimport { GridCellEditor } from './grid-cell-editor';\r\nimport { GridCell } from 'src/app/model/grid-cell';\r\n\r\n// After text entry the editor alwyas moves on to the next empty cell: left-right then top-bottom\r\nexport class GridCellEditorEmptyFluid extends GridCellEditor {\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    public onGridText(puzzle: Puzzle, text: string, writingDirection: WritingDirection): IPuzzleModifier[] {\r\n        let result: IPuzzleModifier[] = [];\r\n        let context = this.getEditContext(puzzle);\r\n\r\n        result.push(new Clear());\r\n\r\n        if (context.editCell) {\r\n            // update the text\r\n            result.push(new UpdateCell(context.editCell.id, { content: text.toUpperCase() }));\r\n\r\n            // decide what to do next\r\n            let next = this.getNextEditableCell(puzzle, context.editCell, \"right\");\r\n\r\n            if (next) {\r\n                result.push(new SelectCellsForEdit([next]));\r\n                result.push(new MakeCellEditable(next.id));\r\n            }\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    // only look for empty cells\r\n    protected getNextEditableCell(puzzle: Puzzle, start: GridCell, orientation: GridNavigation): GridCell {\r\n        let result: GridCell = null;\r\n\r\n        if (start) {\r\n            let navigator = puzzle.grid.getNavigator(start.id, orientation);\r\n            \r\n            //skip the start cell\r\n            navigator.next();\r\n            \r\n            for (let next = navigator.next(); !next.done; next = navigator.next()) {\r\n                if (next.value.id === start.id) {\r\n                    break;\r\n                }\r\n                if (next.value.light && !next.value.content && next.value.content.trim().length === 0) {\r\n                    result = next.value as GridCell;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n}","import { WritingDirection, GridNavigation } from 'src/app/model/interfaces';\r\nimport { Puzzle } from 'src/app/model/puzzle';\r\nimport { IPuzzleModifier } from 'src/app/services/modifiers/puzzle-modifier';\r\nimport { UpdateCell } from 'src/app/services/modifiers/update-cell';\r\nimport { SelectCellsForEdit } from 'src/app/services/modifiers/select-cells-for-edit';\r\nimport { Clear } from 'src/app/services/modifiers/clear';\r\nimport { MakeCellEditable } from 'src/app/services/modifiers/make-cell-editable';\r\nimport { GridCellEditor } from './grid-cell-editor';\r\nimport { GridCell } from 'src/app/model/grid-cell';\r\n\r\n// After text entry the editor alwyas moves on to the next cell: left-right then top-bottom\r\nexport class GridCellEditorFluid extends GridCellEditor {\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    public onGridText(puzzle: Puzzle, text: string, writingDirection: WritingDirection): IPuzzleModifier[] {\r\n        let result: IPuzzleModifier[] = [];\r\n        let context = this.getEditContext(puzzle);\r\n\r\n        result.push(new Clear());\r\n\r\n        if (context.editCell) {\r\n            // update the text\r\n            result.push(new UpdateCell(context.editCell.id, { content: text.toUpperCase() }));\r\n\r\n            // decide what to do next\r\n            let next = this.getNextEditableCell(puzzle, context.editCell, \"right\");\r\n\r\n            if (next) {\r\n                result.push(new SelectCellsForEdit([next]));\r\n                result.push(new MakeCellEditable(next.id));\r\n            }\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    // only look for empty cells\r\n    protected getNextEditableCell(puzzle: Puzzle, start: GridCell, orientation: GridNavigation): GridCell {\r\n        let result: GridCell = null;\r\n\r\n        if (start) {\r\n            let navigator = puzzle.grid.getNavigator(start.id, orientation);\r\n            \r\n            //skip the start cell\r\n            navigator.next();\r\n            \r\n            for (let next = navigator.next(); !next.done; next = navigator.next()) {\r\n                if (next.value.id === start.id) {\r\n                    break;\r\n                }\r\n                if (next.value.light) {\r\n                    result = next.value as GridCell;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n}","import { GridCell } from 'src/app/model/grid-cell';\r\nimport { Direction, WritingDirection, GridNavigation } from 'src/app/model/interfaces';\r\nimport { Puzzle } from 'src/app/model/puzzle';\r\nimport { IPuzzleModifier } from 'src/app/services/modifiers/puzzle-modifier';\r\nimport { Clear } from 'src/app/services/modifiers/clear';\r\nimport { SelectCellsForEdit } from 'src/app/services/modifiers/select-cells-for-edit';\r\nimport { MakeCellEditable } from 'src/app/services/modifiers/make-cell-editable';\r\nimport { UpdateCell } from 'src/app/services/modifiers/update-cell';\r\nimport { GridEditor } from './grid-editor';\r\n\r\nexport class GridCellEditor extends GridEditor {\r\n     constructor() {\r\n        super();\r\n    }\r\n\r\n    public startEdit(puzzle: Puzzle, entryCell: GridCell): IPuzzleModifier[] {\r\n        let result: IPuzzleModifier[] = [];\r\n\r\n        result.push(new Clear());\r\n        result.push(new SelectCellsForEdit([entryCell]));\r\n        result.push(new MakeCellEditable(entryCell.id));\r\n        return result;\r\n    }\r\n\r\n    public onGridText(puzzle: Puzzle, text: string, writingDirection: WritingDirection): IPuzzleModifier[] {\r\n        let result: IPuzzleModifier[] = [];\r\n        let context = this.getEditContext(puzzle);\r\n\r\n        if (context.editCell) {\r\n            result.push(new UpdateCell(context.editCell.id, { content: text.toUpperCase() }));\r\n        }\r\n        result.push(new Clear());\r\n\r\n        return result;\r\n    }\r\n\r\n    public onGridNavigation(puzzle: Puzzle, navigation: GridNavigation, position?: { x: number, y: number }): IPuzzleModifier[] {\r\n        let result: IPuzzleModifier[] = [];\r\n        let context = this.getEditContext(puzzle);\r\n\r\n        result.push(new Clear());\r\n        let next: GridCell = null;\r\n\r\n        if (navigation === \"absolute\") {\r\n            next = puzzle.grid.cellAt(position.x, position.y);\r\n        } else {\r\n            if (context.editCell) {\r\n                next = this.getNextEditableCell(puzzle, context.editCell, navigation);\r\n            }\r\n        }\r\n\r\n        if (next) {\r\n            result.push(new SelectCellsForEdit([next]));\r\n            result.push(new MakeCellEditable(next.id));\r\n        }\r\n\r\n        return result;\r\n    }\r\n    \r\n}\r\n","import { Injectable } from '@angular/core';\nimport { GridEditor } from './grid-editor';\nimport { GridEditors } from '../../common';\nimport { GridCellEditor } from './grid-cell-editor';\nimport { GridCellEditorFluid } from './grid-cell-editor-fluid';\nimport { GridEntryEditor } from './grid-entry-editor';\nimport { GridEntryEditorFluid } from './grid-entry-editor-fluid';\nimport { GridCellEditorEmptyFluid } from './grid-cell-editor-empty-fluid';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class GridEditorService {\n\n    constructor() { }\n\n    public getEditor(token: Symbol): GridEditor {\n        let editor: GridEditor;\n\n        switch (token) {\n            case GridEditors.cellEditor:\n                editor = new GridCellEditor();\n                break;\n            case GridEditors.cellEditorFluid:\n                editor = new GridCellEditorFluid();\n                break;\n            case GridEditors.cellEditorEmptyFluid:\n                editor = new GridCellEditorEmptyFluid();\n                break;\n            case GridEditors.entryEditor:\n                editor = new GridEntryEditor();\n                break;\n            case GridEditors.entryEditorFluid:\n                editor = new GridEntryEditorFluid();\n                break;\n            default:\n                editor = new GridCellEditor();\n                break;\n        }\n        return editor;\n    }\n}\n","import { GridCell } from 'src/app/model/grid-cell';\r\nimport { Direction, WritingDirection, GridNavigation } from 'src/app/model/interfaces';\r\nimport { Puzzle } from 'src/app/model/puzzle';\r\nimport { IPuzzleModifier } from 'src/app/services/modifiers/puzzle-modifier';\r\nimport { JsonPipe } from '@angular/common';\r\n\r\nexport class EditContext { \r\n    constructor (\r\n        public readonly cells: ReadonlyArray<GridCell>,\r\n        public readonly editIndex: number, \r\n        public readonly entryDirection: Direction,\r\n    ) {}\r\n\r\n    public get editCell(): GridCell {\r\n        return this.cells[this.editIndex];\r\n    }\r\n};\r\n\r\nexport abstract class GridEditor {\r\n    \r\n    constructor() {}\r\n\r\n    public abstract startEdit(puzzle: Puzzle, entryCell: GridCell): IPuzzleModifier[];\r\n    public abstract onGridText(puzzle: Puzzle, text: string, writingDirection: WritingDirection): IPuzzleModifier[];\r\n    public abstract onGridNavigation(puzzle: Puzzle, navigation: GridNavigation, position?: { x: number, y: number }): IPuzzleModifier[];\r\n    \r\n    protected getEditContext(puzzle: Puzzle): EditContext {\r\n        let cells: GridCell[] = [];\r\n        let entryDirection: Direction = \"across\";\r\n        let editIndex = -1;\r\n\r\n        let nav = puzzle.grid.getNavigator(puzzle.grid.cellAt(0, 0).id, \"right\");\r\n\r\n        for (let item = nav.next(); !item.done; item = nav.next()) {\r\n            if (item.value.highlight) {\r\n                cells.push(item.value);\r\n            }\r\n        }\r\n\r\n        if (cells.length > 1) {\r\n            if (cells[0].x === cells[1].x) {\r\n                entryDirection = \"down\";\r\n            }\r\n        }\r\n\r\n        editIndex = cells.findIndex(c => c.edit);\r\n\r\n        return new EditContext(cells, editIndex, entryDirection);\r\n    }\r\n\r\n    protected getNextEditableCell(puzzle: Puzzle, start: GridCell, orientation: GridNavigation): GridCell {\r\n        let result: GridCell = null;\r\n\r\n        if (start) {\r\n            let navigator = puzzle.grid.getNavigator(start.id, orientation);\r\n            \r\n            //skip the start cell\r\n            navigator.next();\r\n            \r\n            for (let next = navigator.next(); !next.done; next = navigator.next()) {\r\n                if (next.value.id === start.id) {\r\n                    break;\r\n                }\r\n                if (next.value.light) {\r\n                    result = next.value;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n}\r\n","import { IPuzzleModifier } from 'src/app/services/modifiers/puzzle-modifier';\r\nimport { GridEntryEditor } from './grid-entry-editor';\r\nimport { EditContext } from './grid-editor';\r\nimport { Clear } from 'src/app/services/modifiers/clear';\r\nimport { Puzzle } from 'src/app/model/puzzle';\r\n\r\nexport class GridEntryEditorFluid extends GridEntryEditor {\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    protected onUnderflow(puzzle: Puzzle, context: EditContext, result: IPuzzleModifier[]) {\r\n\r\n// TO DO: implement this\r\n\r\n        result.push(new Clear());\r\n    }\r\n\r\n    protected onOverflow(puzzle: Puzzle, context: EditContext, result: IPuzzleModifier[]) {\r\n\r\n// TO DO: implement this\r\n\r\n    result.push(new Clear());\r\n    }\r\n\r\n}","import { WritingDirection, GridNavigation, Direction } from 'src/app/model/interfaces';\r\nimport { Puzzle } from 'src/app/model/puzzle';\r\nimport { IPuzzleModifier } from 'src/app/services/modifiers/puzzle-modifier';\r\nimport { UpdateCell } from 'src/app/services/modifiers/update-cell';\r\nimport { GridCell } from 'src/app/model/grid-cell';\r\nimport { GridEditor, EditContext } from './grid-editor';\r\nimport { Clear } from 'src/app/services/modifiers/clear';\r\nimport { SelectCellsForEdit } from 'src/app/services/modifiers/select-cells-for-edit';\r\nimport { MakeCellEditable } from 'src/app/services/modifiers/make-cell-editable';\r\n\r\nexport class GridEntryEditor extends GridEditor {\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    public startEdit(puzzle: Puzzle, entryCell: GridCell): IPuzzleModifier[] {\r\n        let result: IPuzzleModifier[] = [];\r\n\r\n        result.push(new Clear());\r\n        let entry = puzzle.grid.getGridEntryForCell(entryCell.id);\r\n\r\n        if (entry.length > 0) {\r\n            result.push(new SelectCellsForEdit(entry));\r\n\r\n            if (entry[0].content && entry[0].content.trim().length > 0) {\r\n                result.push(new MakeCellEditable(entryCell.id));\r\n            } else {\r\n                result.push(new MakeCellEditable(entry[0].id));\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    public onGridText(puzzle: Puzzle, text: string, writingDirection: WritingDirection): IPuzzleModifier[] {\r\n        let result: IPuzzleModifier[] = [];\r\n        let context = this.getEditContext(puzzle);\r\n\r\n        // update the text\r\n        result.push(new UpdateCell(context.editCell.id, { content: text.toUpperCase() }));\r\n\r\n        this.makeNextCellEditable(puzzle, context, writingDirection, result);\r\n\r\n        return result;\r\n    };\r\n\r\n    public onGridNavigation(puzzle: Puzzle, navigation: GridNavigation, position?: { x: number, y: number }): IPuzzleModifier[] {\r\n        let result: IPuzzleModifier[] = [];\r\n        let context = this.getEditContext(puzzle);\r\n        let writingDirection: WritingDirection;\r\n        let ctx: EditContext;\r\n\r\n        if ( this.isParallelMotion(context.entryDirection, navigation) || navigation ===\"absolute\") {\r\n\r\n            switch (navigation) {\r\n                case \"right\":\r\n                case \"down\":\r\n                    ctx = context;\r\n                    writingDirection = \"forward\";\r\n                    break;\r\n                \r\n                case \"left\":\r\n                case \"up\":\r\n                    ctx = context;\r\n                    writingDirection = \"backward\";\r\n                    break;\r\n                \r\n                case \"absolute\":\r\n                    if (position) {\r\n                        let cell = puzzle.grid.cellAt(position.x, position.y);\r\n\r\n                        if (cell.highlight) {\r\n                            let idx = context.cells.findIndex(c => c.id == cell.id);\r\n\r\n                            ctx = new EditContext(context.cells, idx, context.entryDirection);\r\n                            writingDirection = \"static\";\r\n                        }\r\n                    }\r\n                    break;\r\n\r\n                default:\r\n                    break;\r\n            }\r\n\r\n            if (writingDirection) {\r\n                this.makeNextCellEditable(puzzle, ctx, writingDirection, result);\r\n            } else {\r\n                result.push(new Clear());\r\n            }\r\n\r\n        } else {\r\n            result.push(new Clear());\r\n        }\r\n\r\n\r\n        return result;\r\n    }\r\n\r\n    private isParallelMotion(direction: Direction, navigation: GridNavigation) {\r\n        if (direction === \"across\") {\r\n            return navigation === \"left\" || navigation == \"right\";\r\n        } else {\r\n            return navigation === \"up\" || navigation == \"down\";\r\n        }\r\n    }\r\n\r\n    private makeNextCellEditable(puzzle: Puzzle, context: EditContext, writingDirection: WritingDirection, result: IPuzzleModifier[]) {\r\n        let nextIndex: number;\r\n\r\n        switch (writingDirection) {\r\n            case \"forward\":\r\n                nextIndex = context.editIndex + 1;\r\n                break;\r\n            \r\n            case \"backward\":\r\n                nextIndex = context.editIndex - 1;\r\n                break;\r\n            \r\n            case \"static\":\r\n            default:\r\n                nextIndex = context.editIndex;\r\n                break;\r\n        }\r\n\r\n        if (nextIndex < 0) {\r\n            this.onUnderflow(puzzle, context, result);\r\n        } else if (nextIndex >= context.cells.length) {\r\n            this.onOverflow(puzzle, context, result);\r\n        } else {\r\n            result.push(new MakeCellEditable(context.cells[nextIndex].id));\r\n        }\r\n    }\r\n\r\n    protected onUnderflow(puzzle: Puzzle, context: EditContext, result: IPuzzleModifier[]) {\r\n        result.push(new Clear());\r\n    }\r\n\r\n    protected onOverflow(puzzle: Puzzle, context: EditContext, result: IPuzzleModifier[]) {\r\n        result.push(new Clear());\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\nimport { GridParameters, GridControlOptions } from '../common';\nimport { Grid } from 'src/app/model/grid';\nimport { GridCell } from 'src/app/model/grid-cell';\n\nexport class GridDisplayInfo {\n    public top: number;\n    public left: number;\n    public height: number;\n    public width: number;\n    public unit: \"px\";\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class GridPainterService {\n\n    private gridParams: GridParameters = new GridParameters();\n\n    // TO DO: IMPORTANT!\n    // review this component for XSS vunerabilities\n\n\n    constructor() { }\n\n    // public getGridInfo(context: CanvasRenderingContext2D, grid: Grid, options: GridOptions): GridDisplayInfo {\n    //     let rect = context.canvas.getBoundingClientRect();\n\n    //     return {\n    //         top: rect.top + window.scrollX,\n    //         left: rect.bottom + window.scrollY,\n    //         height:rect.height,\n    //         width: rect.width,\n    //         unit: \"px\",\n    //     }\n    // }\n\n    public getCellInfo(context: CanvasRenderingContext2D, grid: Grid, cellId: string): GridDisplayInfo {\n        let cell = grid.cells.find(c => c.id === cellId);\n\n        if (!cell) {\n            return null;\n        } else {\n            // TO DO: this calculation is duplicated when drawing the grid\n            // make this a common function\n            const top = this.gridParams.gridPadding - this.gridParams.borderWidth + cell.y * this.gridParams.cellSize;\n            const left = this.gridParams.gridPadding - this.gridParams.borderWidth + cell.x * this.gridParams.cellSize;\n            const size = this.gridParams.cellSize + 2 * this.gridParams.borderWidth;\n\n            return {\n                top,\n                left,\n                height: size,\n                width: size,\n                unit: \"px\",\n            };\n        }\n    }\n\n    public drawGrid(context: CanvasRenderingContext2D, grid: Grid, options: GridControlOptions): void {\n\n        context.setTransform(1, 0, 0, 1, 0, 0);\n        context.fillStyle = \"white\";\n        context.fillRect(0, 0, context.canvas.width, context.canvas.height);\n\n        context.translate(this.gridParams.gridPadding, this.gridParams.gridPadding);\n\n        grid.cells.forEach((cell) => {\n            this.drawCell(context, cell, options);\n        });\n    }\n\n    private drawCell(context: CanvasRenderingContext2D, cell: GridCell, options: GridControlOptions) {\n        const top = cell.y * this.gridParams.cellSize;\n        const left = cell.x * this.gridParams.cellSize;\n        const size = this.gridParams.cellSize;\n\n        if (!cell.light) {\n            // blank-out  the cells that can't hold content\n            this.fillCell(context, left, top, this.gridParams.gridColor);\n\n        } else {\n\n            // highlight cells that are in focus\n            if (cell.highlight) {\n                this.fillCell(context, left, top, this.gridParams.highlightColor);\n            } else if (options && options.showShading && cell.shading)  {\n                this.fillCell(context, left, top, cell.shading);\n            }\n\n            // draw the caption\n            if (cell.caption.trim()) {\n                this.drawCaption(\n                    context,\n                    left,\n                    top,\n                    cell.caption.trim());\n            }\n\n            // draw the cell context\n            if (cell.content.trim()) {\n                this.drawContent(\n                    context,\n                    left,\n                    top,\n                    cell.content.trim());\n            }\n\n            // draw in bars\n            if (cell.rightBar) {\n                this.drawLine(\n                    context,\n                    [left + size - this.gridParams.barWidth + 1, top],\n                    [left + size - this.gridParams.barWidth + 1, top + size],\n                    this.gridParams.barWidth,\n                    this.gridParams.gridColor);\n            }\n\n            if (cell.bottomBar) {\n                this.drawLine(\n                    context,\n                    [left, top + size - this.gridParams.barWidth + 1],\n                    [left + size, top + size - this.gridParams.barWidth + 1],\n                    this.gridParams.barWidth,\n                    this.gridParams.gridColor);\n            }\n        }\n\n        // all cells get borders regardless of whether they hold content\n\n        // draw top border for cells at the top of the grid\n        if (cell.y === 0) {\n            this.drawLine(\n                context,\n                [left, top - 0.5],\n                [left + size, top - 0.5],\n                this.gridParams.borderWidth,\n                this.gridParams.gridColor);\n        }\n\n        // draw left border for cells at the left of the grid\n        if (cell.x === 0) {\n            this.drawLine(\n                context,\n                [left - 0.5, top],\n                [left - 0.5, top + size],\n                this.gridParams.borderWidth,\n                this.gridParams.gridColor);\n        }\n\n        // draw right border for all cells\n        this.drawLine(\n            context,\n            [left + size - 0.5, top],\n            [left + size - 0.5, top + size],\n            this.gridParams.borderWidth,\n            this.gridParams.gridColor);\n\n        // draw bottom border for all cells\n        this.drawLine(\n            context,\n            [left, top + size - 0.5],\n            [left + size, top + size - 0.5],\n            this.gridParams.borderWidth,\n            this.gridParams.gridColor);\n    }\n\n    private fillCell(context: CanvasRenderingContext2D, left: number, top: number, color: string) {\n        context.beginPath();\n        context.fillStyle = color;\n\n        context.rect(\n            left - 1 + this.gridParams.borderWidth,\n            top - 1 + this.gridParams.borderWidth,\n            this.gridParams.cellSize - this.gridParams.borderWidth * 2 + 1,\n            this.gridParams.cellSize - this.gridParams.borderWidth * 2 + 1);\n\n        context.fill();\n    }\n\n    private drawLine(context: CanvasRenderingContext2D, from: [number, number], to: [number, number], width: number, color: string) {\n        context.beginPath();\n        context.strokeStyle = color;\n        context.lineWidth = width;\n        context.moveTo(from[0], from[1]);\n        context.lineTo(to[0], to[1]);\n        context.stroke();\n    }\n\n    private drawCaption(context: CanvasRenderingContext2D, left: number, top: number, caption: string) {\n        context.font = this.gridParams.captionFont;\n        context.textAlign = \"start\";\n        context.textBaseline = \"hanging\";\n        context.direction = \"ltr\";\n        context.fillStyle = this.gridParams.gridColor;\n\n        context.fillText(\n            caption,\n            left + this.gridParams.cellPadding,\n            top + this.gridParams.cellPadding);\n    }\n\n    private drawContent(context: CanvasRenderingContext2D, left: number, top: number, content: string) {\n        context.font = this.gridParams.textFont;\n        context.textAlign = \"center\";\n        context.textBaseline = \"middle\";\n        context.direction = \"ltr\";\n        context.fillStyle = this.gridParams.gridColor;\n\n        context.fillText(\n            content,\n            left + this.gridParams.cellSize / 2,\n            top + this.gridParams.cellSize / 2);\n    }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiRoot: \"http://localhost:49323/api/\",\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}